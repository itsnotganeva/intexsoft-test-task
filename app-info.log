[DEBUG] 2022-02-16 00:14:20.128 [main] AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@67b467e9
[DEBUG] 2022-02-16 00:14:20.175 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[DEBUG] 2022-02-16 00:14:20.290 [main] ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\config\DatabaseConfig.class]
[DEBUG] 2022-02-16 00:14:20.307 [main] ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\io\Interactive.class]
[DEBUG] 2022-02-16 00:14:20.315 [main] ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\io\subinteractive\BankAccountMenuInteractive.class]
[DEBUG] 2022-02-16 00:14:20.317 [main] ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\io\subinteractive\BankMenuInteractive.class]
[DEBUG] 2022-02-16 00:14:20.318 [main] ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\io\subinteractive\ClientMenuInteractive.class]
[DEBUG] 2022-02-16 00:14:20.320 [main] ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\io\subinteractive\TransactionMenuInteractive.class]
[DEBUG] 2022-02-16 00:14:20.324 [main] ClassPathBeanDefinitionScanner - Ignored because not a concrete top-level class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\repository\BankAccountRepository.class]
[DEBUG] 2022-02-16 00:14:20.326 [main] ClassPathBeanDefinitionScanner - Ignored because not a concrete top-level class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\repository\BankRepository.class]
[DEBUG] 2022-02-16 00:14:20.327 [main] ClassPathBeanDefinitionScanner - Ignored because not a concrete top-level class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\repository\ClientRepository.class]
[DEBUG] 2022-02-16 00:14:20.330 [main] ClassPathBeanDefinitionScanner - Ignored because not a concrete top-level class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\repository\TransactionRepository.class]
[DEBUG] 2022-02-16 00:14:20.332 [main] ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\service\BankAccountService.class]
[DEBUG] 2022-02-16 00:14:20.338 [main] ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\service\BankService.class]
[DEBUG] 2022-02-16 00:14:20.341 [main] ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\service\ClientService.class]
[DEBUG] 2022-02-16 00:14:20.342 [main] ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\service\CommissionService.class]
[DEBUG] 2022-02-16 00:14:20.345 [main] ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\service\RateService.class]
[DEBUG] 2022-02-16 00:14:20.348 [main] ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\service\TransactionService.class]
[INFO ] 2022-02-16 00:14:20.489 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[DEBUG] 2022-02-16 00:14:20.523 [main] RepositoryConfigurationDelegate - Scanning for JPA repositories in packages by.ganevich.repository.
[DEBUG] 2022-02-16 00:14:20.537 [main] RepositoryComponentProvider - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\repository\BankAccountRepository.class]
[DEBUG] 2022-02-16 00:14:20.537 [main] RepositoryComponentProvider - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\repository\BankRepository.class]
[DEBUG] 2022-02-16 00:14:20.537 [main] RepositoryComponentProvider - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\repository\ClientRepository.class]
[DEBUG] 2022-02-16 00:14:20.537 [main] RepositoryComponentProvider - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\repository\CommissionRepository.class]
[DEBUG] 2022-02-16 00:14:20.537 [main] RepositoryComponentProvider - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\repository\RateRepository.class]
[DEBUG] 2022-02-16 00:14:20.537 [main] RepositoryComponentProvider - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\repository\TransactionRepository.class]
[INFO ] 2022-02-16 00:14:20.708 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 181 ms. Found 6 JPA repository interfaces.
[DEBUG] 2022-02-16 00:14:22.288 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'emBeanDefinitionRegistrarPostProcessor'
[DEBUG] 2022-02-16 00:14:22.372 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
[DEBUG] 2022-02-16 00:14:22.392 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
[DEBUG] 2022-02-16 00:14:22.394 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
[DEBUG] 2022-02-16 00:14:22.430 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[DEBUG] 2022-02-16 00:14:22.441 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[DEBUG] 2022-02-16 00:14:22.483 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[DEBUG] 2022-02-16 00:14:22.491 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[DEBUG] 2022-02-16 00:14:22.794 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'application'
[DEBUG] 2022-02-16 00:14:22.801 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[DEBUG] 2022-02-16 00:14:22.803 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
[DEBUG] 2022-02-16 00:14:23.095 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionAttributeSource'
[DEBUG] 2022-02-16 00:14:23.154 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionInterceptor'
[DEBUG] 2022-02-16 00:14:23.158 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
[DEBUG] 2022-02-16 00:14:23.231 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
[DEBUG] 2022-02-16 00:14:23.233 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
[DEBUG] 2022-02-16 00:14:23.301 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'databaseConfig'
[DEBUG] 2022-02-16 00:14:23.332 [main] PropertySourcesPropertyResolver - Found key 'postgres.username' in PropertySource 'class path resource [application.properties]' with value of type String
[DEBUG] 2022-02-16 00:14:23.341 [main] PropertySourcesPropertyResolver - Found key 'password' in PropertySource 'class path resource [application.properties]' with value of type String
[DEBUG] 2022-02-16 00:14:23.343 [main] PropertySourcesPropertyResolver - Found key 'url' in PropertySource 'class path resource [application.properties]' with value of type String
[DEBUG] 2022-02-16 00:14:23.344 [main] PropertySourcesPropertyResolver - Found key 'driver' in PropertySource 'class path resource [application.properties]' with value of type String
[DEBUG] 2022-02-16 00:14:23.346 [main] PropertySourcesPropertyResolver - Found key 'dialect' in PropertySource 'class path resource [application.properties]' with value of type String
[DEBUG] 2022-02-16 00:14:23.347 [main] PropertySourcesPropertyResolver - Found key 'packagesToScan' in PropertySource 'class path resource [application.properties]' with value of type String
[DEBUG] 2022-02-16 00:14:23.400 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'interactive'
[DEBUG] 2022-02-16 00:14:23.411 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'bankMenuInteractive'
[DEBUG] 2022-02-16 00:14:23.431 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'bankService'
[DEBUG] 2022-02-16 00:14:23.441 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'bankRepository'
[DEBUG] 2022-02-16 00:14:24.009 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'entityManagerFactory'
[DEBUG] 2022-02-16 00:14:24.020 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'dataSource'
[DEBUG] 2022-02-16 00:14:25.212 [main] logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[DEBUG] 2022-02-16 00:14:25.239 [main] DriverManagerDataSource - Loaded JDBC driver: org.hibernate.dialect.PostgreSQLDialect
[DEBUG] 2022-02-16 00:14:25.326 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'dataSource'
[DEBUG] 2022-02-16 00:14:25.718 [main] LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
[DEBUG] 2022-02-16 00:14:25.741 [main] LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@18b4aac2
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.DriverManagerDataSource@a4add54
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/JavaProjects/intexsoft-test-task/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		by.ganevich.entity.Bank
		by.ganevich.entity.BankAccount
		by.ganevich.entity.Client
		by.ganevich.entity.Commission
		by.ganevich.entity.Rate
		by.ganevich.entity.Transaction]
	Mapping files names []
	Properties []
[DEBUG] 2022-02-16 00:14:25.769 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-02-16 00:14:25.771 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-02-16 00:14:25.825 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2022-02-16 00:14:25.967 [main] Version - HHH000412: Hibernate ORM core version 5.6.3.Final
[DEBUG] 2022-02-16 00:14:25.969 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2022-02-16 00:14:26.210 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2022-02-16 00:14:26.229 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2022-02-16 00:14:26.230 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2022-02-16 00:14:26.251 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-02-16 00:14:26.493 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5db4c359
[DEBUG] 2022-02-16 00:14:26.493 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5db4c359
[DEBUG] 2022-02-16 00:14:26.493 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5db4c359
[DEBUG] 2022-02-16 00:14:26.494 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@f9b7332
[DEBUG] 2022-02-16 00:14:26.495 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4f8969b0
[DEBUG] 2022-02-16 00:14:26.496 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@8a589a2
[DEBUG] 2022-02-16 00:14:26.497 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@ec0c838
[DEBUG] 2022-02-16 00:14:26.497 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@ec0c838
[DEBUG] 2022-02-16 00:14:26.497 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@ec0c838
[DEBUG] 2022-02-16 00:14:26.499 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7997b197
[DEBUG] 2022-02-16 00:14:26.499 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7997b197
[DEBUG] 2022-02-16 00:14:26.499 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7997b197
[DEBUG] 2022-02-16 00:14:26.501 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@770d4269
[DEBUG] 2022-02-16 00:14:26.501 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@770d4269
[DEBUG] 2022-02-16 00:14:26.501 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@770d4269
[DEBUG] 2022-02-16 00:14:26.502 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@74bdc168
[DEBUG] 2022-02-16 00:14:26.502 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@74bdc168
[DEBUG] 2022-02-16 00:14:26.502 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@74bdc168
[DEBUG] 2022-02-16 00:14:26.505 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7cbee484
[DEBUG] 2022-02-16 00:14:26.505 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7cbee484
[DEBUG] 2022-02-16 00:14:26.505 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7cbee484
[DEBUG] 2022-02-16 00:14:26.507 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7807ac2c
[DEBUG] 2022-02-16 00:14:26.507 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7807ac2c
[DEBUG] 2022-02-16 00:14:26.507 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7807ac2c
[DEBUG] 2022-02-16 00:14:26.509 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4a067c25
[DEBUG] 2022-02-16 00:14:26.509 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4a067c25
[DEBUG] 2022-02-16 00:14:26.509 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4a067c25
[DEBUG] 2022-02-16 00:14:26.511 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@319dead1
[DEBUG] 2022-02-16 00:14:26.511 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@319dead1
[DEBUG] 2022-02-16 00:14:26.515 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@372ea2bc
[DEBUG] 2022-02-16 00:14:26.516 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@372ea2bc
[DEBUG] 2022-02-16 00:14:26.517 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@a486d78
[DEBUG] 2022-02-16 00:14:26.518 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@a486d78
[DEBUG] 2022-02-16 00:14:26.521 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5dcbb60
[DEBUG] 2022-02-16 00:14:26.524 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@49f5c307
[DEBUG] 2022-02-16 00:14:26.525 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3bffddff
[DEBUG] 2022-02-16 00:14:26.526 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3bffddff
[DEBUG] 2022-02-16 00:14:26.528 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4a9cc6cb
[DEBUG] 2022-02-16 00:14:26.528 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4a9cc6cb
[DEBUG] 2022-02-16 00:14:26.552 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@72b16078
[DEBUG] 2022-02-16 00:14:26.552 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@72b16078
[DEBUG] 2022-02-16 00:14:26.557 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@32057e6
[DEBUG] 2022-02-16 00:14:26.557 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@32057e6
[DEBUG] 2022-02-16 00:14:26.560 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@53499d85
[DEBUG] 2022-02-16 00:14:26.560 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@53499d85
[DEBUG] 2022-02-16 00:14:26.576 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ae81e1
[DEBUG] 2022-02-16 00:14:26.576 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ae81e1
[DEBUG] 2022-02-16 00:14:26.580 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@355e34c7
[DEBUG] 2022-02-16 00:14:26.580 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@355e34c7
[DEBUG] 2022-02-16 00:14:26.586 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@302fec27
[DEBUG] 2022-02-16 00:14:26.586 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@302fec27
[DEBUG] 2022-02-16 00:14:26.590 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@138fe6ec
[DEBUG] 2022-02-16 00:14:26.590 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@138fe6ec
[DEBUG] 2022-02-16 00:14:26.593 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@16423501
[DEBUG] 2022-02-16 00:14:26.593 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@16423501
[DEBUG] 2022-02-16 00:14:26.595 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4a9e6faf
[DEBUG] 2022-02-16 00:14:26.596 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4a9e6faf
[DEBUG] 2022-02-16 00:14:26.598 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7db534f2
[DEBUG] 2022-02-16 00:14:26.601 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7db534f2
[DEBUG] 2022-02-16 00:14:26.601 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7db534f2
[DEBUG] 2022-02-16 00:14:26.608 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@44a2b17b
[DEBUG] 2022-02-16 00:14:26.609 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@61d9efe0
[DEBUG] 2022-02-16 00:14:26.610 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@61d9efe0
[DEBUG] 2022-02-16 00:14:26.610 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@61d9efe0
[DEBUG] 2022-02-16 00:14:26.610 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6de54b40
[DEBUG] 2022-02-16 00:14:26.612 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6691490c
[DEBUG] 2022-02-16 00:14:26.614 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@538613b3
[DEBUG] 2022-02-16 00:14:26.614 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@538613b3
[DEBUG] 2022-02-16 00:14:26.616 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5c1bd44c
[DEBUG] 2022-02-16 00:14:26.616 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5c1bd44c
[DEBUG] 2022-02-16 00:14:26.617 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@67ef029
[DEBUG] 2022-02-16 00:14:26.617 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@67ef029
[DEBUG] 2022-02-16 00:14:26.618 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@740abb5
[DEBUG] 2022-02-16 00:14:26.618 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@740abb5
[DEBUG] 2022-02-16 00:14:26.619 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@64c2b546
[DEBUG] 2022-02-16 00:14:26.619 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@64c2b546
[DEBUG] 2022-02-16 00:14:26.620 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4cc547a
[DEBUG] 2022-02-16 00:14:26.621 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@b5cc23a
[DEBUG] 2022-02-16 00:14:26.621 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@b5cc23a
[DEBUG] 2022-02-16 00:14:26.621 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@b5cc23a
[DEBUG] 2022-02-16 00:14:26.622 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6928f576
[DEBUG] 2022-02-16 00:14:26.623 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6928f576
[DEBUG] 2022-02-16 00:14:26.623 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6928f576
[DEBUG] 2022-02-16 00:14:26.624 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3574e198
[DEBUG] 2022-02-16 00:14:26.624 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2de366bb
[DEBUG] 2022-02-16 00:14:26.625 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@e24ddd0
[DEBUG] 2022-02-16 00:14:26.625 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@e24ddd0
[DEBUG] 2022-02-16 00:14:26.626 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@e24ddd0
[DEBUG] 2022-02-16 00:14:26.626 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1ac85b0c
[DEBUG] 2022-02-16 00:14:26.627 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1ac85b0c
[DEBUG] 2022-02-16 00:14:26.627 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1ac85b0c
[DEBUG] 2022-02-16 00:14:26.627 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1ee4730
[DEBUG] 2022-02-16 00:14:26.628 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@724bade8
[DEBUG] 2022-02-16 00:14:26.630 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@67427b69
[DEBUG] 2022-02-16 00:14:26.630 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@67427b69
[DEBUG] 2022-02-16 00:14:26.631 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64f857e7
[DEBUG] 2022-02-16 00:14:26.633 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@73511076
[DEBUG] 2022-02-16 00:14:26.633 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@73511076
[DEBUG] 2022-02-16 00:14:26.635 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@514eedd8
[DEBUG] 2022-02-16 00:14:26.635 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@514eedd8
[DEBUG] 2022-02-16 00:14:26.635 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1cf2fed4
[DEBUG] 2022-02-16 00:14:26.636 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4d63b624
[DEBUG] 2022-02-16 00:14:26.637 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6815c5f2
[DEBUG] 2022-02-16 00:14:26.641 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7689ddef
[DEBUG] 2022-02-16 00:14:26.641 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7689ddef
[DEBUG] 2022-02-16 00:14:26.641 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@733c423e
[DEBUG] 2022-02-16 00:14:26.641 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4b629f13
[DEBUG] 2022-02-16 00:14:26.641 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@70925b45
[DEBUG] 2022-02-16 00:14:26.642 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1b9ea3e3
[DEBUG] 2022-02-16 00:14:26.642 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@aa22f1c
[DEBUG] 2022-02-16 00:14:26.642 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@55e7a35c
[DEBUG] 2022-02-16 00:14:26.642 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@37cd92d6
[DEBUG] 2022-02-16 00:14:26.642 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5922ae77
[DEBUG] 2022-02-16 00:14:26.660 [main] BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@74f7d1d2] into BootstrapContext; was [null]
[DEBUG] 2022-02-16 00:14:26.660 [main] ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@74f7d1d2) [was null]
[DEBUG] 2022-02-16 00:14:26.661 [main] BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5a62b2a4] into BootstrapContext; was [null]
[DEBUG] 2022-02-16 00:14:26.661 [main] BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1051817b] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@35293c05]
[DEBUG] 2022-02-16 00:14:26.839 [main] BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@74f7d1d2]
[DEBUG] 2022-02-16 00:14:26.839 [main] ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@74f7d1d2]
[DEBUG] 2022-02-16 00:14:26.899 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2022-02-16 00:14:26.900 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2022-02-16 00:14:26.902 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-02-16 00:14:26.903 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-02-16 00:14:26.904 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2022-02-16 00:14:26.906 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2022-02-16 00:14:26.906 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2022-02-16 00:14:26.909 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-02-16 00:14:26.910 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2022-02-16 00:14:26.911 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2022-02-16 00:14:26.912 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2022-02-16 00:14:26.913 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2022-02-16 00:14:26.913 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-02-16 00:14:26.914 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2022-02-16 00:14:26.921 [main] DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:postgresql://localhost:5432/bank-system]
[DEBUG] 2022-02-16 00:14:27.577 [main] JdbcEnvironmentInitiator - Database ->
       name : PostgreSQL
    version : 14.1
      major : 14
      minor : 1
[DEBUG] 2022-02-16 00:14:27.577 [main] JdbcEnvironmentInitiator - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.1
      major : 42
      minor : 3
[DEBUG] 2022-02-16 00:14:27.578 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2022-02-16 00:14:27.584 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
[DEBUG] 2022-02-16 00:14:27.612 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[DEBUG] 2022-02-16 00:14:27.921 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@30cecdca
[DEBUG] 2022-02-16 00:14:27.922 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@30cecdca
[DEBUG] 2022-02-16 00:14:27.924 [main] BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@64c2b546
[DEBUG] 2022-02-16 00:14:27.941 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@43cf6ea3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@37c5fc56]
[DEBUG] 2022-02-16 00:14:28.739 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2022-02-16 00:14:28.953 [main] AnnotationBinder - Binding entity from annotated class: by.ganevich.entity.Commission
[DEBUG] 2022-02-16 00:14:29.194 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-02-16 00:14:29.344 [main] EntityBinder - Import with entity name Commission
[DEBUG] 2022-02-16 00:14:29.373 [main] EntityBinder - Bind entity by.ganevich.entity.Commission on table commissionForClients
[DEBUG] 2022-02-16 00:14:29.636 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(commissionForClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:29.654 [main] ClassLoaderAccessImpl - Not known whether passed class name [by.ganevich.entity.Commission] is safe
[DEBUG] 2022-02-16 00:14:29.654 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : by.ganevich.entity.Commission
[DEBUG] 2022-02-16 00:14:29.658 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2022-02-16 00:14:29.673 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Commission:id]
[DEBUG] 2022-02-16 00:14:29.694 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2022-02-16 00:14:29.721 [main] PropertyBinder - Building property id
[DEBUG] 2022-02-16 00:14:29.740 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
[DEBUG] 2022-02-16 00:14:29.744 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(commissionForClients), mappingColumn=clientType, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:29.748 [main] PropertyBinder - MetadataSourceProcessor property clientType with lazy=false
[DEBUG] 2022-02-16 00:14:29.749 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Commission:clientType]
[DEBUG] 2022-02-16 00:14:29.750 [main] SimpleValueBinder - building SimpleValue for clientType
[DEBUG] 2022-02-16 00:14:29.750 [main] PropertyBinder - Building property clientType
[DEBUG] 2022-02-16 00:14:29.759 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(commissionForClients), mappingColumn=commission, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:29.828 [main] PropertyBinder - MetadataSourceProcessor property commission with lazy=false
[DEBUG] 2022-02-16 00:14:29.839 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Commission:commission]
[DEBUG] 2022-02-16 00:14:29.848 [main] SimpleValueBinder - building SimpleValue for commission
[DEBUG] 2022-02-16 00:14:29.858 [main] PropertyBinder - Building property commission
[DEBUG] 2022-02-16 00:14:29.950 [main] AnnotationBinder - Binding entity from annotated class: by.ganevich.entity.Transaction
[DEBUG] 2022-02-16 00:14:29.957 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-02-16 00:14:29.968 [main] EntityBinder - Import with entity name Transaction
[DEBUG] 2022-02-16 00:14:29.969 [main] EntityBinder - Bind entity by.ganevich.entity.Transaction on table transactions
[DEBUG] 2022-02-16 00:14:30.096 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(transactions), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:30.099 [main] ClassLoaderAccessImpl - Not known whether passed class name [by.ganevich.entity.Transaction] is safe
[DEBUG] 2022-02-16 00:14:30.100 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : by.ganevich.entity.Transaction
[DEBUG] 2022-02-16 00:14:30.101 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2022-02-16 00:14:30.105 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Transaction:id]
[DEBUG] 2022-02-16 00:14:30.107 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2022-02-16 00:14:30.110 [main] PropertyBinder - Building property id
[DEBUG] 2022-02-16 00:14:30.111 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
[DEBUG] 2022-02-16 00:14:30.117 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(transactions), mappingColumn=amountofmoney, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:30.118 [main] PropertyBinder - MetadataSourceProcessor property amountOfMoney with lazy=false
[DEBUG] 2022-02-16 00:14:30.131 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Transaction:amountOfMoney]
[DEBUG] 2022-02-16 00:14:30.141 [main] SimpleValueBinder - building SimpleValue for amountOfMoney
[DEBUG] 2022-02-16 00:14:30.141 [main] PropertyBinder - Building property amountOfMoney
[DEBUG] 2022-02-16 00:14:30.149 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(transactions), mappingColumn=date, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:30.198 [main] PropertyBinder - MetadataSourceProcessor property date with lazy=false
[DEBUG] 2022-02-16 00:14:30.252 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Transaction:date]
[DEBUG] 2022-02-16 00:14:30.261 [main] SimpleValueBinder - building SimpleValue for date
[DEBUG] 2022-02-16 00:14:30.262 [main] PropertyBinder - Building property date
[DEBUG] 2022-02-16 00:14:30.274 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipientAccountId', referencedColumn='', mappedBy=''}
[DEBUG] 2022-02-16 00:14:30.275 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(transactions), mappingColumn=receiverAccount, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:30.382 [main] PropertyBinder - Building property receiverAccount
[DEBUG] 2022-02-16 00:14:30.385 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='sender', referencedColumn='', mappedBy=''}
[DEBUG] 2022-02-16 00:14:30.390 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(transactions), mappingColumn=sender, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:30.401 [main] PropertyBinder - Building property sender
[DEBUG] 2022-02-16 00:14:30.403 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='senderAccountId', referencedColumn='', mappedBy=''}
[DEBUG] 2022-02-16 00:14:30.405 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(transactions), mappingColumn=senderAccount, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:30.406 [main] PropertyBinder - Building property senderAccount
[DEBUG] 2022-02-16 00:14:30.417 [main] AnnotationBinder - Binding entity from annotated class: by.ganevich.entity.BankAccount
[DEBUG] 2022-02-16 00:14:30.419 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-02-16 00:14:30.421 [main] EntityBinder - Import with entity name BankAccount
[DEBUG] 2022-02-16 00:14:30.421 [main] EntityBinder - Bind entity by.ganevich.entity.BankAccount on table bankAccounts
[DEBUG] 2022-02-16 00:14:30.499 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(bankAccounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:30.500 [main] ClassLoaderAccessImpl - Not known whether passed class name [by.ganevich.entity.BankAccount] is safe
[DEBUG] 2022-02-16 00:14:30.500 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : by.ganevich.entity.BankAccount
[DEBUG] 2022-02-16 00:14:30.500 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2022-02-16 00:14:30.502 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.BankAccount:id]
[DEBUG] 2022-02-16 00:14:30.503 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2022-02-16 00:14:30.504 [main] PropertyBinder - Building property id
[DEBUG] 2022-02-16 00:14:30.504 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
[DEBUG] 2022-02-16 00:14:30.506 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='clientId', referencedColumn='', mappedBy=''}
[DEBUG] 2022-02-16 00:14:30.506 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(bankAccounts), mappingColumn=accountOwner, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:30.516 [main] PropertyBinder - Building property accountOwner
[DEBUG] 2022-02-16 00:14:30.519 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(bankAccounts), mappingColumn=ammountOfMoney, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:30.520 [main] PropertyBinder - MetadataSourceProcessor property amountOfMoney with lazy=false
[DEBUG] 2022-02-16 00:14:30.520 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.BankAccount:amountOfMoney]
[DEBUG] 2022-02-16 00:14:30.521 [main] SimpleValueBinder - building SimpleValue for amountOfMoney
[DEBUG] 2022-02-16 00:14:30.521 [main] PropertyBinder - Building property amountOfMoney
[DEBUG] 2022-02-16 00:14:30.522 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='bankId', referencedColumn='', mappedBy=''}
[DEBUG] 2022-02-16 00:14:30.525 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(bankAccounts), mappingColumn=bankProducer, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:30.529 [main] PropertyBinder - Building property bankProducer
[DEBUG] 2022-02-16 00:14:30.530 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(bankAccounts), mappingColumn=currency, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:30.531 [main] PropertyBinder - MetadataSourceProcessor property currency with lazy=false
[DEBUG] 2022-02-16 00:14:30.531 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.BankAccount:currency]
[DEBUG] 2022-02-16 00:14:30.598 [main] SimpleValueBinder - building SimpleValue for currency
[DEBUG] 2022-02-16 00:14:30.599 [main] PropertyBinder - Building property currency
[DEBUG] 2022-02-16 00:14:30.600 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='receiverAccount'}
[DEBUG] 2022-02-16 00:14:30.607 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(bankAccounts), mappingColumn=receivedTransactions, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:30.654 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(bankAccounts), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:30.892 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(bankAccounts), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:30.897 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(bankAccounts), mappingColumn=receivedTransactions_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:30.904 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='receivedTransactions_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2022-02-16 00:14:30.908 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='receiverAccount'}
[DEBUG] 2022-02-16 00:14:30.909 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='receiverAccount'}
[DEBUG] 2022-02-16 00:14:30.914 [main] CollectionBinder - Collection role: by.ganevich.entity.BankAccount.receivedTransactions
[DEBUG] 2022-02-16 00:14:30.953 [main] PropertyBinder - Building property receivedTransactions
[DEBUG] 2022-02-16 00:14:30.962 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='senderAccount'}
[DEBUG] 2022-02-16 00:14:30.979 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(bankAccounts), mappingColumn=sentTransactions, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:30.998 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(bankAccounts), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:31.002 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(bankAccounts), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:31.003 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(bankAccounts), mappingColumn=sentTransactions_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:31.013 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='sentTransactions_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2022-02-16 00:14:31.023 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='senderAccount'}
[DEBUG] 2022-02-16 00:14:31.024 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='senderAccount'}
[DEBUG] 2022-02-16 00:14:31.024 [main] CollectionBinder - Collection role: by.ganevich.entity.BankAccount.sentTransactions
[DEBUG] 2022-02-16 00:14:31.031 [main] PropertyBinder - Building property sentTransactions
[DEBUG] 2022-02-16 00:14:31.111 [main] AnnotationBinder - Binding entity from annotated class: by.ganevich.entity.Bank
[DEBUG] 2022-02-16 00:14:31.115 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-02-16 00:14:31.124 [main] EntityBinder - Import with entity name Bank
[DEBUG] 2022-02-16 00:14:31.153 [main] EntityBinder - Bind entity by.ganevich.entity.Bank on table banks
[DEBUG] 2022-02-16 00:14:31.193 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(banks), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:31.204 [main] ClassLoaderAccessImpl - Not known whether passed class name [by.ganevich.entity.Bank] is safe
[DEBUG] 2022-02-16 00:14:31.211 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : by.ganevich.entity.Bank
[DEBUG] 2022-02-16 00:14:31.213 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2022-02-16 00:14:31.213 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Bank:id]
[DEBUG] 2022-02-16 00:14:31.214 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2022-02-16 00:14:31.214 [main] PropertyBinder - Building property id
[DEBUG] 2022-02-16 00:14:31.220 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
[DEBUG] 2022-02-16 00:14:31.221 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='bankProducer'}
[DEBUG] 2022-02-16 00:14:31.224 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(banks), mappingColumn=bankAccounts, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:31.240 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(banks), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:31.244 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(banks), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:31.269 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(banks), mappingColumn=bankAccounts_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:31.270 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='bankAccounts_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2022-02-16 00:14:31.271 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='bankProducer'}
[DEBUG] 2022-02-16 00:14:31.271 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='bankProducer'}
[DEBUG] 2022-02-16 00:14:31.271 [main] CollectionBinder - Collection role: by.ganevich.entity.Bank.bankAccounts
[DEBUG] 2022-02-16 00:14:31.272 [main] PropertyBinder - Building property bankAccounts
[DEBUG] 2022-02-16 00:14:31.274 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(banks), mappingColumn=commission, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:31.284 [main] PropertyBinder - MetadataSourceProcessor property commission with lazy=false
[DEBUG] 2022-02-16 00:14:31.286 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Bank:commission]
[DEBUG] 2022-02-16 00:14:31.286 [main] SimpleValueBinder - building SimpleValue for commission
[DEBUG] 2022-02-16 00:14:31.287 [main] PropertyBinder - Building property commission
[DEBUG] 2022-02-16 00:14:31.288 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(banks), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:31.289 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2022-02-16 00:14:31.289 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Bank:name]
[DEBUG] 2022-02-16 00:14:31.289 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2022-02-16 00:14:31.290 [main] PropertyBinder - Building property name
[DEBUG] 2022-02-16 00:14:31.294 [main] AnnotationBinder - Binding entity from annotated class: by.ganevich.entity.Rate
[DEBUG] 2022-02-16 00:14:31.300 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-02-16 00:14:31.301 [main] EntityBinder - Import with entity name Rate
[DEBUG] 2022-02-16 00:14:31.301 [main] EntityBinder - Bind entity by.ganevich.entity.Rate on table exchangeRates
[DEBUG] 2022-02-16 00:14:31.319 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(exchangeRates), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:31.320 [main] ClassLoaderAccessImpl - Not known whether passed class name [by.ganevich.entity.Rate] is safe
[DEBUG] 2022-02-16 00:14:31.321 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : by.ganevich.entity.Rate
[DEBUG] 2022-02-16 00:14:31.321 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2022-02-16 00:14:31.322 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Rate:id]
[DEBUG] 2022-02-16 00:14:31.322 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2022-02-16 00:14:31.323 [main] PropertyBinder - Building property id
[DEBUG] 2022-02-16 00:14:31.324 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
[DEBUG] 2022-02-16 00:14:31.334 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(exchangeRates), mappingColumn=currency, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:31.353 [main] PropertyBinder - MetadataSourceProcessor property currency with lazy=false
[DEBUG] 2022-02-16 00:14:31.354 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Rate:currency]
[DEBUG] 2022-02-16 00:14:31.354 [main] SimpleValueBinder - building SimpleValue for currency
[DEBUG] 2022-02-16 00:14:31.354 [main] PropertyBinder - Building property currency
[DEBUG] 2022-02-16 00:14:31.365 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(exchangeRates), mappingColumn=rate, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:31.381 [main] PropertyBinder - MetadataSourceProcessor property rate with lazy=false
[DEBUG] 2022-02-16 00:14:31.383 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Rate:rate]
[DEBUG] 2022-02-16 00:14:31.384 [main] SimpleValueBinder - building SimpleValue for rate
[DEBUG] 2022-02-16 00:14:31.384 [main] PropertyBinder - Building property rate
[DEBUG] 2022-02-16 00:14:31.393 [main] AnnotationBinder - Binding entity from annotated class: by.ganevich.entity.Client
[DEBUG] 2022-02-16 00:14:31.394 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-02-16 00:14:31.395 [main] EntityBinder - Import with entity name Client
[DEBUG] 2022-02-16 00:14:31.396 [main] EntityBinder - Bind entity by.ganevich.entity.Client on table clients
[DEBUG] 2022-02-16 00:14:31.472 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:31.473 [main] ClassLoaderAccessImpl - Not known whether passed class name [by.ganevich.entity.Client] is safe
[DEBUG] 2022-02-16 00:14:31.473 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : by.ganevich.entity.Client
[DEBUG] 2022-02-16 00:14:31.475 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2022-02-16 00:14:31.476 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Client:id]
[DEBUG] 2022-02-16 00:14:31.478 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2022-02-16 00:14:31.479 [main] PropertyBinder - Building property id
[DEBUG] 2022-02-16 00:14:31.480 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
[DEBUG] 2022-02-16 00:14:31.481 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='accountOwner'}
[DEBUG] 2022-02-16 00:14:31.486 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=bankAccounts, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:31.505 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:31.507 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:31.511 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=bankAccounts_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:31.512 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='bankAccounts_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2022-02-16 00:14:31.515 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='accountOwner'}
[DEBUG] 2022-02-16 00:14:31.516 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='accountOwner'}
[DEBUG] 2022-02-16 00:14:31.525 [main] CollectionBinder - Collection role: by.ganevich.entity.Client.bankAccounts
[DEBUG] 2022-02-16 00:14:31.536 [main] PropertyBinder - Building property bankAccounts
[DEBUG] 2022-02-16 00:14:31.542 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:31.543 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2022-02-16 00:14:31.544 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Client:name]
[DEBUG] 2022-02-16 00:14:31.544 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2022-02-16 00:14:31.544 [main] PropertyBinder - Building property name
[DEBUG] 2022-02-16 00:14:31.545 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='sender'}
[DEBUG] 2022-02-16 00:14:31.546 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=sentTransactions, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:31.547 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:31.548 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:31.549 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=sentTransactions_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:31.549 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='sentTransactions_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2022-02-16 00:14:31.551 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='sender'}
[DEBUG] 2022-02-16 00:14:31.551 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='sender'}
[DEBUG] 2022-02-16 00:14:31.551 [main] CollectionBinder - Collection role: by.ganevich.entity.Client.sentTransactions
[DEBUG] 2022-02-16 00:14:31.552 [main] PropertyBinder - Building property sentTransactions
[DEBUG] 2022-02-16 00:14:31.553 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=type, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:14:31.553 [main] PropertyBinder - MetadataSourceProcessor property type with lazy=false
[DEBUG] 2022-02-16 00:14:31.554 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Client:type]
[DEBUG] 2022-02-16 00:14:31.554 [main] SimpleValueBinder - building SimpleValue for type
[DEBUG] 2022-02-16 00:14:31.554 [main] PropertyBinder - Building property type
[DEBUG] 2022-02-16 00:14:31.605 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2022-02-16 00:14:31.606 [main] SimpleValueBinder - Starting fillSimpleValue for clientType
[DEBUG] 2022-02-16 00:14:31.607 [main] SimpleValueBinder - Starting fillSimpleValue for commission
[DEBUG] 2022-02-16 00:14:31.615 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2022-02-16 00:14:31.616 [main] SimpleValueBinder - Starting fillSimpleValue for amountOfMoney
[DEBUG] 2022-02-16 00:14:31.625 [main] SimpleValueBinder - Starting fillSimpleValue for date
[DEBUG] 2022-02-16 00:14:31.625 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2022-02-16 00:14:31.625 [main] SimpleValueBinder - Starting fillSimpleValue for amountOfMoney
[DEBUG] 2022-02-16 00:14:31.626 [main] SimpleValueBinder - Starting fillSimpleValue for currency
[DEBUG] 2022-02-16 00:14:31.646 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2022-02-16 00:14:31.655 [main] SimpleValueBinder - Starting fillSimpleValue for commission
[DEBUG] 2022-02-16 00:14:31.655 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2022-02-16 00:14:31.656 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2022-02-16 00:14:31.656 [main] SimpleValueBinder - Starting fillSimpleValue for currency
[DEBUG] 2022-02-16 00:14:31.656 [main] SimpleValueBinder - Starting fillSimpleValue for rate
[DEBUG] 2022-02-16 00:14:31.657 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2022-02-16 00:14:31.657 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2022-02-16 00:14:31.657 [main] SimpleValueBinder - Starting fillSimpleValue for type
[DEBUG] 2022-02-16 00:14:31.699 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [commissionforclients]
[DEBUG] 2022-02-16 00:14:31.700 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [transactions]
[DEBUG] 2022-02-16 00:14:31.700 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [bankaccounts]
[DEBUG] 2022-02-16 00:14:31.707 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [banks]
[DEBUG] 2022-02-16 00:14:31.707 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [exchangerates]
[DEBUG] 2022-02-16 00:14:31.708 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
[DEBUG] 2022-02-16 00:14:31.730 [main] CollectionSecondPass - Second pass for collection: by.ganevich.entity.BankAccount.receivedTransactions
[DEBUG] 2022-02-16 00:14:31.732 [main] CollectionBinder - Binding a OneToMany: by.ganevich.entity.BankAccount.receivedTransactions through a foreign key
[DEBUG] 2022-02-16 00:14:31.751 [main] CollectionBinder - Mapping collection: by.ganevich.entity.BankAccount.receivedTransactions -> transactions
[DEBUG] 2022-02-16 00:14:31.764 [main] TableBinder - Retrieving property by.ganevich.entity.Transaction.receiverAccount
[DEBUG] 2022-02-16 00:14:31.766 [main] CollectionSecondPass - Mapped collection key: recipientAccountId, one-to-many: by.ganevich.entity.Transaction
[DEBUG] 2022-02-16 00:14:31.767 [main] CollectionSecondPass - Second pass for collection: by.ganevich.entity.BankAccount.sentTransactions
[DEBUG] 2022-02-16 00:14:31.767 [main] CollectionBinder - Binding a OneToMany: by.ganevich.entity.BankAccount.sentTransactions through a foreign key
[DEBUG] 2022-02-16 00:14:31.768 [main] CollectionBinder - Mapping collection: by.ganevich.entity.BankAccount.sentTransactions -> transactions
[DEBUG] 2022-02-16 00:14:31.768 [main] TableBinder - Retrieving property by.ganevich.entity.Transaction.senderAccount
[DEBUG] 2022-02-16 00:14:31.769 [main] CollectionSecondPass - Mapped collection key: senderAccountId, one-to-many: by.ganevich.entity.Transaction
[DEBUG] 2022-02-16 00:14:31.769 [main] CollectionSecondPass - Second pass for collection: by.ganevich.entity.Bank.bankAccounts
[DEBUG] 2022-02-16 00:14:31.769 [main] CollectionBinder - Binding a OneToMany: by.ganevich.entity.Bank.bankAccounts through a foreign key
[DEBUG] 2022-02-16 00:14:31.776 [main] CollectionBinder - Mapping collection: by.ganevich.entity.Bank.bankAccounts -> bankAccounts
[DEBUG] 2022-02-16 00:14:31.777 [main] TableBinder - Retrieving property by.ganevich.entity.BankAccount.bankProducer
[DEBUG] 2022-02-16 00:14:31.778 [main] CollectionSecondPass - Mapped collection key: bankId, one-to-many: by.ganevich.entity.BankAccount
[DEBUG] 2022-02-16 00:14:31.778 [main] CollectionSecondPass - Second pass for collection: by.ganevich.entity.Client.bankAccounts
[DEBUG] 2022-02-16 00:14:31.778 [main] CollectionBinder - Binding a OneToMany: by.ganevich.entity.Client.bankAccounts through a foreign key
[DEBUG] 2022-02-16 00:14:31.778 [main] CollectionBinder - Mapping collection: by.ganevich.entity.Client.bankAccounts -> bankAccounts
[DEBUG] 2022-02-16 00:14:31.779 [main] TableBinder - Retrieving property by.ganevich.entity.BankAccount.accountOwner
[DEBUG] 2022-02-16 00:14:31.780 [main] CollectionSecondPass - Mapped collection key: clientId, one-to-many: by.ganevich.entity.BankAccount
[DEBUG] 2022-02-16 00:14:31.780 [main] CollectionSecondPass - Second pass for collection: by.ganevich.entity.Client.sentTransactions
[DEBUG] 2022-02-16 00:14:31.781 [main] CollectionBinder - Binding a OneToMany: by.ganevich.entity.Client.sentTransactions through a foreign key
[DEBUG] 2022-02-16 00:14:31.781 [main] CollectionBinder - Mapping collection: by.ganevich.entity.Client.sentTransactions -> transactions
[DEBUG] 2022-02-16 00:14:31.789 [main] TableBinder - Retrieving property by.ganevich.entity.Transaction.sender
[DEBUG] 2022-02-16 00:14:31.790 [main] CollectionSecondPass - Mapped collection key: sender, one-to-many: by.ganevich.entity.Transaction
[DEBUG] 2022-02-16 00:14:31.797 [main] InFlightMetadataCollectorImpl - Resolving reference to class: by.ganevich.entity.Client
[DEBUG] 2022-02-16 00:14:31.816 [main] InFlightMetadataCollectorImpl - Resolving reference to class: by.ganevich.entity.Bank
[DEBUG] 2022-02-16 00:14:31.820 [main] InFlightMetadataCollectorImpl - Resolving reference to class: by.ganevich.entity.BankAccount
[DEBUG] 2022-02-16 00:14:31.821 [main] InFlightMetadataCollectorImpl - Resolving reference to class: by.ganevich.entity.Client
[DEBUG] 2022-02-16 00:14:31.822 [main] InFlightMetadataCollectorImpl - Resolving reference to class: by.ganevich.entity.BankAccount
[DEBUG] 2022-02-16 00:14:31.830 [main] InFlightMetadataCollectorImpl - Resolving reference to class: by.ganevich.entity.Client
[DEBUG] 2022-02-16 00:14:31.831 [main] InFlightMetadataCollectorImpl - Resolving reference to class: by.ganevich.entity.Bank
[DEBUG] 2022-02-16 00:14:31.831 [main] InFlightMetadataCollectorImpl - Resolving reference to class: by.ganevich.entity.BankAccount
[DEBUG] 2022-02-16 00:14:31.832 [main] InFlightMetadataCollectorImpl - Resolving reference to class: by.ganevich.entity.Client
[DEBUG] 2022-02-16 00:14:31.833 [main] InFlightMetadataCollectorImpl - Resolving reference to class: by.ganevich.entity.BankAccount
[DEBUG] 2022-02-16 00:14:32.386 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2022-02-16 00:14:32.397 [main] Settings - SessionFactory name : null
[DEBUG] 2022-02-16 00:14:32.398 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2022-02-16 00:14:32.398 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2022-02-16 00:14:32.398 [main] Settings - Statistics: disabled
[DEBUG] 2022-02-16 00:14:32.399 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2022-02-16 00:14:32.399 [main] Settings - Default entity-mode: pojo
[DEBUG] 2022-02-16 00:14:32.399 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2022-02-16 00:14:32.400 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2022-02-16 00:14:32.400 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2022-02-16 00:14:32.400 [main] Settings - Default batch fetch size: -1
[DEBUG] 2022-02-16 00:14:32.400 [main] Settings - Maximum outer join fetch depth: null
[DEBUG] 2022-02-16 00:14:32.400 [main] Settings - Default null ordering: NONE
[DEBUG] 2022-02-16 00:14:32.401 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2022-02-16 00:14:32.401 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2022-02-16 00:14:32.401 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2022-02-16 00:14:32.402 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2022-02-16 00:14:32.402 [main] Settings - Query language substitutions: {}
[DEBUG] 2022-02-16 00:14:32.403 [main] Settings - Named query checking : enabled
[DEBUG] 2022-02-16 00:14:32.403 [main] Settings - Second-level cache: disabled
[DEBUG] 2022-02-16 00:14:32.404 [main] Settings - Second-level query cache: disabled
[DEBUG] 2022-02-16 00:14:32.404 [main] Settings - Second-level query cache factory: null
[DEBUG] 2022-02-16 00:14:32.404 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2022-02-16 00:14:32.405 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2022-02-16 00:14:32.405 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2022-02-16 00:14:32.405 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2022-02-16 00:14:32.405 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2022-02-16 00:14:32.406 [main] Settings - JDBC batch size: 15
[DEBUG] 2022-02-16 00:14:32.406 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2022-02-16 00:14:32.406 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2022-02-16 00:14:32.406 [main] Settings - Wrap result sets: disabled
[DEBUG] 2022-02-16 00:14:32.406 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2022-02-16 00:14:32.407 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2022-02-16 00:14:32.407 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2022-02-16 00:14:32.407 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2022-02-16 00:14:32.408 [main] Settings - JPA compliance - query : disabled
[DEBUG] 2022-02-16 00:14:32.408 [main] Settings - JPA compliance - closed-handling : disabled
[DEBUG] 2022-02-16 00:14:32.408 [main] Settings - JPA compliance - lists : disabled
[DEBUG] 2022-02-16 00:14:32.408 [main] Settings - JPA compliance - transactions : disabled
[DEBUG] 2022-02-16 00:14:32.765 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-02-16 00:14:32.766 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-02-16 00:14:32.785 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2022-02-16 00:14:32.786 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\Program Files\Java\jdk1.8.0_291\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\rt.jar;D:\JavaProjects\intexsoft-test-task\target\classes;C:\Users\user\.m2\repository\org\postgresql\postgresql\42.3.1\postgresql-42.3.1.jar;C:\Users\user\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\user\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\user\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\user\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\user\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\user\.m2\repository\org\springframework\spring-jdbc\5.3.14\spring-jdbc-5.3.14.jar;C:\Users\user\.m2\repository\org\springframework\spring-beans\5.3.14\spring-beans-5.3.14.jar;C:\Users\user\.m2\repository\org\springframework\spring-core\5.3.14\spring-core-5.3.14.jar;C:\Users\user\.m2\repository\org\springframework\spring-jcl\5.3.14\spring-jcl-5.3.14.jar;C:\Users\user\.m2\repository\org\springframework\spring-tx\5.3.14\spring-tx-5.3.14.jar;C:\Users\user\.m2\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;C:\Users\user\.m2\repository\org\hibernate\hibernate-core\5.6.3.Final\hibernate-core-5.6.3.Final.jar;C:\Users\user\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\user\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\user\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\user\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\user\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\user\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\user\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\user\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\user\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\user\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\user\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\user\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\user\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\user\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\user\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\user\.m2\repository\org\springframework\data\spring-data-jpa\2.6.0\spring-data-jpa-2.6.0.jar;C:\Users\user\.m2\repository\org\springframework\data\spring-data-commons\2.6.0\spring-data-commons-2.6.0.jar;C:\Users\user\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\user\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\user\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\user\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;D:\IntelliJ IDEA 2021.1\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=org.springframework.jdbc.datasource.DriverManagerDataSource@a4add54, user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_291\jre\bin, sun.java.command=by.ganevich.Application, javax.persistence.nonJtaDataSource=org.springframework.jdbc.datasource.DriverManagerDataSource@a4add54, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_291\jre, file.separator=\, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_291\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_291\jre\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_291-b10, user.name=user, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\user\AppData\Local\Temp\, java.version=1.8.0_291, user.dir=D:\JavaProjects\intexsoft-test-task, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@7e736350, java.library.path=C:\Program Files\Java\jdk1.8.0_291\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;D:\Git\cmd;C:\Program Files\nodejs\;C:\Program Files\Java\jdk-16.0.1;C:\Program Files (x86)\GitExtensions\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\.dotnet\tools;D:\Visual Studio Code\Microsoft VS Code\bin;C:\Users\user\AppData\Roaming\npm;D:\Maven\apache-maven-3.8.1\bin;C:\Program Files\heroku\bin;C:\Program Files\Java\jre1.8.0_291\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.291-b10, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@a4add54, java.class.version=52.0}
[DEBUG] 2022-02-16 00:14:32.842 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2022-02-16 00:14:32.849 [main] EnumType - Using ORDINAL-based conversion for Enum by.ganevich.entity.Currency
[DEBUG] 2022-02-16 00:14:32.851 [main] EnumType - Using ORDINAL-based conversion for Enum by.ganevich.entity.ClientType
[DEBUG] 2022-02-16 00:14:32.851 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2022-02-16 00:14:32.851 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@43cf6ea3] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5ae95707]
[DEBUG] 2022-02-16 00:14:32.922 [main] ClassLoaderAccessImpl - Not known whether passed class name [by.ganevich.entity.Commission] is safe
[DEBUG] 2022-02-16 00:14:32.922 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : by.ganevich.entity.Commission
[DEBUG] 2022-02-16 00:14:33.345 [main] interceptor - To-one property `by.ganevich.entity.Transaction#receiverAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:14:33.348 [main] interceptor - To-one property `by.ganevich.entity.Transaction#receiverAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:14:33.348 [main] interceptor - To-one property `by.ganevich.entity.Transaction#sender` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:14:33.348 [main] interceptor - To-one property `by.ganevich.entity.Transaction#sender` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:14:33.348 [main] interceptor - To-one property `by.ganevich.entity.Transaction#senderAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:14:33.348 [main] interceptor - To-one property `by.ganevich.entity.Transaction#senderAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:14:33.348 [main] ClassLoaderAccessImpl - Not known whether passed class name [by.ganevich.entity.Transaction] is safe
[DEBUG] 2022-02-16 00:14:33.348 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : by.ganevich.entity.Transaction
[DEBUG] 2022-02-16 00:14:33.360 [main] interceptor - To-one property `by.ganevich.entity.Transaction#receiverAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:14:33.360 [main] interceptor - To-one property `by.ganevich.entity.Transaction#sender` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:14:33.360 [main] interceptor - To-one property `by.ganevich.entity.Transaction#senderAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:14:33.360 [main] interceptor - To-one property `by.ganevich.entity.Transaction#receiverAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:14:33.360 [main] interceptor - To-one property `by.ganevich.entity.Transaction#sender` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:14:33.360 [main] interceptor - To-one property `by.ganevich.entity.Transaction#senderAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:14:33.360 [main] interceptor - To-one property `by.ganevich.entity.BankAccount#accountOwner` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:14:33.361 [main] interceptor - To-one property `by.ganevich.entity.BankAccount#accountOwner` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:14:33.361 [main] interceptor - To-one property `by.ganevich.entity.BankAccount#bankProducer` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:14:33.361 [main] interceptor - To-one property `by.ganevich.entity.BankAccount#bankProducer` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:14:33.364 [main] ClassLoaderAccessImpl - Not known whether passed class name [by.ganevich.entity.BankAccount] is safe
[DEBUG] 2022-02-16 00:14:33.364 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : by.ganevich.entity.BankAccount
[DEBUG] 2022-02-16 00:14:33.378 [main] interceptor - To-one property `by.ganevich.entity.BankAccount#accountOwner` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:14:33.378 [main] interceptor - To-one property `by.ganevich.entity.BankAccount#bankProducer` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:14:33.379 [main] interceptor - To-one property `by.ganevich.entity.BankAccount#accountOwner` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:14:33.379 [main] interceptor - To-one property `by.ganevich.entity.BankAccount#bankProducer` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:14:33.379 [main] ClassLoaderAccessImpl - Not known whether passed class name [by.ganevich.entity.Bank] is safe
[DEBUG] 2022-02-16 00:14:33.379 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : by.ganevich.entity.Bank
[DEBUG] 2022-02-16 00:14:33.386 [main] ClassLoaderAccessImpl - Not known whether passed class name [by.ganevich.entity.Rate] is safe
[DEBUG] 2022-02-16 00:14:33.387 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : by.ganevich.entity.Rate
[DEBUG] 2022-02-16 00:14:33.394 [main] ClassLoaderAccessImpl - Not known whether passed class name [by.ganevich.entity.Client] is safe
[DEBUG] 2022-02-16 00:14:33.394 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : by.ganevich.entity.Client
[DEBUG] 2022-02-16 00:14:33.414 [main] AbstractCollectionPersister - Static SQL for collection: by.ganevich.entity.BankAccount.sentTransactions
[DEBUG] 2022-02-16 00:14:33.414 [main] AbstractCollectionPersister -  Row insert: update transactions set senderAccountId=? where id=?
[DEBUG] 2022-02-16 00:14:33.414 [main] AbstractCollectionPersister -  Row update: update transactions set  where id=?
[DEBUG] 2022-02-16 00:14:33.414 [main] AbstractCollectionPersister -  Row delete: update transactions set senderAccountId=null where senderAccountId=? and id=?
[DEBUG] 2022-02-16 00:14:33.414 [main] AbstractCollectionPersister -  One-shot delete: update transactions set senderAccountId=null where senderAccountId=?
[DEBUG] 2022-02-16 00:14:33.414 [main] AbstractCollectionPersister - Static SQL for collection: by.ganevich.entity.BankAccount.receivedTransactions
[DEBUG] 2022-02-16 00:14:33.414 [main] AbstractCollectionPersister -  Row insert: update transactions set recipientAccountId=? where id=?
[DEBUG] 2022-02-16 00:14:33.414 [main] AbstractCollectionPersister -  Row update: update transactions set  where id=?
[DEBUG] 2022-02-16 00:14:33.414 [main] AbstractCollectionPersister -  Row delete: update transactions set recipientAccountId=null where recipientAccountId=? and id=?
[DEBUG] 2022-02-16 00:14:33.414 [main] AbstractCollectionPersister -  One-shot delete: update transactions set recipientAccountId=null where recipientAccountId=?
[DEBUG] 2022-02-16 00:14:33.414 [main] AbstractCollectionPersister - Static SQL for collection: by.ganevich.entity.Bank.bankAccounts
[DEBUG] 2022-02-16 00:14:33.414 [main] AbstractCollectionPersister -  Row insert: update bankAccounts set bankId=? where id=?
[DEBUG] 2022-02-16 00:14:33.414 [main] AbstractCollectionPersister -  Row update: update bankAccounts set  where id=?
[DEBUG] 2022-02-16 00:14:33.414 [main] AbstractCollectionPersister -  Row delete: update bankAccounts set bankId=null where bankId=? and id=?
[DEBUG] 2022-02-16 00:14:33.414 [main] AbstractCollectionPersister -  One-shot delete: update bankAccounts set bankId=null where bankId=?
[DEBUG] 2022-02-16 00:14:33.415 [main] AbstractCollectionPersister - Static SQL for collection: by.ganevich.entity.Client.sentTransactions
[DEBUG] 2022-02-16 00:14:33.415 [main] AbstractCollectionPersister -  Row insert: update transactions set sender=? where id=?
[DEBUG] 2022-02-16 00:14:33.415 [main] AbstractCollectionPersister -  Row update: update transactions set  where id=?
[DEBUG] 2022-02-16 00:14:33.415 [main] AbstractCollectionPersister -  Row delete: update transactions set sender=null where sender=? and id=?
[DEBUG] 2022-02-16 00:14:33.415 [main] AbstractCollectionPersister -  One-shot delete: update transactions set sender=null where sender=?
[DEBUG] 2022-02-16 00:14:33.415 [main] AbstractCollectionPersister - Static SQL for collection: by.ganevich.entity.Client.bankAccounts
[DEBUG] 2022-02-16 00:14:33.415 [main] AbstractCollectionPersister -  Row insert: update bankAccounts set clientId=? where id=?
[DEBUG] 2022-02-16 00:14:33.415 [main] AbstractCollectionPersister -  Row update: update bankAccounts set  where id=?
[DEBUG] 2022-02-16 00:14:33.415 [main] AbstractCollectionPersister -  Row delete: update bankAccounts set clientId=null where clientId=? and id=?
[DEBUG] 2022-02-16 00:14:33.415 [main] AbstractCollectionPersister -  One-shot delete: update bankAccounts set clientId=null where clientId=?
[DEBUG] 2022-02-16 00:14:33.421 [main] AbstractEntityPersister - Static SQL for entity: by.ganevich.entity.Commission
[DEBUG] 2022-02-16 00:14:33.421 [main] AbstractEntityPersister -  Version select: select id from commissionForClients where id =?
[DEBUG] 2022-02-16 00:14:33.421 [main] AbstractEntityPersister -  Snapshot select: select commission_.id, commission_.clientType as clientty2_3_, commission_.commission as commissi3_3_ from commissionForClients commission_ where commission_.id=?
[DEBUG] 2022-02-16 00:14:33.421 [main] AbstractEntityPersister -  Insert 0: insert into commissionForClients (clientType, commission, id) values (?, ?, ?)
[DEBUG] 2022-02-16 00:14:33.421 [main] AbstractEntityPersister -  Update 0: update commissionForClients set clientType=?, commission=? where id=?
[DEBUG] 2022-02-16 00:14:33.421 [main] AbstractEntityPersister -  Delete 0: delete from commissionForClients where id=?
[DEBUG] 2022-02-16 00:14:33.421 [main] AbstractEntityPersister -  Identity insert: insert into commissionForClients (clientType, commission) values (?, ?)
[DEBUG] 2022-02-16 00:14:33.447 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59bbe88a]
[DEBUG] 2022-02-16 00:14:33.448 [main] MetamodelGraphWalker - Visiting attribute path : clientType
[DEBUG] 2022-02-16 00:14:33.448 [main] MetamodelGraphWalker - Visiting attribute path : commission
[DEBUG] 2022-02-16 00:14:33.448 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-02-16 00:14:33.461 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-02-16 00:14:33.465 [main] LoadPlanTreePrinter - LoadPlan(entity=by.ganevich.entity.Commission)
    - Returns
       - EntityReturnImpl(entity=by.ganevich.entity.Commission, querySpaceUid=<gen:0>, path=by.ganevich.entity.Commission)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=by.ganevich.entity.Commission)
          - SQL table alias mapping - commission0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

[DEBUG] 2022-02-16 00:14:33.467 [main] EntityLoader - Static select for entity by.ganevich.entity.Commission [NONE]: select commission0_.id as id1_3_0_, commission0_.clientType as clientty2_3_0_, commission0_.commission as commissi3_3_0_ from commissionForClients commission0_ where commission0_.id=?
[DEBUG] 2022-02-16 00:14:33.468 [main] AbstractEntityPersister - Static SQL for entity: by.ganevich.entity.Transaction
[DEBUG] 2022-02-16 00:14:33.468 [main] AbstractEntityPersister -  Version select: select id from transactions where id =?
[DEBUG] 2022-02-16 00:14:33.468 [main] AbstractEntityPersister -  Snapshot select: select transactio_.id, transactio_.amountofmoney as amountof2_5_, transactio_.date as date3_5_, transactio_.recipientAccountId as recipien4_5_, transactio_.sender as sender5_5_, transactio_.senderAccountId as senderac6_5_ from transactions transactio_ where transactio_.id=?
[DEBUG] 2022-02-16 00:14:33.468 [main] AbstractEntityPersister -  Insert 0: insert into transactions (amountofmoney, date, recipientAccountId, sender, senderAccountId, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2022-02-16 00:14:33.468 [main] AbstractEntityPersister -  Update 0: update transactions set amountofmoney=?, date=?, recipientAccountId=?, sender=?, senderAccountId=? where id=?
[DEBUG] 2022-02-16 00:14:33.468 [main] AbstractEntityPersister -  Delete 0: delete from transactions where id=?
[DEBUG] 2022-02-16 00:14:33.468 [main] AbstractEntityPersister -  Identity insert: insert into transactions (amountofmoney, date, recipientAccountId, sender, senderAccountId) values (?, ?, ?, ?, ?)
[DEBUG] 2022-02-16 00:14:33.468 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3791f50e]
[DEBUG] 2022-02-16 00:14:33.468 [main] MetamodelGraphWalker - Visiting attribute path : amountOfMoney
[DEBUG] 2022-02-16 00:14:33.468 [main] MetamodelGraphWalker - Visiting attribute path : date
[DEBUG] 2022-02-16 00:14:33.468 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount
[DEBUG] 2022-02-16 00:14:33.474 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a75ec37]
[DEBUG] 2022-02-16 00:14:33.477 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner
[DEBUG] 2022-02-16 00:14:33.477 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d5af0a5]
[DEBUG] 2022-02-16 00:14:33.477 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.bankAccounts
[DEBUG] 2022-02-16 00:14:33.477 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.accountOwner.bankAccounts
[DEBUG] 2022-02-16 00:14:33.477 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.name
[DEBUG] 2022-02-16 00:14:33.477 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions
[DEBUG] 2022-02-16 00:14:33.478 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d78f3d5]
[DEBUG] 2022-02-16 00:14:33.479 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f6874f2]
[DEBUG] 2022-02-16 00:14:33.480 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions.amountOfMoney
[DEBUG] 2022-02-16 00:14:33.481 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions.date
[DEBUG] 2022-02-16 00:14:33.481 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions.receiverAccount
[DEBUG] 2022-02-16 00:14:33.481 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.accountOwner.sentTransactions.receiverAccount
[DEBUG] 2022-02-16 00:14:33.481 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions.sender
[DEBUG] 2022-02-16 00:14:33.481 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.accountOwner.sentTransactions.sender
[DEBUG] 2022-02-16 00:14:33.481 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions.senderAccount
[DEBUG] 2022-02-16 00:14:33.481 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69d23296]
[DEBUG] 2022-02-16 00:14:33.481 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions.senderAccount.accountOwner
[DEBUG] 2022-02-16 00:14:33.481 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.accountOwner.sentTransactions.senderAccount.accountOwner
[DEBUG] 2022-02-16 00:14:33.481 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions.senderAccount.amountOfMoney
[DEBUG] 2022-02-16 00:14:33.481 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions.senderAccount.bankProducer
[DEBUG] 2022-02-16 00:14:33.481 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@376c7d7d]
[DEBUG] 2022-02-16 00:14:33.481 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions.senderAccount.bankProducer.bankAccounts
[DEBUG] 2022-02-16 00:14:33.481 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.accountOwner.sentTransactions.senderAccount.bankProducer.bankAccounts
[DEBUG] 2022-02-16 00:14:33.481 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions.senderAccount.bankProducer.commission
[DEBUG] 2022-02-16 00:14:33.481 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions.senderAccount.bankProducer.name
[DEBUG] 2022-02-16 00:14:33.481 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions.senderAccount.currency
[DEBUG] 2022-02-16 00:14:33.482 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions.senderAccount.receivedTransactions
[DEBUG] 2022-02-16 00:14:33.482 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.accountOwner.sentTransactions.senderAccount.receivedTransactions
[DEBUG] 2022-02-16 00:14:33.482 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions.senderAccount.sentTransactions
[DEBUG] 2022-02-16 00:14:33.482 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.accountOwner.sentTransactions.senderAccount.sentTransactions
[DEBUG] 2022-02-16 00:14:33.482 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.type
[DEBUG] 2022-02-16 00:14:33.482 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.amountOfMoney
[DEBUG] 2022-02-16 00:14:33.482 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.bankProducer
[DEBUG] 2022-02-16 00:14:33.482 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.bankProducer
[DEBUG] 2022-02-16 00:14:33.482 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.currency
[DEBUG] 2022-02-16 00:14:33.482 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.receivedTransactions
[DEBUG] 2022-02-16 00:14:33.482 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.receivedTransactions
[DEBUG] 2022-02-16 00:14:33.482 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.sentTransactions
[DEBUG] 2022-02-16 00:14:33.482 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.sentTransactions
[DEBUG] 2022-02-16 00:14:33.482 [main] MetamodelGraphWalker - Visiting attribute path : sender
[DEBUG] 2022-02-16 00:14:33.482 [main] MetamodelGraphWalker - Property path deemed to be circular : sender
[DEBUG] 2022-02-16 00:14:33.482 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount
[DEBUG] 2022-02-16 00:14:33.482 [main] MetamodelGraphWalker - Property path deemed to be circular : senderAccount
[DEBUG] 2022-02-16 00:14:33.482 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-02-16 00:14:33.482 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-02-16 00:14:33.503 [main] LoadPlanTreePrinter - LoadPlan(entity=by.ganevich.entity.Transaction)
    - Returns
       - EntityReturnImpl(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:0>, path=by.ganevich.entity.Transaction)
          - EntityAttributeFetchImpl(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:1>, path=by.ganevich.entity.Transaction.receiverAccount)
             - EntityAttributeFetchImpl(entity=by.ganevich.entity.Client, querySpaceUid=<gen:2>, path=by.ganevich.entity.Transaction.receiverAccount.accountOwner)
                - CollectionAttributeFetchImpl(collection=by.ganevich.entity.Client.sentTransactions, querySpaceUid=<gen:3>, path=by.ganevich.entity.Transaction.receiverAccount.accountOwner.sentTransactions)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:4>, path=by.ganevich.entity.Transaction.receiverAccount.accountOwner.sentTransactions.<elements>)
                      - EntityAttributeFetchImpl(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:5>, path=by.ganevich.entity.Transaction.receiverAccount.accountOwner.sentTransactions.<elements>.senderAccount)
                         - EntityAttributeFetchImpl(entity=by.ganevich.entity.Bank, querySpaceUid=<gen:6>, path=by.ganevich.entity.Transaction.receiverAccount.accountOwner.sentTransactions.<elements>.senderAccount.bankProducer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=by.ganevich.entity.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}
          - JOIN (JoinDefinedByMetadata(receiverAccount)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=by.ganevich.entity.BankAccount)
                - SQL table alias mapping - bankaccoun1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(accountOwner)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=by.ganevich.entity.Client)
                      - SQL table alias mapping - client2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                      - JOIN (JoinDefinedByMetadata(sentTransactions)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=by.ganevich.entity.Client.sentTransactions)
                            - SQL table alias mapping - senttransa3_
                            - alias suffix - 3_
                            - suffixed key columns - {sender5_5_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_5_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=by.ganevich.entity.Transaction)
                                  - SQL table alias mapping - senttransa3_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_5_4_}
                                  - JOIN (JoinDefinedByMetadata(senderAccount)) : <gen:4> -> <gen:5>
                                     - EntityQuerySpaceImpl(uid=<gen:5>, entity=by.ganevich.entity.BankAccount)
                                        - SQL table alias mapping - bankaccoun4_
                                        - alias suffix - 5_
                                        - suffixed key columns - {id1_0_5_}
                                        - JOIN (JoinDefinedByMetadata(bankProducer)) : <gen:5> -> <gen:6>
                                           - EntityQuerySpaceImpl(uid=<gen:6>, entity=by.ganevich.entity.Bank)
                                              - SQL table alias mapping - bank5_
                                              - alias suffix - 6_
                                              - suffixed key columns - {id1_1_6_}

[DEBUG] 2022-02-16 00:14:33.503 [main] EntityLoader - Static select for entity by.ganevich.entity.Transaction [NONE]: select transactio0_.id as id1_5_0_, transactio0_.amountofmoney as amountof2_5_0_, transactio0_.date as date3_5_0_, transactio0_.recipientAccountId as recipien4_5_0_, transactio0_.sender as sender5_5_0_, transactio0_.senderAccountId as senderac6_5_0_, bankaccoun1_.id as id1_0_1_, bankaccoun1_.clientId as clientid4_0_1_, bankaccoun1_.ammountOfMoney as ammounto2_0_1_, bankaccoun1_.bankId as bankid5_0_1_, bankaccoun1_.currency as currency3_0_1_, client2_.id as id1_2_2_, client2_.name as name2_2_2_, client2_.type as type3_2_2_, senttransa3_.sender as sender5_5_3_, senttransa3_.id as id1_5_3_, senttransa3_.id as id1_5_4_, senttransa3_.amountofmoney as amountof2_5_4_, senttransa3_.date as date3_5_4_, senttransa3_.recipientAccountId as recipien4_5_4_, senttransa3_.sender as sender5_5_4_, senttransa3_.senderAccountId as senderac6_5_4_, bankaccoun4_.id as id1_0_5_, bankaccoun4_.clientId as clientid4_0_5_, bankaccoun4_.ammountOfMoney as ammounto2_0_5_, bankaccoun4_.bankId as bankid5_0_5_, bankaccoun4_.currency as currency3_0_5_, bank5_.id as id1_1_6_, bank5_.commission as commissi2_1_6_, bank5_.name as name3_1_6_ from transactions transactio0_ left outer join bankAccounts bankaccoun1_ on transactio0_.recipientAccountId=bankaccoun1_.id left outer join clients client2_ on bankaccoun1_.clientId=client2_.id left outer join transactions senttransa3_ on client2_.id=senttransa3_.sender left outer join bankAccounts bankaccoun4_ on senttransa3_.senderAccountId=bankaccoun4_.id left outer join banks bank5_ on bankaccoun4_.bankId=bank5_.id where transactio0_.id=?
[DEBUG] 2022-02-16 00:14:33.504 [main] AbstractEntityPersister - Static SQL for entity: by.ganevich.entity.BankAccount
[DEBUG] 2022-02-16 00:14:33.504 [main] AbstractEntityPersister -  Version select: select id from bankAccounts where id =?
[DEBUG] 2022-02-16 00:14:33.504 [main] AbstractEntityPersister -  Snapshot select: select bankaccoun_.id, bankaccoun_.clientId as clientid4_0_, bankaccoun_.ammountOfMoney as ammounto2_0_, bankaccoun_.bankId as bankid5_0_, bankaccoun_.currency as currency3_0_ from bankAccounts bankaccoun_ where bankaccoun_.id=?
[DEBUG] 2022-02-16 00:14:33.504 [main] AbstractEntityPersister -  Insert 0: insert into bankAccounts (clientId, ammountOfMoney, bankId, currency, id) values (?, ?, ?, ?, ?)
[DEBUG] 2022-02-16 00:14:33.504 [main] AbstractEntityPersister -  Update 0: update bankAccounts set clientId=?, ammountOfMoney=?, bankId=?, currency=? where id=?
[DEBUG] 2022-02-16 00:14:33.504 [main] AbstractEntityPersister -  Delete 0: delete from bankAccounts where id=?
[DEBUG] 2022-02-16 00:14:33.504 [main] AbstractEntityPersister -  Identity insert: insert into bankAccounts (clientId, ammountOfMoney, bankId, currency) values (?, ?, ?, ?)
[DEBUG] 2022-02-16 00:14:33.504 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@514de325]
[DEBUG] 2022-02-16 00:14:33.504 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner
[DEBUG] 2022-02-16 00:14:33.504 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43a65cd8]
[DEBUG] 2022-02-16 00:14:33.504 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.bankAccounts
[DEBUG] 2022-02-16 00:14:33.504 [main] MetamodelGraphWalker - Property path deemed to be circular : accountOwner.bankAccounts
[DEBUG] 2022-02-16 00:14:33.504 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.name
[DEBUG] 2022-02-16 00:14:33.504 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions
[DEBUG] 2022-02-16 00:14:33.504 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17461db]
[DEBUG] 2022-02-16 00:14:33.504 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fd9e827]
[DEBUG] 2022-02-16 00:14:33.504 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.amountOfMoney
[DEBUG] 2022-02-16 00:14:33.504 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.date
[DEBUG] 2022-02-16 00:14:33.504 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount
[DEBUG] 2022-02-16 00:14:33.504 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24a86066]
[DEBUG] 2022-02-16 00:14:33.504 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount.accountOwner
[DEBUG] 2022-02-16 00:14:33.504 [main] MetamodelGraphWalker - Property path deemed to be circular : accountOwner.sentTransactions.receiverAccount.accountOwner
[DEBUG] 2022-02-16 00:14:33.504 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount.amountOfMoney
[DEBUG] 2022-02-16 00:14:33.504 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount.bankProducer
[DEBUG] 2022-02-16 00:14:33.504 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b3bb1f7]
[DEBUG] 2022-02-16 00:14:33.505 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount.bankProducer.bankAccounts
[DEBUG] 2022-02-16 00:14:33.505 [main] MetamodelGraphWalker - Property path deemed to be circular : accountOwner.sentTransactions.receiverAccount.bankProducer.bankAccounts
[DEBUG] 2022-02-16 00:14:33.505 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount.bankProducer.commission
[DEBUG] 2022-02-16 00:14:33.505 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount.bankProducer.name
[DEBUG] 2022-02-16 00:14:33.506 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount.currency
[DEBUG] 2022-02-16 00:14:33.506 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount.receivedTransactions
[DEBUG] 2022-02-16 00:14:33.506 [main] MetamodelGraphWalker - Property path deemed to be circular : accountOwner.sentTransactions.receiverAccount.receivedTransactions
[DEBUG] 2022-02-16 00:14:33.506 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount.sentTransactions
[DEBUG] 2022-02-16 00:14:33.506 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3f1a4795]
[DEBUG] 2022-02-16 00:14:33.506 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a6f6c7e]
[DEBUG] 2022-02-16 00:14:33.506 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount.sentTransactions.amountOfMoney
[DEBUG] 2022-02-16 00:14:33.506 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount.sentTransactions.date
[DEBUG] 2022-02-16 00:14:33.506 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount.sentTransactions.receiverAccount
[DEBUG] 2022-02-16 00:14:33.506 [main] MetamodelGraphWalker - Property path deemed to be circular : accountOwner.sentTransactions.receiverAccount.sentTransactions.receiverAccount
[DEBUG] 2022-02-16 00:14:33.506 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount.sentTransactions.sender
[DEBUG] 2022-02-16 00:14:33.506 [main] MetamodelGraphWalker - Property path deemed to be circular : accountOwner.sentTransactions.receiverAccount.sentTransactions.sender
[DEBUG] 2022-02-16 00:14:33.506 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount.sentTransactions.senderAccount
[DEBUG] 2022-02-16 00:14:33.506 [main] MetamodelGraphWalker - Property path deemed to be circular : accountOwner.sentTransactions.receiverAccount.sentTransactions.senderAccount
[DEBUG] 2022-02-16 00:14:33.506 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.sender
[DEBUG] 2022-02-16 00:14:33.506 [main] MetamodelGraphWalker - Property path deemed to be circular : accountOwner.sentTransactions.sender
[DEBUG] 2022-02-16 00:14:33.506 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.senderAccount
[DEBUG] 2022-02-16 00:14:33.506 [main] MetamodelGraphWalker - Property path deemed to be circular : accountOwner.sentTransactions.senderAccount
[DEBUG] 2022-02-16 00:14:33.507 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.type
[DEBUG] 2022-02-16 00:14:33.507 [main] MetamodelGraphWalker - Visiting attribute path : amountOfMoney
[DEBUG] 2022-02-16 00:14:33.507 [main] MetamodelGraphWalker - Visiting attribute path : bankProducer
[DEBUG] 2022-02-16 00:14:33.507 [main] MetamodelGraphWalker - Property path deemed to be circular : bankProducer
[DEBUG] 2022-02-16 00:14:33.507 [main] MetamodelGraphWalker - Visiting attribute path : currency
[DEBUG] 2022-02-16 00:14:33.507 [main] MetamodelGraphWalker - Visiting attribute path : receivedTransactions
[DEBUG] 2022-02-16 00:14:33.507 [main] MetamodelGraphWalker - Property path deemed to be circular : receivedTransactions
[DEBUG] 2022-02-16 00:14:33.507 [main] MetamodelGraphWalker - Visiting attribute path : sentTransactions
[DEBUG] 2022-02-16 00:14:33.507 [main] MetamodelGraphWalker - Property path deemed to be circular : sentTransactions
[DEBUG] 2022-02-16 00:14:33.507 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-02-16 00:14:33.507 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-02-16 00:14:33.514 [main] LoadPlanTreePrinter - LoadPlan(entity=by.ganevich.entity.BankAccount)
    - Returns
       - EntityReturnImpl(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:0>, path=by.ganevich.entity.BankAccount)
          - EntityAttributeFetchImpl(entity=by.ganevich.entity.Client, querySpaceUid=<gen:1>, path=by.ganevich.entity.BankAccount.accountOwner)
             - CollectionAttributeFetchImpl(collection=by.ganevich.entity.Client.sentTransactions, querySpaceUid=<gen:2>, path=by.ganevich.entity.BankAccount.accountOwner.sentTransactions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:3>, path=by.ganevich.entity.BankAccount.accountOwner.sentTransactions.<elements>)
                   - EntityAttributeFetchImpl(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:4>, path=by.ganevich.entity.BankAccount.accountOwner.sentTransactions.<elements>.receiverAccount)
                      - EntityAttributeFetchImpl(entity=by.ganevich.entity.Bank, querySpaceUid=<gen:5>, path=by.ganevich.entity.BankAccount.accountOwner.sentTransactions.<elements>.receiverAccount.bankProducer)
                      - CollectionAttributeFetchImpl(collection=by.ganevich.entity.BankAccount.sentTransactions, querySpaceUid=<gen:6>, path=by.ganevich.entity.BankAccount.accountOwner.sentTransactions.<elements>.receiverAccount.sentTransactions)
                         - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:7>, path=by.ganevich.entity.BankAccount.accountOwner.sentTransactions.<elements>.receiverAccount.sentTransactions.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=by.ganevich.entity.BankAccount)
          - SQL table alias mapping - bankaccoun0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(accountOwner)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=by.ganevich.entity.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(sentTransactions)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=by.ganevich.entity.Client.sentTransactions)
                      - SQL table alias mapping - senttransa2_
                      - alias suffix - 2_
                      - suffixed key columns - {sender5_5_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_5_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=by.ganevich.entity.Transaction)
                            - SQL table alias mapping - senttransa2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_5_3_}
                            - JOIN (JoinDefinedByMetadata(receiverAccount)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=by.ganevich.entity.BankAccount)
                                  - SQL table alias mapping - bankaccoun3_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_0_4_}
                                  - JOIN (JoinDefinedByMetadata(bankProducer)) : <gen:4> -> <gen:5>
                                     - EntityQuerySpaceImpl(uid=<gen:5>, entity=by.ganevich.entity.Bank)
                                        - SQL table alias mapping - bank4_
                                        - alias suffix - 5_
                                        - suffixed key columns - {id1_1_5_}
                                  - JOIN (JoinDefinedByMetadata(sentTransactions)) : <gen:4> -> <gen:6>
                                     - CollectionQuerySpaceImpl(uid=<gen:6>, collection=by.ganevich.entity.BankAccount.sentTransactions)
                                        - SQL table alias mapping - senttransa5_
                                        - alias suffix - 6_
                                        - suffixed key columns - {senderac6_5_6_}
                                        - entity-element alias suffix - 7_
                                        - 7_entity-element suffixed key columns - id1_5_7_
                                        - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                                           - EntityQuerySpaceImpl(uid=<gen:7>, entity=by.ganevich.entity.Transaction)
                                              - SQL table alias mapping - senttransa5_
                                              - alias suffix - 7_
                                              - suffixed key columns - {id1_5_7_}

[DEBUG] 2022-02-16 00:14:33.520 [main] EntityLoader - Static select for entity by.ganevich.entity.BankAccount [NONE]: select bankaccoun0_.id as id1_0_0_, bankaccoun0_.clientId as clientid4_0_0_, bankaccoun0_.ammountOfMoney as ammounto2_0_0_, bankaccoun0_.bankId as bankid5_0_0_, bankaccoun0_.currency as currency3_0_0_, client1_.id as id1_2_1_, client1_.name as name2_2_1_, client1_.type as type3_2_1_, senttransa2_.sender as sender5_5_2_, senttransa2_.id as id1_5_2_, senttransa2_.id as id1_5_3_, senttransa2_.amountofmoney as amountof2_5_3_, senttransa2_.date as date3_5_3_, senttransa2_.recipientAccountId as recipien4_5_3_, senttransa2_.sender as sender5_5_3_, senttransa2_.senderAccountId as senderac6_5_3_, bankaccoun3_.id as id1_0_4_, bankaccoun3_.clientId as clientid4_0_4_, bankaccoun3_.ammountOfMoney as ammounto2_0_4_, bankaccoun3_.bankId as bankid5_0_4_, bankaccoun3_.currency as currency3_0_4_, bank4_.id as id1_1_5_, bank4_.commission as commissi2_1_5_, bank4_.name as name3_1_5_, senttransa5_.senderAccountId as senderac6_5_6_, senttransa5_.id as id1_5_6_, senttransa5_.id as id1_5_7_, senttransa5_.amountofmoney as amountof2_5_7_, senttransa5_.date as date3_5_7_, senttransa5_.recipientAccountId as recipien4_5_7_, senttransa5_.sender as sender5_5_7_, senttransa5_.senderAccountId as senderac6_5_7_ from bankAccounts bankaccoun0_ left outer join clients client1_ on bankaccoun0_.clientId=client1_.id left outer join transactions senttransa2_ on client1_.id=senttransa2_.sender left outer join bankAccounts bankaccoun3_ on senttransa2_.recipientAccountId=bankaccoun3_.id left outer join banks bank4_ on bankaccoun3_.bankId=bank4_.id left outer join transactions senttransa5_ on bankaccoun3_.id=senttransa5_.senderAccountId where bankaccoun0_.id=?
[DEBUG] 2022-02-16 00:14:33.520 [main] AbstractEntityPersister - Static SQL for entity: by.ganevich.entity.Bank
[DEBUG] 2022-02-16 00:14:33.520 [main] AbstractEntityPersister -  Version select: select id from banks where id =?
[DEBUG] 2022-02-16 00:14:33.520 [main] AbstractEntityPersister -  Snapshot select: select bank_.id, bank_.commission as commissi2_1_, bank_.name as name3_1_ from banks bank_ where bank_.id=?
[DEBUG] 2022-02-16 00:14:33.520 [main] AbstractEntityPersister -  Insert 0: insert into banks (commission, name, id) values (?, ?, ?)
[DEBUG] 2022-02-16 00:14:33.520 [main] AbstractEntityPersister -  Update 0: update banks set commission=?, name=? where id=?
[DEBUG] 2022-02-16 00:14:33.520 [main] AbstractEntityPersister -  Delete 0: delete from banks where id=?
[DEBUG] 2022-02-16 00:14:33.520 [main] AbstractEntityPersister -  Identity insert: insert into banks (commission, name) values (?, ?)
[DEBUG] 2022-02-16 00:14:33.520 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c101cc1]
[DEBUG] 2022-02-16 00:14:33.521 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts
[DEBUG] 2022-02-16 00:14:33.521 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7fb48179]
[DEBUG] 2022-02-16 00:14:33.521 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@201c3cda]
[DEBUG] 2022-02-16 00:14:33.521 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner
[DEBUG] 2022-02-16 00:14:33.521 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6732726]
[DEBUG] 2022-02-16 00:14:33.521 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.bankAccounts
[DEBUG] 2022-02-16 00:14:33.521 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.accountOwner.bankAccounts
[DEBUG] 2022-02-16 00:14:33.522 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.name
[DEBUG] 2022-02-16 00:14:33.522 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions
[DEBUG] 2022-02-16 00:14:33.522 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3d64c581]
[DEBUG] 2022-02-16 00:14:33.522 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ec5ea63]
[DEBUG] 2022-02-16 00:14:33.522 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.amountOfMoney
[DEBUG] 2022-02-16 00:14:33.522 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.date
[DEBUG] 2022-02-16 00:14:33.522 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.receiverAccount
[DEBUG] 2022-02-16 00:14:33.522 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c83ae01]
[DEBUG] 2022-02-16 00:14:33.522 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.receiverAccount.accountOwner
[DEBUG] 2022-02-16 00:14:33.522 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.accountOwner.sentTransactions.receiverAccount.accountOwner
[DEBUG] 2022-02-16 00:14:33.522 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.receiverAccount.amountOfMoney
[DEBUG] 2022-02-16 00:14:33.522 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.receiverAccount.bankProducer
[DEBUG] 2022-02-16 00:14:33.522 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.accountOwner.sentTransactions.receiverAccount.bankProducer
[DEBUG] 2022-02-16 00:14:33.522 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.receiverAccount.currency
[DEBUG] 2022-02-16 00:14:33.522 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.receiverAccount.receivedTransactions
[DEBUG] 2022-02-16 00:14:33.522 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.accountOwner.sentTransactions.receiverAccount.receivedTransactions
[DEBUG] 2022-02-16 00:14:33.522 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.receiverAccount.sentTransactions
[DEBUG] 2022-02-16 00:14:33.522 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69d45cca]
[DEBUG] 2022-02-16 00:14:33.522 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fdf17dc]
[DEBUG] 2022-02-16 00:14:33.522 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.receiverAccount.sentTransactions.amountOfMoney
[DEBUG] 2022-02-16 00:14:33.522 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.receiverAccount.sentTransactions.date
[DEBUG] 2022-02-16 00:14:33.522 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.receiverAccount.sentTransactions.receiverAccount
[DEBUG] 2022-02-16 00:14:33.522 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.accountOwner.sentTransactions.receiverAccount.sentTransactions.receiverAccount
[DEBUG] 2022-02-16 00:14:33.522 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.receiverAccount.sentTransactions.sender
[DEBUG] 2022-02-16 00:14:33.522 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.accountOwner.sentTransactions.receiverAccount.sentTransactions.sender
[DEBUG] 2022-02-16 00:14:33.522 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.receiverAccount.sentTransactions.senderAccount
[DEBUG] 2022-02-16 00:14:33.522 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.accountOwner.sentTransactions.receiverAccount.sentTransactions.senderAccount
[DEBUG] 2022-02-16 00:14:33.522 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.sender
[DEBUG] 2022-02-16 00:14:33.522 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.accountOwner.sentTransactions.sender
[DEBUG] 2022-02-16 00:14:33.522 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.senderAccount
[DEBUG] 2022-02-16 00:14:33.522 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.accountOwner.sentTransactions.senderAccount
[DEBUG] 2022-02-16 00:14:33.522 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.type
[DEBUG] 2022-02-16 00:14:33.523 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.amountOfMoney
[DEBUG] 2022-02-16 00:14:33.523 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.bankProducer
[DEBUG] 2022-02-16 00:14:33.523 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.bankProducer
[DEBUG] 2022-02-16 00:14:33.523 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.currency
[DEBUG] 2022-02-16 00:14:33.523 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions
[DEBUG] 2022-02-16 00:14:33.523 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.receivedTransactions
[DEBUG] 2022-02-16 00:14:33.523 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.sentTransactions
[DEBUG] 2022-02-16 00:14:33.523 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.sentTransactions
[DEBUG] 2022-02-16 00:14:33.523 [main] MetamodelGraphWalker - Visiting attribute path : commission
[DEBUG] 2022-02-16 00:14:33.523 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2022-02-16 00:14:33.523 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-02-16 00:14:33.523 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-02-16 00:14:33.524 [main] LoadPlanTreePrinter - LoadPlan(entity=by.ganevich.entity.Bank)
    - Returns
       - EntityReturnImpl(entity=by.ganevich.entity.Bank, querySpaceUid=<gen:0>, path=by.ganevich.entity.Bank)
          - CollectionAttributeFetchImpl(collection=by.ganevich.entity.Bank.bankAccounts, querySpaceUid=<gen:1>, path=by.ganevich.entity.Bank.bankAccounts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:2>, path=by.ganevich.entity.Bank.bankAccounts.<elements>)
                - EntityAttributeFetchImpl(entity=by.ganevich.entity.Client, querySpaceUid=<gen:3>, path=by.ganevich.entity.Bank.bankAccounts.<elements>.accountOwner)
                   - CollectionAttributeFetchImpl(collection=by.ganevich.entity.Client.sentTransactions, querySpaceUid=<gen:4>, path=by.ganevich.entity.Bank.bankAccounts.<elements>.accountOwner.sentTransactions)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:5>, path=by.ganevich.entity.Bank.bankAccounts.<elements>.accountOwner.sentTransactions.<elements>)
                         - EntityAttributeFetchImpl(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:6>, path=by.ganevich.entity.Bank.bankAccounts.<elements>.accountOwner.sentTransactions.<elements>.receiverAccount)
                            - CollectionAttributeFetchImpl(collection=by.ganevich.entity.BankAccount.sentTransactions, querySpaceUid=<gen:7>, path=by.ganevich.entity.Bank.bankAccounts.<elements>.accountOwner.sentTransactions.<elements>.receiverAccount.sentTransactions)
                               - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:8>, path=by.ganevich.entity.Bank.bankAccounts.<elements>.accountOwner.sentTransactions.<elements>.receiverAccount.sentTransactions.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=by.ganevich.entity.Bank)
          - SQL table alias mapping - bank0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(bankAccounts)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=by.ganevich.entity.Bank.bankAccounts)
                - SQL table alias mapping - bankaccoun1_
                - alias suffix - 1_
                - suffixed key columns - {bankid5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=by.ganevich.entity.BankAccount)
                      - SQL table alias mapping - bankaccoun1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(accountOwner)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=by.ganevich.entity.Client)
                            - SQL table alias mapping - client2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}
                            - JOIN (JoinDefinedByMetadata(sentTransactions)) : <gen:3> -> <gen:4>
                               - CollectionQuerySpaceImpl(uid=<gen:4>, collection=by.ganevich.entity.Client.sentTransactions)
                                  - SQL table alias mapping - senttransa3_
                                  - alias suffix - 4_
                                  - suffixed key columns - {sender5_5_4_}
                                  - entity-element alias suffix - 5_
                                  - 5_entity-element suffixed key columns - id1_5_5_
                                  - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                                     - EntityQuerySpaceImpl(uid=<gen:5>, entity=by.ganevich.entity.Transaction)
                                        - SQL table alias mapping - senttransa3_
                                        - alias suffix - 5_
                                        - suffixed key columns - {id1_5_5_}
                                        - JOIN (JoinDefinedByMetadata(receiverAccount)) : <gen:5> -> <gen:6>
                                           - EntityQuerySpaceImpl(uid=<gen:6>, entity=by.ganevich.entity.BankAccount)
                                              - SQL table alias mapping - bankaccoun4_
                                              - alias suffix - 6_
                                              - suffixed key columns - {id1_0_6_}
                                              - JOIN (JoinDefinedByMetadata(sentTransactions)) : <gen:6> -> <gen:7>
                                                 - CollectionQuerySpaceImpl(uid=<gen:7>, collection=by.ganevich.entity.BankAccount.sentTransactions)
                                                    - SQL table alias mapping - senttransa5_
                                                    - alias suffix - 7_
                                                    - suffixed key columns - {senderac6_5_7_}
                                                    - entity-element alias suffix - 8_
                                                    - 8_entity-element suffixed key columns - id1_5_8_
                                                    - JOIN (JoinDefinedByMetadata(elements)) : <gen:7> -> <gen:8>
                                                       - EntityQuerySpaceImpl(uid=<gen:8>, entity=by.ganevich.entity.Transaction)
                                                          - SQL table alias mapping - senttransa5_
                                                          - alias suffix - 8_
                                                          - suffixed key columns - {id1_5_8_}

[DEBUG] 2022-02-16 00:14:33.524 [main] EntityLoader - Static select for entity by.ganevich.entity.Bank [NONE]: select bank0_.id as id1_1_0_, bank0_.commission as commissi2_1_0_, bank0_.name as name3_1_0_, bankaccoun1_.bankId as bankid5_0_1_, bankaccoun1_.id as id1_0_1_, bankaccoun1_.id as id1_0_2_, bankaccoun1_.clientId as clientid4_0_2_, bankaccoun1_.ammountOfMoney as ammounto2_0_2_, bankaccoun1_.bankId as bankid5_0_2_, bankaccoun1_.currency as currency3_0_2_, client2_.id as id1_2_3_, client2_.name as name2_2_3_, client2_.type as type3_2_3_, senttransa3_.sender as sender5_5_4_, senttransa3_.id as id1_5_4_, senttransa3_.id as id1_5_5_, senttransa3_.amountofmoney as amountof2_5_5_, senttransa3_.date as date3_5_5_, senttransa3_.recipientAccountId as recipien4_5_5_, senttransa3_.sender as sender5_5_5_, senttransa3_.senderAccountId as senderac6_5_5_, bankaccoun4_.id as id1_0_6_, bankaccoun4_.clientId as clientid4_0_6_, bankaccoun4_.ammountOfMoney as ammounto2_0_6_, bankaccoun4_.bankId as bankid5_0_6_, bankaccoun4_.currency as currency3_0_6_, senttransa5_.senderAccountId as senderac6_5_7_, senttransa5_.id as id1_5_7_, senttransa5_.id as id1_5_8_, senttransa5_.amountofmoney as amountof2_5_8_, senttransa5_.date as date3_5_8_, senttransa5_.recipientAccountId as recipien4_5_8_, senttransa5_.sender as sender5_5_8_, senttransa5_.senderAccountId as senderac6_5_8_ from banks bank0_ left outer join bankAccounts bankaccoun1_ on bank0_.id=bankaccoun1_.bankId left outer join clients client2_ on bankaccoun1_.clientId=client2_.id left outer join transactions senttransa3_ on client2_.id=senttransa3_.sender left outer join bankAccounts bankaccoun4_ on senttransa3_.recipientAccountId=bankaccoun4_.id left outer join transactions senttransa5_ on bankaccoun4_.id=senttransa5_.senderAccountId where bank0_.id=?
[DEBUG] 2022-02-16 00:14:33.525 [main] AbstractEntityPersister - Static SQL for entity: by.ganevich.entity.Rate
[DEBUG] 2022-02-16 00:14:33.525 [main] AbstractEntityPersister -  Version select: select id from exchangeRates where id =?
[DEBUG] 2022-02-16 00:14:33.525 [main] AbstractEntityPersister -  Snapshot select: select rate_.id, rate_.currency as currency2_4_, rate_.rate as rate3_4_ from exchangeRates rate_ where rate_.id=?
[DEBUG] 2022-02-16 00:14:33.525 [main] AbstractEntityPersister -  Insert 0: insert into exchangeRates (currency, rate, id) values (?, ?, ?)
[DEBUG] 2022-02-16 00:14:33.525 [main] AbstractEntityPersister -  Update 0: update exchangeRates set currency=?, rate=? where id=?
[DEBUG] 2022-02-16 00:14:33.525 [main] AbstractEntityPersister -  Delete 0: delete from exchangeRates where id=?
[DEBUG] 2022-02-16 00:14:33.525 [main] AbstractEntityPersister -  Identity insert: insert into exchangeRates (currency, rate) values (?, ?)
[DEBUG] 2022-02-16 00:14:33.525 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e73d5eb]
[DEBUG] 2022-02-16 00:14:33.525 [main] MetamodelGraphWalker - Visiting attribute path : currency
[DEBUG] 2022-02-16 00:14:33.525 [main] MetamodelGraphWalker - Visiting attribute path : rate
[DEBUG] 2022-02-16 00:14:33.525 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-02-16 00:14:33.525 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-02-16 00:14:33.525 [main] LoadPlanTreePrinter - LoadPlan(entity=by.ganevich.entity.Rate)
    - Returns
       - EntityReturnImpl(entity=by.ganevich.entity.Rate, querySpaceUid=<gen:0>, path=by.ganevich.entity.Rate)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=by.ganevich.entity.Rate)
          - SQL table alias mapping - rate0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

[DEBUG] 2022-02-16 00:14:33.525 [main] EntityLoader - Static select for entity by.ganevich.entity.Rate [NONE]: select rate0_.id as id1_4_0_, rate0_.currency as currency2_4_0_, rate0_.rate as rate3_4_0_ from exchangeRates rate0_ where rate0_.id=?
[DEBUG] 2022-02-16 00:14:33.525 [main] AbstractEntityPersister - Static SQL for entity: by.ganevich.entity.Client
[DEBUG] 2022-02-16 00:14:33.525 [main] AbstractEntityPersister -  Version select: select id from clients where id =?
[DEBUG] 2022-02-16 00:14:33.525 [main] AbstractEntityPersister -  Snapshot select: select client_.id, client_.name as name2_2_, client_.type as type3_2_ from clients client_ where client_.id=?
[DEBUG] 2022-02-16 00:14:33.525 [main] AbstractEntityPersister -  Insert 0: insert into clients (name, type, id) values (?, ?, ?)
[DEBUG] 2022-02-16 00:14:33.525 [main] AbstractEntityPersister -  Update 0: update clients set name=?, type=? where id=?
[DEBUG] 2022-02-16 00:14:33.525 [main] AbstractEntityPersister -  Delete 0: delete from clients where id=?
[DEBUG] 2022-02-16 00:14:33.525 [main] AbstractEntityPersister -  Identity insert: insert into clients (name, type) values (?, ?)
[DEBUG] 2022-02-16 00:14:33.526 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d904ff1]
[DEBUG] 2022-02-16 00:14:33.526 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts
[DEBUG] 2022-02-16 00:14:33.526 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7ff8a9dc]
[DEBUG] 2022-02-16 00:14:33.526 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cde651b]
[DEBUG] 2022-02-16 00:14:33.526 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner
[DEBUG] 2022-02-16 00:14:33.526 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.accountOwner
[DEBUG] 2022-02-16 00:14:33.526 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.amountOfMoney
[DEBUG] 2022-02-16 00:14:33.526 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.bankProducer
[DEBUG] 2022-02-16 00:14:33.526 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b495d4]
[DEBUG] 2022-02-16 00:14:33.526 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.bankProducer.bankAccounts
[DEBUG] 2022-02-16 00:14:33.526 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.bankProducer.bankAccounts
[DEBUG] 2022-02-16 00:14:33.526 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.bankProducer.commission
[DEBUG] 2022-02-16 00:14:33.526 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.bankProducer.name
[DEBUG] 2022-02-16 00:14:33.526 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.currency
[DEBUG] 2022-02-16 00:14:33.526 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions
[DEBUG] 2022-02-16 00:14:33.526 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f37b6d9]
[DEBUG] 2022-02-16 00:14:33.526 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71e35c4]
[DEBUG] 2022-02-16 00:14:33.526 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.amountOfMoney
[DEBUG] 2022-02-16 00:14:33.526 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.date
[DEBUG] 2022-02-16 00:14:33.526 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.receiverAccount
[DEBUG] 2022-02-16 00:14:33.526 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.receivedTransactions.receiverAccount
[DEBUG] 2022-02-16 00:14:33.526 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.sender
[DEBUG] 2022-02-16 00:14:33.526 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@503df2d0]
[DEBUG] 2022-02-16 00:14:33.526 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.sender.bankAccounts
[DEBUG] 2022-02-16 00:14:33.526 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.receivedTransactions.sender.bankAccounts
[DEBUG] 2022-02-16 00:14:33.526 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.sender.name
[DEBUG] 2022-02-16 00:14:33.527 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.sender.sentTransactions
[DEBUG] 2022-02-16 00:14:33.527 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.receivedTransactions.sender.sentTransactions
[DEBUG] 2022-02-16 00:14:33.527 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.sender.type
[DEBUG] 2022-02-16 00:14:33.527 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.senderAccount
[DEBUG] 2022-02-16 00:14:33.527 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c269425]
[DEBUG] 2022-02-16 00:14:33.527 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.senderAccount.accountOwner
[DEBUG] 2022-02-16 00:14:33.527 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.receivedTransactions.senderAccount.accountOwner
[DEBUG] 2022-02-16 00:14:33.527 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.senderAccount.amountOfMoney
[DEBUG] 2022-02-16 00:14:33.527 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.senderAccount.bankProducer
[DEBUG] 2022-02-16 00:14:33.527 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.receivedTransactions.senderAccount.bankProducer
[DEBUG] 2022-02-16 00:14:33.527 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.senderAccount.currency
[DEBUG] 2022-02-16 00:14:33.527 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.senderAccount.receivedTransactions
[DEBUG] 2022-02-16 00:14:33.527 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.receivedTransactions.senderAccount.receivedTransactions
[DEBUG] 2022-02-16 00:14:33.527 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.senderAccount.sentTransactions
[DEBUG] 2022-02-16 00:14:33.527 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.receivedTransactions.senderAccount.sentTransactions
[DEBUG] 2022-02-16 00:14:33.527 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.sentTransactions
[DEBUG] 2022-02-16 00:14:33.527 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.sentTransactions
[DEBUG] 2022-02-16 00:14:33.527 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2022-02-16 00:14:33.527 [main] MetamodelGraphWalker - Visiting attribute path : sentTransactions
[DEBUG] 2022-02-16 00:14:33.527 [main] MetamodelGraphWalker - Property path deemed to be circular : sentTransactions
[DEBUG] 2022-02-16 00:14:33.527 [main] MetamodelGraphWalker - Visiting attribute path : type
[DEBUG] 2022-02-16 00:14:33.527 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-02-16 00:14:33.527 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-02-16 00:14:33.528 [main] LoadPlanTreePrinter - LoadPlan(entity=by.ganevich.entity.Client)
    - Returns
       - EntityReturnImpl(entity=by.ganevich.entity.Client, querySpaceUid=<gen:0>, path=by.ganevich.entity.Client)
          - CollectionAttributeFetchImpl(collection=by.ganevich.entity.Client.bankAccounts, querySpaceUid=<gen:1>, path=by.ganevich.entity.Client.bankAccounts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:2>, path=by.ganevich.entity.Client.bankAccounts.<elements>)
                - EntityAttributeFetchImpl(entity=by.ganevich.entity.Bank, querySpaceUid=<gen:3>, path=by.ganevich.entity.Client.bankAccounts.<elements>.bankProducer)
                - CollectionAttributeFetchImpl(collection=by.ganevich.entity.BankAccount.receivedTransactions, querySpaceUid=<gen:4>, path=by.ganevich.entity.Client.bankAccounts.<elements>.receivedTransactions)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:5>, path=by.ganevich.entity.Client.bankAccounts.<elements>.receivedTransactions.<elements>)
                      - EntityAttributeFetchImpl(entity=by.ganevich.entity.Client, querySpaceUid=<gen:6>, path=by.ganevich.entity.Client.bankAccounts.<elements>.receivedTransactions.<elements>.sender)
                      - EntityAttributeFetchImpl(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:7>, path=by.ganevich.entity.Client.bankAccounts.<elements>.receivedTransactions.<elements>.senderAccount)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=by.ganevich.entity.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(bankAccounts)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=by.ganevich.entity.Client.bankAccounts)
                - SQL table alias mapping - bankaccoun1_
                - alias suffix - 1_
                - suffixed key columns - {clientid4_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=by.ganevich.entity.BankAccount)
                      - SQL table alias mapping - bankaccoun1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(bankProducer)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=by.ganevich.entity.Bank)
                            - SQL table alias mapping - bank2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_1_3_}
                      - JOIN (JoinDefinedByMetadata(receivedTransactions)) : <gen:2> -> <gen:4>
                         - CollectionQuerySpaceImpl(uid=<gen:4>, collection=by.ganevich.entity.BankAccount.receivedTransactions)
                            - SQL table alias mapping - receivedtr3_
                            - alias suffix - 4_
                            - suffixed key columns - {recipien4_5_4_}
                            - entity-element alias suffix - 5_
                            - 5_entity-element suffixed key columns - id1_5_5_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                               - EntityQuerySpaceImpl(uid=<gen:5>, entity=by.ganevich.entity.Transaction)
                                  - SQL table alias mapping - receivedtr3_
                                  - alias suffix - 5_
                                  - suffixed key columns - {id1_5_5_}
                                  - JOIN (JoinDefinedByMetadata(sender)) : <gen:5> -> <gen:6>
                                     - EntityQuerySpaceImpl(uid=<gen:6>, entity=by.ganevich.entity.Client)
                                        - SQL table alias mapping - client4_
                                        - alias suffix - 6_
                                        - suffixed key columns - {id1_2_6_}
                                  - JOIN (JoinDefinedByMetadata(senderAccount)) : <gen:5> -> <gen:7>
                                     - EntityQuerySpaceImpl(uid=<gen:7>, entity=by.ganevich.entity.BankAccount)
                                        - SQL table alias mapping - bankaccoun5_
                                        - alias suffix - 7_
                                        - suffixed key columns - {id1_0_7_}

[DEBUG] 2022-02-16 00:14:33.528 [main] EntityLoader - Static select for entity by.ganevich.entity.Client [NONE]: select client0_.id as id1_2_0_, client0_.name as name2_2_0_, client0_.type as type3_2_0_, bankaccoun1_.clientId as clientid4_0_1_, bankaccoun1_.id as id1_0_1_, bankaccoun1_.id as id1_0_2_, bankaccoun1_.clientId as clientid4_0_2_, bankaccoun1_.ammountOfMoney as ammounto2_0_2_, bankaccoun1_.bankId as bankid5_0_2_, bankaccoun1_.currency as currency3_0_2_, bank2_.id as id1_1_3_, bank2_.commission as commissi2_1_3_, bank2_.name as name3_1_3_, receivedtr3_.recipientAccountId as recipien4_5_4_, receivedtr3_.id as id1_5_4_, receivedtr3_.id as id1_5_5_, receivedtr3_.amountofmoney as amountof2_5_5_, receivedtr3_.date as date3_5_5_, receivedtr3_.recipientAccountId as recipien4_5_5_, receivedtr3_.sender as sender5_5_5_, receivedtr3_.senderAccountId as senderac6_5_5_, client4_.id as id1_2_6_, client4_.name as name2_2_6_, client4_.type as type3_2_6_, bankaccoun5_.id as id1_0_7_, bankaccoun5_.clientId as clientid4_0_7_, bankaccoun5_.ammountOfMoney as ammounto2_0_7_, bankaccoun5_.bankId as bankid5_0_7_, bankaccoun5_.currency as currency3_0_7_ from clients client0_ left outer join bankAccounts bankaccoun1_ on client0_.id=bankaccoun1_.clientId left outer join banks bank2_ on bankaccoun1_.bankId=bank2_.id left outer join transactions receivedtr3_ on bankaccoun1_.id=receivedtr3_.recipientAccountId left outer join clients client4_ on receivedtr3_.sender=client4_.id left outer join bankAccounts bankaccoun5_ on receivedtr3_.senderAccountId=bankaccoun5_.id where client0_.id=?
[DEBUG] 2022-02-16 00:14:33.532 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d96bdf8]
[DEBUG] 2022-02-16 00:14:33.532 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f76c2cc]
[DEBUG] 2022-02-16 00:14:33.532 [main] MetamodelGraphWalker - Visiting attribute path : amountOfMoney
[DEBUG] 2022-02-16 00:14:33.532 [main] MetamodelGraphWalker - Visiting attribute path : date
[DEBUG] 2022-02-16 00:14:33.532 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount
[DEBUG] 2022-02-16 00:14:33.532 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fc6deb7]
[DEBUG] 2022-02-16 00:14:33.532 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner
[DEBUG] 2022-02-16 00:14:33.532 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7da39774]
[DEBUG] 2022-02-16 00:14:33.532 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.bankAccounts
[DEBUG] 2022-02-16 00:14:33.532 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.accountOwner.bankAccounts
[DEBUG] 2022-02-16 00:14:33.532 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.name
[DEBUG] 2022-02-16 00:14:33.532 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions
[DEBUG] 2022-02-16 00:14:33.532 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1df1ced0]
[DEBUG] 2022-02-16 00:14:33.532 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5349b246]
[DEBUG] 2022-02-16 00:14:33.532 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.type
[DEBUG] 2022-02-16 00:14:33.532 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.amountOfMoney
[DEBUG] 2022-02-16 00:14:33.532 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.bankProducer
[DEBUG] 2022-02-16 00:14:33.532 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32b0876c]
[DEBUG] 2022-02-16 00:14:33.532 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.bankProducer.bankAccounts
[DEBUG] 2022-02-16 00:14:33.532 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.bankProducer.bankAccounts
[DEBUG] 2022-02-16 00:14:33.532 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.bankProducer.commission
[DEBUG] 2022-02-16 00:14:33.532 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.bankProducer.name
[DEBUG] 2022-02-16 00:14:33.532 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.currency
[DEBUG] 2022-02-16 00:14:33.532 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.receivedTransactions
[DEBUG] 2022-02-16 00:14:33.532 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.receivedTransactions
[DEBUG] 2022-02-16 00:14:33.532 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.sentTransactions
[DEBUG] 2022-02-16 00:14:33.532 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.sentTransactions
[DEBUG] 2022-02-16 00:14:33.532 [main] MetamodelGraphWalker - Visiting attribute path : sender
[DEBUG] 2022-02-16 00:14:33.532 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39bbd9e0]
[DEBUG] 2022-02-16 00:14:33.532 [main] MetamodelGraphWalker - Visiting attribute path : sender.bankAccounts
[DEBUG] 2022-02-16 00:14:33.532 [main] MetamodelGraphWalker - Property path deemed to be circular : sender.bankAccounts
[DEBUG] 2022-02-16 00:14:33.533 [main] MetamodelGraphWalker - Visiting attribute path : sender.name
[DEBUG] 2022-02-16 00:14:33.533 [main] MetamodelGraphWalker - Visiting attribute path : sender.sentTransactions
[DEBUG] 2022-02-16 00:14:33.533 [main] MetamodelGraphWalker - Property path deemed to be circular : sender.sentTransactions
[DEBUG] 2022-02-16 00:14:33.533 [main] MetamodelGraphWalker - Visiting attribute path : sender.type
[DEBUG] 2022-02-16 00:14:33.533 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount
[DEBUG] 2022-02-16 00:14:33.533 [main] MetamodelGraphWalker - Property path deemed to be circular : senderAccount
[DEBUG] 2022-02-16 00:14:33.533 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-02-16 00:14:33.535 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-02-16 00:14:33.535 [main] LoadPlanTreePrinter - LoadPlan(collection=by.ganevich.entity.BankAccount.sentTransactions)
    - Returns
       - CollectionReturnImpl(collection=by.ganevich.entity.BankAccount.sentTransactions, querySpaceUid=<gen:0>, path=[by.ganevich.entity.BankAccount.sentTransactions])
          - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:1>, path=[by.ganevich.entity.BankAccount.sentTransactions].<elements>)
             - EntityAttributeFetchImpl(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:2>, path=[by.ganevich.entity.BankAccount.sentTransactions].<elements>.receiverAccount)
                - EntityAttributeFetchImpl(entity=by.ganevich.entity.Client, querySpaceUid=<gen:3>, path=[by.ganevich.entity.BankAccount.sentTransactions].<elements>.receiverAccount.accountOwner)
                   - CollectionAttributeFetchImpl(collection=by.ganevich.entity.Client.sentTransactions, querySpaceUid=<gen:4>, path=[by.ganevich.entity.BankAccount.sentTransactions].<elements>.receiverAccount.accountOwner.sentTransactions)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:5>, path=[by.ganevich.entity.BankAccount.sentTransactions].<elements>.receiverAccount.accountOwner.sentTransactions.<elements>)
                - EntityAttributeFetchImpl(entity=by.ganevich.entity.Bank, querySpaceUid=<gen:6>, path=[by.ganevich.entity.BankAccount.sentTransactions].<elements>.receiverAccount.bankProducer)
             - EntityAttributeFetchImpl(entity=by.ganevich.entity.Client, querySpaceUid=<gen:7>, path=[by.ganevich.entity.BankAccount.sentTransactions].<elements>.sender)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=by.ganevich.entity.BankAccount.sentTransactions)
          - SQL table alias mapping - senttransa0_
          - alias suffix - 0_
          - suffixed key columns - {senderac6_5_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=by.ganevich.entity.Transaction)
                - SQL table alias mapping - senttransa0_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}
                - JOIN (JoinDefinedByMetadata(receiverAccount)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=by.ganevich.entity.BankAccount)
                      - SQL table alias mapping - bankaccoun1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(accountOwner)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=by.ganevich.entity.Client)
                            - SQL table alias mapping - client2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}
                      - JOIN (JoinDefinedByMetadata(bankProducer)) : <gen:2> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=by.ganevich.entity.Bank)
                            - SQL table alias mapping - bank3_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_1_4_}
                - JOIN (JoinDefinedByMetadata(sender)) : <gen:1> -> <gen:7>
                   - EntityQuerySpaceImpl(uid=<gen:7>, entity=by.ganevich.entity.Client)
                      - SQL table alias mapping - client4_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_2_5_}

[DEBUG] 2022-02-16 00:14:33.536 [main] CollectionLoader - Static select for collection by.ganevich.entity.BankAccount.sentTransactions: select senttransa0_.senderAccountId as senderac6_5_0_, senttransa0_.id as id1_5_0_, senttransa0_.id as id1_5_1_, senttransa0_.amountofmoney as amountof2_5_1_, senttransa0_.date as date3_5_1_, senttransa0_.recipientAccountId as recipien4_5_1_, senttransa0_.sender as sender5_5_1_, senttransa0_.senderAccountId as senderac6_5_1_, bankaccoun1_.id as id1_0_2_, bankaccoun1_.clientId as clientid4_0_2_, bankaccoun1_.ammountOfMoney as ammounto2_0_2_, bankaccoun1_.bankId as bankid5_0_2_, bankaccoun1_.currency as currency3_0_2_, client2_.id as id1_2_3_, client2_.name as name2_2_3_, client2_.type as type3_2_3_, bank3_.id as id1_1_4_, bank3_.commission as commissi2_1_4_, bank3_.name as name3_1_4_, client4_.id as id1_2_5_, client4_.name as name2_2_5_, client4_.type as type3_2_5_ from transactions senttransa0_ left outer join bankAccounts bankaccoun1_ on senttransa0_.recipientAccountId=bankaccoun1_.id left outer join clients client2_ on bankaccoun1_.clientId=client2_.id left outer join banks bank3_ on bankaccoun1_.bankId=bank3_.id left outer join clients client4_ on senttransa0_.sender=client4_.id where senttransa0_.senderAccountId=?
[DEBUG] 2022-02-16 00:14:33.536 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6242ae3b]
[DEBUG] 2022-02-16 00:14:33.536 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65ddee5a]
[DEBUG] 2022-02-16 00:14:33.536 [main] MetamodelGraphWalker - Visiting attribute path : amountOfMoney
[DEBUG] 2022-02-16 00:14:33.536 [main] MetamodelGraphWalker - Visiting attribute path : date
[DEBUG] 2022-02-16 00:14:33.536 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount
[DEBUG] 2022-02-16 00:14:33.536 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount
[DEBUG] 2022-02-16 00:14:33.536 [main] MetamodelGraphWalker - Visiting attribute path : sender
[DEBUG] 2022-02-16 00:14:33.536 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43fda8d9]
[DEBUG] 2022-02-16 00:14:33.536 [main] MetamodelGraphWalker - Visiting attribute path : sender.bankAccounts
[DEBUG] 2022-02-16 00:14:33.536 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53a7a60c]
[DEBUG] 2022-02-16 00:14:33.536 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28bdbe88]
[DEBUG] 2022-02-16 00:14:33.536 [main] MetamodelGraphWalker - Visiting attribute path : sender.name
[DEBUG] 2022-02-16 00:14:33.536 [main] MetamodelGraphWalker - Visiting attribute path : sender.sentTransactions
[DEBUG] 2022-02-16 00:14:33.536 [main] MetamodelGraphWalker - Property path deemed to be circular : sender.sentTransactions
[DEBUG] 2022-02-16 00:14:33.536 [main] MetamodelGraphWalker - Visiting attribute path : sender.type
[DEBUG] 2022-02-16 00:14:33.536 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount
[DEBUG] 2022-02-16 00:14:33.536 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a87026]
[DEBUG] 2022-02-16 00:14:33.536 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.accountOwner
[DEBUG] 2022-02-16 00:14:33.536 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@600f5704]
[DEBUG] 2022-02-16 00:14:33.536 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.accountOwner.bankAccounts
[DEBUG] 2022-02-16 00:14:33.536 [main] MetamodelGraphWalker - Property path deemed to be circular : senderAccount.accountOwner.bankAccounts
[DEBUG] 2022-02-16 00:14:33.536 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.accountOwner.name
[DEBUG] 2022-02-16 00:14:33.536 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.accountOwner.sentTransactions
[DEBUG] 2022-02-16 00:14:33.537 [main] MetamodelGraphWalker - Property path deemed to be circular : senderAccount.accountOwner.sentTransactions
[DEBUG] 2022-02-16 00:14:33.537 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.accountOwner.type
[DEBUG] 2022-02-16 00:14:33.537 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.amountOfMoney
[DEBUG] 2022-02-16 00:14:33.537 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.bankProducer
[DEBUG] 2022-02-16 00:14:33.537 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@606f81b5]
[DEBUG] 2022-02-16 00:14:33.537 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.bankProducer.bankAccounts
[DEBUG] 2022-02-16 00:14:33.537 [main] MetamodelGraphWalker - Property path deemed to be circular : senderAccount.bankProducer.bankAccounts
[DEBUG] 2022-02-16 00:14:33.537 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.bankProducer.commission
[DEBUG] 2022-02-16 00:14:33.537 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.bankProducer.name
[DEBUG] 2022-02-16 00:14:33.537 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.currency
[DEBUG] 2022-02-16 00:14:33.537 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.receivedTransactions
[DEBUG] 2022-02-16 00:14:33.537 [main] MetamodelGraphWalker - Property path deemed to be circular : senderAccount.receivedTransactions
[DEBUG] 2022-02-16 00:14:33.537 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.sentTransactions
[DEBUG] 2022-02-16 00:14:33.537 [main] MetamodelGraphWalker - Property path deemed to be circular : senderAccount.sentTransactions
[DEBUG] 2022-02-16 00:14:33.537 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-02-16 00:14:33.537 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-02-16 00:14:33.537 [main] LoadPlanTreePrinter - LoadPlan(collection=by.ganevich.entity.BankAccount.receivedTransactions)
    - Returns
       - CollectionReturnImpl(collection=by.ganevich.entity.BankAccount.receivedTransactions, querySpaceUid=<gen:0>, path=[by.ganevich.entity.BankAccount.receivedTransactions])
          - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:1>, path=[by.ganevich.entity.BankAccount.receivedTransactions].<elements>)
             - EntityAttributeFetchImpl(entity=by.ganevich.entity.Client, querySpaceUid=<gen:2>, path=[by.ganevich.entity.BankAccount.receivedTransactions].<elements>.sender)
                - CollectionAttributeFetchImpl(collection=by.ganevich.entity.Client.bankAccounts, querySpaceUid=<gen:3>, path=[by.ganevich.entity.BankAccount.receivedTransactions].<elements>.sender.bankAccounts)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:4>, path=[by.ganevich.entity.BankAccount.receivedTransactions].<elements>.sender.bankAccounts.<elements>)
             - EntityAttributeFetchImpl(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:5>, path=[by.ganevich.entity.BankAccount.receivedTransactions].<elements>.senderAccount)
                - EntityAttributeFetchImpl(entity=by.ganevich.entity.Client, querySpaceUid=<gen:6>, path=[by.ganevich.entity.BankAccount.receivedTransactions].<elements>.senderAccount.accountOwner)
                - EntityAttributeFetchImpl(entity=by.ganevich.entity.Bank, querySpaceUid=<gen:7>, path=[by.ganevich.entity.BankAccount.receivedTransactions].<elements>.senderAccount.bankProducer)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=by.ganevich.entity.BankAccount.receivedTransactions)
          - SQL table alias mapping - receivedtr0_
          - alias suffix - 0_
          - suffixed key columns - {recipien4_5_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=by.ganevich.entity.Transaction)
                - SQL table alias mapping - receivedtr0_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}
                - JOIN (JoinDefinedByMetadata(sender)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=by.ganevich.entity.Client)
                      - SQL table alias mapping - client1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(senderAccount)) : <gen:1> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=by.ganevich.entity.BankAccount)
                      - SQL table alias mapping - bankaccoun2_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_0_3_}
                      - JOIN (JoinDefinedByMetadata(accountOwner)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=by.ganevich.entity.Client)
                            - SQL table alias mapping - client3_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_2_4_}
                      - JOIN (JoinDefinedByMetadata(bankProducer)) : <gen:5> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=by.ganevich.entity.Bank)
                            - SQL table alias mapping - bank4_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_1_5_}

[DEBUG] 2022-02-16 00:14:33.538 [main] CollectionLoader - Static select for collection by.ganevich.entity.BankAccount.receivedTransactions: select receivedtr0_.recipientAccountId as recipien4_5_0_, receivedtr0_.id as id1_5_0_, receivedtr0_.id as id1_5_1_, receivedtr0_.amountofmoney as amountof2_5_1_, receivedtr0_.date as date3_5_1_, receivedtr0_.recipientAccountId as recipien4_5_1_, receivedtr0_.sender as sender5_5_1_, receivedtr0_.senderAccountId as senderac6_5_1_, client1_.id as id1_2_2_, client1_.name as name2_2_2_, client1_.type as type3_2_2_, bankaccoun2_.id as id1_0_3_, bankaccoun2_.clientId as clientid4_0_3_, bankaccoun2_.ammountOfMoney as ammounto2_0_3_, bankaccoun2_.bankId as bankid5_0_3_, bankaccoun2_.currency as currency3_0_3_, client3_.id as id1_2_4_, client3_.name as name2_2_4_, client3_.type as type3_2_4_, bank4_.id as id1_1_5_, bank4_.commission as commissi2_1_5_, bank4_.name as name3_1_5_ from transactions receivedtr0_ left outer join clients client1_ on receivedtr0_.sender=client1_.id left outer join bankAccounts bankaccoun2_ on receivedtr0_.senderAccountId=bankaccoun2_.id left outer join clients client3_ on bankaccoun2_.clientId=client3_.id left outer join banks bank4_ on bankaccoun2_.bankId=bank4_.id where receivedtr0_.recipientAccountId=?
[DEBUG] 2022-02-16 00:14:33.538 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@44b21f9f]
[DEBUG] 2022-02-16 00:14:33.538 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ee8130e]
[DEBUG] 2022-02-16 00:14:33.538 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner
[DEBUG] 2022-02-16 00:14:33.538 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@169268a7]
[DEBUG] 2022-02-16 00:14:33.538 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.bankAccounts
[DEBUG] 2022-02-16 00:14:33.538 [main] MetamodelGraphWalker - Property path deemed to be circular : accountOwner.bankAccounts
[DEBUG] 2022-02-16 00:14:33.538 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.name
[DEBUG] 2022-02-16 00:14:33.538 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions
[DEBUG] 2022-02-16 00:14:33.538 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@78a0ff63]
[DEBUG] 2022-02-16 00:14:33.538 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c601d50]
[DEBUG] 2022-02-16 00:14:33.538 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.type
[DEBUG] 2022-02-16 00:14:33.538 [main] MetamodelGraphWalker - Visiting attribute path : amountOfMoney
[DEBUG] 2022-02-16 00:14:33.538 [main] MetamodelGraphWalker - Visiting attribute path : bankProducer
[DEBUG] 2022-02-16 00:14:33.538 [main] MetamodelGraphWalker - Property path deemed to be circular : bankProducer
[DEBUG] 2022-02-16 00:14:33.538 [main] MetamodelGraphWalker - Visiting attribute path : currency
[DEBUG] 2022-02-16 00:14:33.538 [main] MetamodelGraphWalker - Visiting attribute path : receivedTransactions
[DEBUG] 2022-02-16 00:14:33.538 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79b2852b]
[DEBUG] 2022-02-16 00:14:33.538 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@326d27ac]
[DEBUG] 2022-02-16 00:14:33.538 [main] MetamodelGraphWalker - Visiting attribute path : sentTransactions
[DEBUG] 2022-02-16 00:14:33.538 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d499d65]
[DEBUG] 2022-02-16 00:14:33.538 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@313f8301]
[DEBUG] 2022-02-16 00:14:33.538 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-02-16 00:14:33.538 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-02-16 00:14:33.538 [main] LoadPlanTreePrinter - LoadPlan(collection=by.ganevich.entity.Bank.bankAccounts)
    - Returns
       - CollectionReturnImpl(collection=by.ganevich.entity.Bank.bankAccounts, querySpaceUid=<gen:0>, path=[by.ganevich.entity.Bank.bankAccounts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:1>, path=[by.ganevich.entity.Bank.bankAccounts].<elements>)
             - EntityAttributeFetchImpl(entity=by.ganevich.entity.Client, querySpaceUid=<gen:2>, path=[by.ganevich.entity.Bank.bankAccounts].<elements>.accountOwner)
                - CollectionAttributeFetchImpl(collection=by.ganevich.entity.Client.sentTransactions, querySpaceUid=<gen:3>, path=[by.ganevich.entity.Bank.bankAccounts].<elements>.accountOwner.sentTransactions)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:4>, path=[by.ganevich.entity.Bank.bankAccounts].<elements>.accountOwner.sentTransactions.<elements>)
             - CollectionAttributeFetchImpl(collection=by.ganevich.entity.BankAccount.receivedTransactions, querySpaceUid=<gen:5>, path=[by.ganevich.entity.Bank.bankAccounts].<elements>.receivedTransactions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:6>, path=[by.ganevich.entity.Bank.bankAccounts].<elements>.receivedTransactions.<elements>)
             - CollectionAttributeFetchImpl(collection=by.ganevich.entity.BankAccount.sentTransactions, querySpaceUid=<gen:7>, path=[by.ganevich.entity.Bank.bankAccounts].<elements>.sentTransactions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:8>, path=[by.ganevich.entity.Bank.bankAccounts].<elements>.sentTransactions.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=by.ganevich.entity.Bank.bankAccounts)
          - SQL table alias mapping - bankaccoun0_
          - alias suffix - 0_
          - suffixed key columns - {bankid5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=by.ganevich.entity.BankAccount)
                - SQL table alias mapping - bankaccoun0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(accountOwner)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=by.ganevich.entity.Client)
                      - SQL table alias mapping - client1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}

[DEBUG] 2022-02-16 00:14:33.539 [main] CollectionLoader - Static select for collection by.ganevich.entity.Bank.bankAccounts: select bankaccoun0_.bankId as bankid5_0_0_, bankaccoun0_.id as id1_0_0_, bankaccoun0_.id as id1_0_1_, bankaccoun0_.clientId as clientid4_0_1_, bankaccoun0_.ammountOfMoney as ammounto2_0_1_, bankaccoun0_.bankId as bankid5_0_1_, bankaccoun0_.currency as currency3_0_1_, client1_.id as id1_2_2_, client1_.name as name2_2_2_, client1_.type as type3_2_2_ from bankAccounts bankaccoun0_ left outer join clients client1_ on bankaccoun0_.clientId=client1_.id where bankaccoun0_.bankId=?
[DEBUG] 2022-02-16 00:14:33.539 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5cc9d3d0]
[DEBUG] 2022-02-16 00:14:33.539 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c2dfa2]
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Visiting attribute path : amountOfMoney
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Visiting attribute path : date
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount
[DEBUG] 2022-02-16 00:14:33.539 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59ce792e]
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner
[DEBUG] 2022-02-16 00:14:33.539 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@404db674]
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.bankAccounts
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.accountOwner.bankAccounts
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.name
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.accountOwner.sentTransactions
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.type
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.amountOfMoney
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.bankProducer
[DEBUG] 2022-02-16 00:14:33.539 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7add838c]
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.bankProducer.bankAccounts
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.bankProducer.bankAccounts
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.bankProducer.commission
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.bankProducer.name
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.currency
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.receivedTransactions
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.receivedTransactions
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.sentTransactions
[DEBUG] 2022-02-16 00:14:33.539 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1bb15351]
[DEBUG] 2022-02-16 00:14:33.539 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fa822ad]
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Visiting attribute path : sender
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Property path deemed to be circular : sender
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount
[DEBUG] 2022-02-16 00:14:33.539 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@597f0937]
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.accountOwner
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Property path deemed to be circular : senderAccount.accountOwner
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.amountOfMoney
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.bankProducer
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Property path deemed to be circular : senderAccount.bankProducer
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.currency
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.receivedTransactions
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Property path deemed to be circular : senderAccount.receivedTransactions
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.sentTransactions
[DEBUG] 2022-02-16 00:14:33.539 [main] MetamodelGraphWalker - Property path deemed to be circular : senderAccount.sentTransactions
[DEBUG] 2022-02-16 00:14:33.539 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-02-16 00:14:33.539 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-02-16 00:14:33.540 [main] LoadPlanTreePrinter - LoadPlan(collection=by.ganevich.entity.Client.sentTransactions)
    - Returns
       - CollectionReturnImpl(collection=by.ganevich.entity.Client.sentTransactions, querySpaceUid=<gen:0>, path=[by.ganevich.entity.Client.sentTransactions])
          - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:1>, path=[by.ganevich.entity.Client.sentTransactions].<elements>)
             - EntityAttributeFetchImpl(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:2>, path=[by.ganevich.entity.Client.sentTransactions].<elements>.receiverAccount)
                - EntityAttributeFetchImpl(entity=by.ganevich.entity.Client, querySpaceUid=<gen:3>, path=[by.ganevich.entity.Client.sentTransactions].<elements>.receiverAccount.accountOwner)
                - EntityAttributeFetchImpl(entity=by.ganevich.entity.Bank, querySpaceUid=<gen:4>, path=[by.ganevich.entity.Client.sentTransactions].<elements>.receiverAccount.bankProducer)
                - CollectionAttributeFetchImpl(collection=by.ganevich.entity.BankAccount.sentTransactions, querySpaceUid=<gen:5>, path=[by.ganevich.entity.Client.sentTransactions].<elements>.receiverAccount.sentTransactions)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:6>, path=[by.ganevich.entity.Client.sentTransactions].<elements>.receiverAccount.sentTransactions.<elements>)
             - EntityAttributeFetchImpl(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:7>, path=[by.ganevich.entity.Client.sentTransactions].<elements>.senderAccount)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=by.ganevich.entity.Client.sentTransactions)
          - SQL table alias mapping - senttransa0_
          - alias suffix - 0_
          - suffixed key columns - {sender5_5_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=by.ganevich.entity.Transaction)
                - SQL table alias mapping - senttransa0_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}
                - JOIN (JoinDefinedByMetadata(receiverAccount)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=by.ganevich.entity.BankAccount)
                      - SQL table alias mapping - bankaccoun1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(accountOwner)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=by.ganevich.entity.Client)
                            - SQL table alias mapping - client2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}
                      - JOIN (JoinDefinedByMetadata(bankProducer)) : <gen:2> -> <gen:4>
                         - EntityQuerySpaceImpl(uid=<gen:4>, entity=by.ganevich.entity.Bank)
                            - SQL table alias mapping - bank3_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_1_4_}
                - JOIN (JoinDefinedByMetadata(senderAccount)) : <gen:1> -> <gen:7>
                   - EntityQuerySpaceImpl(uid=<gen:7>, entity=by.ganevich.entity.BankAccount)
                      - SQL table alias mapping - bankaccoun4_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_0_5_}

[DEBUG] 2022-02-16 00:14:33.540 [main] CollectionLoader - Static select for collection by.ganevich.entity.Client.sentTransactions: select senttransa0_.sender as sender5_5_0_, senttransa0_.id as id1_5_0_, senttransa0_.id as id1_5_1_, senttransa0_.amountofmoney as amountof2_5_1_, senttransa0_.date as date3_5_1_, senttransa0_.recipientAccountId as recipien4_5_1_, senttransa0_.sender as sender5_5_1_, senttransa0_.senderAccountId as senderac6_5_1_, bankaccoun1_.id as id1_0_2_, bankaccoun1_.clientId as clientid4_0_2_, bankaccoun1_.ammountOfMoney as ammounto2_0_2_, bankaccoun1_.bankId as bankid5_0_2_, bankaccoun1_.currency as currency3_0_2_, client2_.id as id1_2_3_, client2_.name as name2_2_3_, client2_.type as type3_2_3_, bank3_.id as id1_1_4_, bank3_.commission as commissi2_1_4_, bank3_.name as name3_1_4_, bankaccoun4_.id as id1_0_5_, bankaccoun4_.clientId as clientid4_0_5_, bankaccoun4_.ammountOfMoney as ammounto2_0_5_, bankaccoun4_.bankId as bankid5_0_5_, bankaccoun4_.currency as currency3_0_5_ from transactions senttransa0_ left outer join bankAccounts bankaccoun1_ on senttransa0_.recipientAccountId=bankaccoun1_.id left outer join clients client2_ on bankaccoun1_.clientId=client2_.id left outer join banks bank3_ on bankaccoun1_.bankId=bank3_.id left outer join bankAccounts bankaccoun4_ on senttransa0_.senderAccountId=bankaccoun4_.id where senttransa0_.sender=?
[DEBUG] 2022-02-16 00:14:33.540 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b6b3572]
[DEBUG] 2022-02-16 00:14:33.540 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65d8dff8]
[DEBUG] 2022-02-16 00:14:33.540 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner
[DEBUG] 2022-02-16 00:14:33.540 [main] MetamodelGraphWalker - Property path deemed to be circular : accountOwner
[DEBUG] 2022-02-16 00:14:33.540 [main] MetamodelGraphWalker - Visiting attribute path : amountOfMoney
[DEBUG] 2022-02-16 00:14:33.540 [main] MetamodelGraphWalker - Visiting attribute path : bankProducer
[DEBUG] 2022-02-16 00:14:33.540 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24d61e4]
[DEBUG] 2022-02-16 00:14:33.540 [main] MetamodelGraphWalker - Visiting attribute path : bankProducer.bankAccounts
[DEBUG] 2022-02-16 00:14:33.540 [main] MetamodelGraphWalker - Property path deemed to be circular : bankProducer.bankAccounts
[DEBUG] 2022-02-16 00:14:33.540 [main] MetamodelGraphWalker - Visiting attribute path : bankProducer.commission
[DEBUG] 2022-02-16 00:14:33.540 [main] MetamodelGraphWalker - Visiting attribute path : bankProducer.name
[DEBUG] 2022-02-16 00:14:33.540 [main] MetamodelGraphWalker - Visiting attribute path : currency
[DEBUG] 2022-02-16 00:14:33.541 [main] MetamodelGraphWalker - Visiting attribute path : receivedTransactions
[DEBUG] 2022-02-16 00:14:33.541 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f1e58ca]
[DEBUG] 2022-02-16 00:14:33.541 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57f847af]
[DEBUG] 2022-02-16 00:14:33.541 [main] MetamodelGraphWalker - Visiting attribute path : sentTransactions
[DEBUG] 2022-02-16 00:14:33.541 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3ed34ef5]
[DEBUG] 2022-02-16 00:14:33.541 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@553bc36c]
[DEBUG] 2022-02-16 00:14:33.541 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-02-16 00:14:33.541 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-02-16 00:14:33.541 [main] LoadPlanTreePrinter - LoadPlan(collection=by.ganevich.entity.Client.bankAccounts)
    - Returns
       - CollectionReturnImpl(collection=by.ganevich.entity.Client.bankAccounts, querySpaceUid=<gen:0>, path=[by.ganevich.entity.Client.bankAccounts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:1>, path=[by.ganevich.entity.Client.bankAccounts].<elements>)
             - EntityAttributeFetchImpl(entity=by.ganevich.entity.Bank, querySpaceUid=<gen:2>, path=[by.ganevich.entity.Client.bankAccounts].<elements>.bankProducer)
             - CollectionAttributeFetchImpl(collection=by.ganevich.entity.BankAccount.receivedTransactions, querySpaceUid=<gen:3>, path=[by.ganevich.entity.Client.bankAccounts].<elements>.receivedTransactions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:4>, path=[by.ganevich.entity.Client.bankAccounts].<elements>.receivedTransactions.<elements>)
             - CollectionAttributeFetchImpl(collection=by.ganevich.entity.BankAccount.sentTransactions, querySpaceUid=<gen:5>, path=[by.ganevich.entity.Client.bankAccounts].<elements>.sentTransactions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:6>, path=[by.ganevich.entity.Client.bankAccounts].<elements>.sentTransactions.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=by.ganevich.entity.Client.bankAccounts)
          - SQL table alias mapping - bankaccoun0_
          - alias suffix - 0_
          - suffixed key columns - {clientid4_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=by.ganevich.entity.BankAccount)
                - SQL table alias mapping - bankaccoun0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(bankProducer)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=by.ganevich.entity.Bank)
                      - SQL table alias mapping - bank1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}

[DEBUG] 2022-02-16 00:14:33.541 [main] CollectionLoader - Static select for collection by.ganevich.entity.Client.bankAccounts: select bankaccoun0_.clientId as clientid4_0_0_, bankaccoun0_.id as id1_0_0_, bankaccoun0_.id as id1_0_1_, bankaccoun0_.clientId as clientid4_0_1_, bankaccoun0_.ammountOfMoney as ammounto2_0_1_, bankaccoun0_.bankId as bankid5_0_1_, bankaccoun0_.currency as currency3_0_1_, bank1_.id as id1_1_2_, bank1_.commission as commissi2_1_2_, bank1_.name as name3_1_2_ from bankAccounts bankaccoun0_ left outer join banks bank1_ on bankaccoun0_.bankId=bank1_.id where bankaccoun0_.clientId=?
[DEBUG] 2022-02-16 00:14:33.571 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2022-02-16 00:14:33.571 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2022-02-16 00:14:33.572 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2022-02-16 00:14:33.575 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2022-02-16 00:14:33.576 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2022-02-16 00:14:33.576 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2022-02-16 00:14:33.576 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2022-02-16 00:14:33.580 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-02-16 00:14:33.585 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@43982337
[DEBUG] 2022-02-16 00:14:33.586 [main] SessionFactoryRegistry - Registering SessionFactory: 8e726b35-534e-4c29-8245-9b840d17fc21 (<unnamed>)
[DEBUG] 2022-02-16 00:14:33.586 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[INFO ] 2022-02-16 00:14:33.586 [main] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[DEBUG] 2022-02-16 00:14:33.607 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'jpaMappingContext'
[DEBUG] 2022-02-16 00:14:33.608 [main] JpaMetamodelMappingContextFactoryBean - Initializing JpaMetamodelMappingContext…
[DEBUG] 2022-02-16 00:14:33.624 [main] JpaMetamodelMappingContextFactoryBean - Finished initializing JpaMetamodelMappingContext!
[DEBUG] 2022-02-16 00:14:33.668 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:14:33.727 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2022-02-16 00:14:33.766 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:14:33.834 [main] RepositoryFactorySupport - Initializing repository instance for by.ganevich.repository.BankRepository…
[DEBUG] 2022-02-16 00:14:33.856 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:14:33.952 [main] NamedQuery - Looking up named query Bank.findByName
[DEBUG] 2022-02-16 00:14:33.956 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-02-16 00:14:33.956 [main] NamedQuery - Did not find named query Bank.findByName
[DEBUG] 2022-02-16 00:14:33.960 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:14:34.029 [main] RepositoryFactorySupport - Finished creation of repository instance for {}.
[DEBUG] 2022-02-16 00:14:34.030 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'bankService' via constructor to bean named 'bankRepository'
[DEBUG] 2022-02-16 00:14:34.032 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'bankMenuInteractive' via constructor to bean named 'bankService'
[DEBUG] 2022-02-16 00:14:34.034 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'clientMenuInteractive'
[DEBUG] 2022-02-16 00:14:34.036 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'clientService'
[DEBUG] 2022-02-16 00:14:34.037 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'clientRepository'
[DEBUG] 2022-02-16 00:14:34.040 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:14:34.041 [main] RepositoryFactorySupport - Initializing repository instance for by.ganevich.repository.ClientRepository…
[DEBUG] 2022-02-16 00:14:34.042 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:14:34.057 [main] NamedQuery - Looking up named query Client.findByName
[DEBUG] 2022-02-16 00:14:34.057 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-02-16 00:14:34.057 [main] NamedQuery - Did not find named query Client.findByName
[DEBUG] 2022-02-16 00:14:34.058 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:14:34.061 [main] RepositoryFactorySupport - Finished creation of repository instance for {}.
[DEBUG] 2022-02-16 00:14:34.062 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'bankAccountRepository'
[DEBUG] 2022-02-16 00:14:34.065 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:14:34.066 [main] RepositoryFactorySupport - Initializing repository instance for by.ganevich.repository.BankAccountRepository…
[DEBUG] 2022-02-16 00:14:34.067 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:14:34.083 [main] NamedQuery - Looking up named query BankAccount.findBankAccountByAccountOwner
[DEBUG] 2022-02-16 00:14:34.084 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-02-16 00:14:34.084 [main] NamedQuery - Did not find named query BankAccount.findBankAccountByAccountOwner
[DEBUG] 2022-02-16 00:14:34.084 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:14:34.085 [main] NamedQuery - Looking up named query BankAccount.findBankAccountByAccountOwnerAndBankProducer
[DEBUG] 2022-02-16 00:14:34.085 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-02-16 00:14:34.085 [main] NamedQuery - Did not find named query BankAccount.findBankAccountByAccountOwnerAndBankProducer
[DEBUG] 2022-02-16 00:14:34.085 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:14:34.091 [main] RepositoryFactorySupport - Finished creation of repository instance for {}.
[DEBUG] 2022-02-16 00:14:34.092 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'clientService' via constructor to bean named 'clientRepository'
[DEBUG] 2022-02-16 00:14:34.092 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'clientService' via constructor to bean named 'bankAccountRepository'
[DEBUG] 2022-02-16 00:14:34.094 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'bankAccountService'
[DEBUG] 2022-02-16 00:14:34.095 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'bankAccountService' via constructor to bean named 'bankAccountRepository'
[DEBUG] 2022-02-16 00:14:34.096 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionService'
[DEBUG] 2022-02-16 00:14:34.098 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionRepository'
[DEBUG] 2022-02-16 00:14:34.101 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:14:34.102 [main] RepositoryFactorySupport - Initializing repository instance for by.ganevich.repository.TransactionRepository…
[DEBUG] 2022-02-16 00:14:34.103 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:14:34.119 [main] NamedQuery - Looking up named query Transaction.findAllByDateBetweenAndSender
[DEBUG] 2022-02-16 00:14:34.119 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-02-16 00:14:34.119 [main] NamedQuery - Did not find named query Transaction.findAllByDateBetweenAndSender
[DEBUG] 2022-02-16 00:14:34.119 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:14:34.125 [main] RepositoryFactorySupport - Finished creation of repository instance for {}.
[DEBUG] 2022-02-16 00:14:34.125 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'rateService'
[DEBUG] 2022-02-16 00:14:34.127 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'rateRepository'
[DEBUG] 2022-02-16 00:14:34.130 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:14:34.133 [main] RepositoryFactorySupport - Initializing repository instance for by.ganevich.repository.RateRepository…
[DEBUG] 2022-02-16 00:14:34.134 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:14:34.150 [main] NamedQuery - Looking up named query Rate.findRateByCurrency
[DEBUG] 2022-02-16 00:14:34.150 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-02-16 00:14:34.150 [main] NamedQuery - Did not find named query Rate.findRateByCurrency
[DEBUG] 2022-02-16 00:14:34.150 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:14:34.154 [main] RepositoryFactorySupport - Finished creation of repository instance for {}.
[DEBUG] 2022-02-16 00:14:34.154 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'rateService' via constructor to bean named 'rateRepository'
[DEBUG] 2022-02-16 00:14:34.155 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'commissionService'
[DEBUG] 2022-02-16 00:14:34.157 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'commissionRepository'
[DEBUG] 2022-02-16 00:14:34.160 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:14:34.164 [main] RepositoryFactorySupport - Initializing repository instance for by.ganevich.repository.CommissionRepository…
[DEBUG] 2022-02-16 00:14:34.165 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:14:34.177 [main] NamedQuery - Looking up named query Commission.findCommissionByClientType
[DEBUG] 2022-02-16 00:14:34.178 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-02-16 00:14:34.178 [main] NamedQuery - Did not find named query Commission.findCommissionByClientType
[DEBUG] 2022-02-16 00:14:34.178 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:14:34.182 [main] RepositoryFactorySupport - Finished creation of repository instance for {}.
[DEBUG] 2022-02-16 00:14:34.183 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'commissionService' via constructor to bean named 'commissionRepository'
[DEBUG] 2022-02-16 00:14:34.184 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'transactionService' via constructor to bean named 'transactionRepository'
[DEBUG] 2022-02-16 00:14:34.184 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'transactionService' via constructor to bean named 'bankAccountService'
[DEBUG] 2022-02-16 00:14:34.185 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'transactionService' via constructor to bean named 'rateService'
[DEBUG] 2022-02-16 00:14:34.185 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'transactionService' via constructor to bean named 'commissionService'
[DEBUG] 2022-02-16 00:14:34.185 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'clientMenuInteractive' via constructor to bean named 'clientService'
[DEBUG] 2022-02-16 00:14:34.185 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'clientMenuInteractive' via constructor to bean named 'bankService'
[DEBUG] 2022-02-16 00:14:34.185 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'clientMenuInteractive' via constructor to bean named 'bankAccountService'
[DEBUG] 2022-02-16 00:14:34.185 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'clientMenuInteractive' via constructor to bean named 'transactionService'
[DEBUG] 2022-02-16 00:14:34.186 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'bankAccountMenuInteractive'
[DEBUG] 2022-02-16 00:14:34.187 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'bankAccountMenuInteractive' via constructor to bean named 'bankAccountService'
[DEBUG] 2022-02-16 00:14:34.187 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'bankAccountMenuInteractive' via constructor to bean named 'clientService'
[DEBUG] 2022-02-16 00:14:34.188 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionMenuInteractive'
[DEBUG] 2022-02-16 00:14:34.189 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'transactionMenuInteractive' via constructor to bean named 'transactionService'
[DEBUG] 2022-02-16 00:14:34.189 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'transactionMenuInteractive' via constructor to bean named 'clientService'
[DEBUG] 2022-02-16 00:14:34.189 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'transactionMenuInteractive' via constructor to bean named 'bankService'
[DEBUG] 2022-02-16 00:14:34.189 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'transactionMenuInteractive' via constructor to bean named 'bankAccountService'
[DEBUG] 2022-02-16 00:14:34.190 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionManager'
[DEBUG] 2022-02-16 00:14:34.217 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'entityManager'
[DEBUG] 2022-02-16 00:14:34.217 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'entityManager' via factory method to bean named 'entityManagerFactory'
[DEBUG] 2022-02-16 00:14:34.242 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
[DEBUG] 2022-02-16 00:14:34.274 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
[DEBUG] 2022-02-16 00:14:37.310 [main] JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
[DEBUG] 2022-02-16 00:14:37.312 [main] JpaTransactionManager - Opened new EntityManager [SessionImpl(831993944<open>)] for JPA transaction
[DEBUG] 2022-02-16 00:14:37.315 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-02-16 00:14:37.315 [main] TransactionImpl - begin
[DEBUG] 2022-02-16 00:14:37.316 [main] DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:postgresql://localhost:5432/bank-system]
[DEBUG] 2022-02-16 00:14:37.383 [main] JpaTransactionManager - Not exposing JPA transaction [SessionImpl(831993944<open>)] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@61bb1e4d] does not support JDBC Connection retrieval
[DEBUG] 2022-02-16 00:14:37.392 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0
[DEBUG] 2022-02-16 00:14:37.436 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@52454457
[DEBUG] 2022-02-16 00:14:37.552 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from by.ganevich.entity.Client as generatedAlias0
[DEBUG] 2022-02-16 00:14:37.561 [main] HqlParser - weakKeywords() : new LT(1) token - ["by",<110> previously: <111>,line=1,col=29,possibleID=true]
[DEBUG] 2022-02-16 00:14:37.576 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2022-02-16 00:14:37.601 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'by'
       |     |  |  |  \-[IDENT] Node: 'ganevich'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Client'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2022-02-16 00:14:37.806 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2022-02-16 00:14:37.833 [main] FromElement - FromClause{level=1} : by.ganevich.entity.Client (generatedAlias0) -> client0_
[DEBUG] 2022-02-16 00:14:37.834 [main] FromReferenceNode - Resolved : generatedAlias0 -> client0_.id
[DEBUG] 2022-02-16 00:14:37.837 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2022-02-16 00:14:37.837 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} client0_.id ) ( FromClause{level=1} clients client0_ ) )
[DEBUG] 2022-02-16 00:14:37.854 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Client): [clients]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(by.ganevich.entity.Client)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[DEBUG] 2022-02-16 00:14:37.863 [main] JoinProcessor - Using FROM fragment [clients client0_]
[DEBUG] 2022-02-16 00:14:37.864 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2022-02-16 00:14:37.864 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (clients)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'client0_.id as id1_2_' {alias=generatedAlias0, className=by.ganevich.entity.Client, tableAlias=client0_}
    |  \-[SQL_TOKEN] SqlFragment: 'client0_.name as name2_2_, client0_.type as type3_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'clients client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=clients,tableAlias=client0_,origin=null,columns={,className=by.ganevich.entity.Client}}

[DEBUG] 2022-02-16 00:14:37.864 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2022-02-16 00:14:37.877 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from by.ganevich.entity.Client as generatedAlias0
[DEBUG] 2022-02-16 00:14:37.877 [main] QueryTranslatorImpl - SQL: select client0_.id as id1_2_, client0_.name as name2_2_, client0_.type as type3_2_ from clients client0_
[DEBUG] 2022-02-16 00:14:37.877 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2022-02-16 00:14:37.922 [main] SQL - select client0_.id as id1_2_, client0_.name as name2_2_, client0_.type as type3_2_ from clients client0_
[DEBUG] 2022-02-16 00:14:38.015 [main] Loader - Result set row: 0
[DEBUG] 2022-02-16 00:14:38.019 [main] Loader - Result row: EntityKey[by.ganevich.entity.Client#1]
[DEBUG] 2022-02-16 00:14:38.032 [main] Loader - Result set row: 1
[DEBUG] 2022-02-16 00:14:38.032 [main] Loader - Result row: EntityKey[by.ganevich.entity.Client#2]
[DEBUG] 2022-02-16 00:14:38.036 [main] TwoPhaseLoad - Resolving attributes for [by.ganevich.entity.Client#1]
[DEBUG] 2022-02-16 00:14:38.037 [main] TwoPhaseLoad - Processing attribute `bankAccounts` : value = NOT NULL COLLECTION
[DEBUG] 2022-02-16 00:14:38.037 [main] TwoPhaseLoad - Attribute (`bankAccounts`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.052 [main] TwoPhaseLoad - Processing attribute `name` : value = Matvey
[DEBUG] 2022-02-16 00:14:38.052 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.052 [main] TwoPhaseLoad - Processing attribute `sentTransactions` : value = NOT NULL COLLECTION
[DEBUG] 2022-02-16 00:14:38.052 [main] TwoPhaseLoad - Attribute (`sentTransactions`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.052 [main] TwoPhaseLoad - Processing attribute `type` : value = INDIVIDUAL
[DEBUG] 2022-02-16 00:14:38.052 [main] TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.055 [main] TwoPhaseLoad - Done materializing entity [by.ganevich.entity.Client#1]
[DEBUG] 2022-02-16 00:14:38.055 [main] TwoPhaseLoad - Resolving attributes for [by.ganevich.entity.Client#2]
[DEBUG] 2022-02-16 00:14:38.055 [main] TwoPhaseLoad - Processing attribute `bankAccounts` : value = NOT NULL COLLECTION
[DEBUG] 2022-02-16 00:14:38.055 [main] TwoPhaseLoad - Attribute (`bankAccounts`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.055 [main] TwoPhaseLoad - Processing attribute `name` : value = Max
[DEBUG] 2022-02-16 00:14:38.055 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.055 [main] TwoPhaseLoad - Processing attribute `sentTransactions` : value = NOT NULL COLLECTION
[DEBUG] 2022-02-16 00:14:38.055 [main] TwoPhaseLoad - Attribute (`sentTransactions`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.055 [main] TwoPhaseLoad - Processing attribute `type` : value = INDUSTRIAL
[DEBUG] 2022-02-16 00:14:38.055 [main] TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.055 [main] TwoPhaseLoad - Done materializing entity [by.ganevich.entity.Client#2]
[DEBUG] 2022-02-16 00:14:38.061 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [by.ganevich.entity.Client.sentTransactions#2]
[DEBUG] 2022-02-16 00:14:38.061 [main] SQL - select senttransa0_.sender as sender5_5_0_, senttransa0_.id as id1_5_0_, senttransa0_.id as id1_5_1_, senttransa0_.amountofmoney as amountof2_5_1_, senttransa0_.date as date3_5_1_, senttransa0_.recipientAccountId as recipien4_5_1_, senttransa0_.sender as sender5_5_1_, senttransa0_.senderAccountId as senderac6_5_1_, bankaccoun1_.id as id1_0_2_, bankaccoun1_.clientId as clientid4_0_2_, bankaccoun1_.ammountOfMoney as ammounto2_0_2_, bankaccoun1_.bankId as bankid5_0_2_, bankaccoun1_.currency as currency3_0_2_, client2_.id as id1_2_3_, client2_.name as name2_2_3_, client2_.type as type3_2_3_, bank3_.id as id1_1_4_, bank3_.commission as commissi2_1_4_, bank3_.name as name3_1_4_, bankaccoun4_.id as id1_0_5_, bankaccoun4_.clientId as clientid4_0_5_, bankaccoun4_.ammountOfMoney as ammounto2_0_5_, bankaccoun4_.bankId as bankid5_0_5_, bankaccoun4_.currency as currency3_0_5_ from transactions senttransa0_ left outer join bankAccounts bankaccoun1_ on senttransa0_.recipientAccountId=bankaccoun1_.id left outer join clients client2_ on bankaccoun1_.clientId=client2_.id left outer join banks bank3_ on bankaccoun1_.bankId=bank3_.id left outer join bankAccounts bankaccoun4_ on senttransa0_.senderAccountId=bankaccoun4_.id where senttransa0_.sender=?
[DEBUG] 2022-02-16 00:14:38.105 [main] ResultSetProcessorImpl - Preparing collection initializer : [by.ganevich.entity.Client.sentTransactions#2]
[DEBUG] 2022-02-16 00:14:38.118 [main] CollectionReferenceInitializerImpl - Found row of collection: [by.ganevich.entity.Client.sentTransactions#2]
[DEBUG] 2022-02-16 00:14:38.128 [main] TwoPhaseLoad - Resolving attributes for [by.ganevich.entity.Transaction#1]
[DEBUG] 2022-02-16 00:14:38.128 [main] TwoPhaseLoad - Processing attribute `amountOfMoney` : value = 100.0
[DEBUG] 2022-02-16 00:14:38.128 [main] TwoPhaseLoad - Attribute (`amountOfMoney`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.128 [main] TwoPhaseLoad - Processing attribute `date` : value = 2022-02-15
[DEBUG] 2022-02-16 00:14:38.128 [main] TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.128 [main] TwoPhaseLoad - Processing attribute `receiverAccount` : value = 1
[DEBUG] 2022-02-16 00:14:38.128 [main] TwoPhaseLoad - Attribute (`receiverAccount`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.128 [main] TwoPhaseLoad - Processing attribute `sender` : value = 2
[DEBUG] 2022-02-16 00:14:38.128 [main] TwoPhaseLoad - Attribute (`sender`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.128 [main] TwoPhaseLoad - Processing attribute `senderAccount` : value = 2
[DEBUG] 2022-02-16 00:14:38.128 [main] TwoPhaseLoad - Attribute (`senderAccount`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.129 [main] TwoPhaseLoad - Done materializing entity [by.ganevich.entity.Transaction#1]
[DEBUG] 2022-02-16 00:14:38.129 [main] TwoPhaseLoad - Resolving attributes for [by.ganevich.entity.BankAccount#1]
[DEBUG] 2022-02-16 00:14:38.129 [main] TwoPhaseLoad - Processing attribute `accountOwner` : value = 1
[DEBUG] 2022-02-16 00:14:38.129 [main] TwoPhaseLoad - Attribute (`accountOwner`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.129 [main] TwoPhaseLoad - Processing attribute `amountOfMoney` : value = 512.28125
[DEBUG] 2022-02-16 00:14:38.129 [main] TwoPhaseLoad - Attribute (`amountOfMoney`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.129 [main] TwoPhaseLoad - Processing attribute `bankProducer` : value = 1
[DEBUG] 2022-02-16 00:14:38.129 [main] TwoPhaseLoad - Attribute (`bankProducer`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.129 [main] TwoPhaseLoad - Processing attribute `currency` : value = USD
[DEBUG] 2022-02-16 00:14:38.129 [main] TwoPhaseLoad - Attribute (`currency`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.129 [main] TwoPhaseLoad - Processing attribute `receivedTransactions` : value = NOT NULL COLLECTION
[DEBUG] 2022-02-16 00:14:38.129 [main] TwoPhaseLoad - Attribute (`receivedTransactions`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.129 [main] TwoPhaseLoad - Processing attribute `sentTransactions` : value = NOT NULL COLLECTION
[DEBUG] 2022-02-16 00:14:38.129 [main] TwoPhaseLoad - Attribute (`sentTransactions`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.129 [main] TwoPhaseLoad - Done materializing entity [by.ganevich.entity.BankAccount#1]
[DEBUG] 2022-02-16 00:14:38.129 [main] TwoPhaseLoad - Resolving attributes for [by.ganevich.entity.Bank#1]
[DEBUG] 2022-02-16 00:14:38.129 [main] TwoPhaseLoad - Processing attribute `bankAccounts` : value = NOT NULL COLLECTION
[DEBUG] 2022-02-16 00:14:38.129 [main] TwoPhaseLoad - Attribute (`bankAccounts`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.130 [main] TwoPhaseLoad - Processing attribute `commission` : value = 0.3
[DEBUG] 2022-02-16 00:14:38.130 [main] TwoPhaseLoad - Attribute (`commission`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.130 [main] TwoPhaseLoad - Processing attribute `name` : value = Alfa
[DEBUG] 2022-02-16 00:14:38.130 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.130 [main] TwoPhaseLoad - Done materializing entity [by.ganevich.entity.Bank#1]
[DEBUG] 2022-02-16 00:14:38.130 [main] TwoPhaseLoad - Resolving attributes for [by.ganevich.entity.BankAccount#2]
[DEBUG] 2022-02-16 00:14:38.130 [main] TwoPhaseLoad - Processing attribute `accountOwner` : value = 2
[DEBUG] 2022-02-16 00:14:38.130 [main] TwoPhaseLoad - Attribute (`accountOwner`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.130 [main] TwoPhaseLoad - Processing attribute `amountOfMoney` : value = 186.27585
[DEBUG] 2022-02-16 00:14:38.130 [main] TwoPhaseLoad - Attribute (`amountOfMoney`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.130 [main] TwoPhaseLoad - Processing attribute `bankProducer` : value = 4
[DEBUG] 2022-02-16 00:14:38.130 [main] TwoPhaseLoad - Attribute (`bankProducer`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.130 [main] SQL - select bank0_.id as id1_1_0_, bank0_.commission as commissi2_1_0_, bank0_.name as name3_1_0_, bankaccoun1_.bankId as bankid5_0_1_, bankaccoun1_.id as id1_0_1_, bankaccoun1_.id as id1_0_2_, bankaccoun1_.clientId as clientid4_0_2_, bankaccoun1_.ammountOfMoney as ammounto2_0_2_, bankaccoun1_.bankId as bankid5_0_2_, bankaccoun1_.currency as currency3_0_2_, client2_.id as id1_2_3_, client2_.name as name2_2_3_, client2_.type as type3_2_3_, senttransa3_.sender as sender5_5_4_, senttransa3_.id as id1_5_4_, senttransa3_.id as id1_5_5_, senttransa3_.amountofmoney as amountof2_5_5_, senttransa3_.date as date3_5_5_, senttransa3_.recipientAccountId as recipien4_5_5_, senttransa3_.sender as sender5_5_5_, senttransa3_.senderAccountId as senderac6_5_5_, bankaccoun4_.id as id1_0_6_, bankaccoun4_.clientId as clientid4_0_6_, bankaccoun4_.ammountOfMoney as ammounto2_0_6_, bankaccoun4_.bankId as bankid5_0_6_, bankaccoun4_.currency as currency3_0_6_, senttransa5_.senderAccountId as senderac6_5_7_, senttransa5_.id as id1_5_7_, senttransa5_.id as id1_5_8_, senttransa5_.amountofmoney as amountof2_5_8_, senttransa5_.date as date3_5_8_, senttransa5_.recipientAccountId as recipien4_5_8_, senttransa5_.sender as sender5_5_8_, senttransa5_.senderAccountId as senderac6_5_8_ from banks bank0_ left outer join bankAccounts bankaccoun1_ on bank0_.id=bankaccoun1_.bankId left outer join clients client2_ on bankaccoun1_.clientId=client2_.id left outer join transactions senttransa3_ on client2_.id=senttransa3_.sender left outer join bankAccounts bankaccoun4_ on senttransa3_.recipientAccountId=bankaccoun4_.id left outer join transactions senttransa5_ on bankaccoun4_.id=senttransa5_.senderAccountId where bank0_.id=?
[DEBUG] 2022-02-16 00:14:38.140 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2022-02-16 00:14:38.141 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [by.ganevich.entity.BankAccount.sentTransactions#1]
[DEBUG] 2022-02-16 00:14:38.141 [main] CollectionReferenceInitializerImpl - Found row of collection: [by.ganevich.entity.Client.sentTransactions#2]
[DEBUG] 2022-02-16 00:14:38.141 [main] CollectionReferenceInitializerImpl - Found row of collection: [by.ganevich.entity.Bank.bankAccounts#4]
[DEBUG] 2022-02-16 00:14:38.141 [main] TwoPhaseLoad - Resolving attributes for [by.ganevich.entity.Bank#4]
[DEBUG] 2022-02-16 00:14:38.141 [main] TwoPhaseLoad - Processing attribute `bankAccounts` : value = NOT NULL COLLECTION
[DEBUG] 2022-02-16 00:14:38.141 [main] TwoPhaseLoad - Attribute (`bankAccounts`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.142 [main] TwoPhaseLoad - Processing attribute `commission` : value = 0.2
[DEBUG] 2022-02-16 00:14:38.142 [main] TwoPhaseLoad - Attribute (`commission`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.142 [main] TwoPhaseLoad - Processing attribute `name` : value = Belarus
[DEBUG] 2022-02-16 00:14:38.142 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.142 [main] TwoPhaseLoad - Done materializing entity [by.ganevich.entity.Bank#4]
[DEBUG] 2022-02-16 00:14:38.142 [main] CollectionLoadContext - 1 collections were found in result set for role: by.ganevich.entity.BankAccount.sentTransactions
[DEBUG] 2022-02-16 00:14:38.142 [main] CollectionLoadContext - Collection fully initialized: [by.ganevich.entity.BankAccount.sentTransactions#1]
[DEBUG] 2022-02-16 00:14:38.142 [main] CollectionLoadContext - 1 collections initialized for role: by.ganevich.entity.BankAccount.sentTransactions
[DEBUG] 2022-02-16 00:14:38.143 [main] CollectionLoadContext - No collections were found in result set for role: by.ganevich.entity.Client.sentTransactions
[DEBUG] 2022-02-16 00:14:38.143 [main] CollectionLoadContext - 1 collections were found in result set for role: by.ganevich.entity.Bank.bankAccounts
[DEBUG] 2022-02-16 00:14:38.143 [main] CollectionLoadContext - Collection fully initialized: [by.ganevich.entity.Bank.bankAccounts#4]
[DEBUG] 2022-02-16 00:14:38.143 [main] CollectionLoadContext - 1 collections initialized for role: by.ganevich.entity.Bank.bankAccounts
[DEBUG] 2022-02-16 00:14:38.143 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : by.ganevich.entity.Bank#4
[DEBUG] 2022-02-16 00:14:38.143 [main] TwoPhaseLoad - Processing attribute `currency` : value = EUR
[DEBUG] 2022-02-16 00:14:38.143 [main] TwoPhaseLoad - Attribute (`currency`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.143 [main] TwoPhaseLoad - Processing attribute `receivedTransactions` : value = NOT NULL COLLECTION
[DEBUG] 2022-02-16 00:14:38.143 [main] TwoPhaseLoad - Attribute (`receivedTransactions`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.144 [main] TwoPhaseLoad - Processing attribute `sentTransactions` : value = NOT NULL COLLECTION
[DEBUG] 2022-02-16 00:14:38.144 [main] TwoPhaseLoad - Attribute (`sentTransactions`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-02-16 00:14:38.144 [main] TwoPhaseLoad - Done materializing entity [by.ganevich.entity.BankAccount#2]
[DEBUG] 2022-02-16 00:14:38.144 [main] CollectionLoadContext - 1 collections were found in result set for role: by.ganevich.entity.Client.sentTransactions
[DEBUG] 2022-02-16 00:14:38.144 [main] CollectionLoadContext - Collection fully initialized: [by.ganevich.entity.Client.sentTransactions#2]
[DEBUG] 2022-02-16 00:14:38.144 [main] CollectionLoadContext - 1 collections initialized for role: by.ganevich.entity.Client.sentTransactions
[DEBUG] 2022-02-16 00:14:38.145 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2022-02-16 00:14:38.145 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [by.ganevich.entity.BankAccount.sentTransactions#2]
[DEBUG] 2022-02-16 00:14:38.145 [main] SQL - select senttransa0_.senderAccountId as senderac6_5_0_, senttransa0_.id as id1_5_0_, senttransa0_.id as id1_5_1_, senttransa0_.amountofmoney as amountof2_5_1_, senttransa0_.date as date3_5_1_, senttransa0_.recipientAccountId as recipien4_5_1_, senttransa0_.sender as sender5_5_1_, senttransa0_.senderAccountId as senderac6_5_1_, bankaccoun1_.id as id1_0_2_, bankaccoun1_.clientId as clientid4_0_2_, bankaccoun1_.ammountOfMoney as ammounto2_0_2_, bankaccoun1_.bankId as bankid5_0_2_, bankaccoun1_.currency as currency3_0_2_, client2_.id as id1_2_3_, client2_.name as name2_2_3_, client2_.type as type3_2_3_, bank3_.id as id1_1_4_, bank3_.commission as commissi2_1_4_, bank3_.name as name3_1_4_, client4_.id as id1_2_5_, client4_.name as name2_2_5_, client4_.type as type3_2_5_ from transactions senttransa0_ left outer join bankAccounts bankaccoun1_ on senttransa0_.recipientAccountId=bankaccoun1_.id left outer join clients client2_ on bankaccoun1_.clientId=client2_.id left outer join banks bank3_ on bankaccoun1_.bankId=bank3_.id left outer join clients client4_ on senttransa0_.sender=client4_.id where senttransa0_.senderAccountId=?
[DEBUG] 2022-02-16 00:14:38.148 [main] ResultSetProcessorImpl - Preparing collection initializer : [by.ganevich.entity.BankAccount.sentTransactions#2]
[DEBUG] 2022-02-16 00:14:38.148 [main] CollectionReferenceInitializerImpl - Found row of collection: [by.ganevich.entity.BankAccount.sentTransactions#2]
[DEBUG] 2022-02-16 00:14:38.148 [main] CollectionLoadContext - 1 collections were found in result set for role: by.ganevich.entity.BankAccount.sentTransactions
[DEBUG] 2022-02-16 00:14:38.149 [main] CollectionLoadContext - Collection fully initialized: [by.ganevich.entity.BankAccount.sentTransactions#2]
[DEBUG] 2022-02-16 00:14:38.149 [main] CollectionLoadContext - 1 collections initialized for role: by.ganevich.entity.BankAccount.sentTransactions
[DEBUG] 2022-02-16 00:14:38.149 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2022-02-16 00:14:38.149 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [by.ganevich.entity.BankAccount.receivedTransactions#2]
[DEBUG] 2022-02-16 00:14:38.149 [main] SQL - select receivedtr0_.recipientAccountId as recipien4_5_0_, receivedtr0_.id as id1_5_0_, receivedtr0_.id as id1_5_1_, receivedtr0_.amountofmoney as amountof2_5_1_, receivedtr0_.date as date3_5_1_, receivedtr0_.recipientAccountId as recipien4_5_1_, receivedtr0_.sender as sender5_5_1_, receivedtr0_.senderAccountId as senderac6_5_1_, client1_.id as id1_2_2_, client1_.name as name2_2_2_, client1_.type as type3_2_2_, bankaccoun2_.id as id1_0_3_, bankaccoun2_.clientId as clientid4_0_3_, bankaccoun2_.ammountOfMoney as ammounto2_0_3_, bankaccoun2_.bankId as bankid5_0_3_, bankaccoun2_.currency as currency3_0_3_, client3_.id as id1_2_4_, client3_.name as name2_2_4_, client3_.type as type3_2_4_, bank4_.id as id1_1_5_, bank4_.commission as commissi2_1_5_, bank4_.name as name3_1_5_ from transactions receivedtr0_ left outer join clients client1_ on receivedtr0_.sender=client1_.id left outer join bankAccounts bankaccoun2_ on receivedtr0_.senderAccountId=bankaccoun2_.id left outer join clients client3_ on bankaccoun2_.clientId=client3_.id left outer join banks bank4_ on bankaccoun2_.bankId=bank4_.id where receivedtr0_.recipientAccountId=?
[DEBUG] 2022-02-16 00:14:38.151 [main] ResultSetProcessorImpl - Preparing collection initializer : [by.ganevich.entity.BankAccount.receivedTransactions#2]
[DEBUG] 2022-02-16 00:14:38.151 [main] CollectionLoadContext - 1 collections were found in result set for role: by.ganevich.entity.BankAccount.receivedTransactions
[DEBUG] 2022-02-16 00:14:38.151 [main] CollectionLoadContext - Collection fully initialized: [by.ganevich.entity.BankAccount.receivedTransactions#2]
[DEBUG] 2022-02-16 00:14:38.151 [main] CollectionLoadContext - 1 collections initialized for role: by.ganevich.entity.BankAccount.receivedTransactions
[DEBUG] 2022-02-16 00:14:38.152 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2022-02-16 00:14:38.152 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [by.ganevich.entity.Bank.bankAccounts#1]
[DEBUG] 2022-02-16 00:14:38.152 [main] SQL - select bankaccoun0_.bankId as bankid5_0_0_, bankaccoun0_.id as id1_0_0_, bankaccoun0_.id as id1_0_1_, bankaccoun0_.clientId as clientid4_0_1_, bankaccoun0_.ammountOfMoney as ammounto2_0_1_, bankaccoun0_.bankId as bankid5_0_1_, bankaccoun0_.currency as currency3_0_1_, client1_.id as id1_2_2_, client1_.name as name2_2_2_, client1_.type as type3_2_2_ from bankAccounts bankaccoun0_ left outer join clients client1_ on bankaccoun0_.clientId=client1_.id where bankaccoun0_.bankId=?
[DEBUG] 2022-02-16 00:14:38.153 [main] ResultSetProcessorImpl - Preparing collection initializer : [by.ganevich.entity.Bank.bankAccounts#1]
[DEBUG] 2022-02-16 00:14:38.153 [main] CollectionReferenceInitializerImpl - Found row of collection: [by.ganevich.entity.Bank.bankAccounts#1]
[DEBUG] 2022-02-16 00:14:38.153 [main] CollectionLoadContext - 1 collections were found in result set for role: by.ganevich.entity.Bank.bankAccounts
[DEBUG] 2022-02-16 00:14:38.154 [main] CollectionLoadContext - Collection fully initialized: [by.ganevich.entity.Bank.bankAccounts#1]
[DEBUG] 2022-02-16 00:14:38.154 [main] CollectionLoadContext - 1 collections initialized for role: by.ganevich.entity.Bank.bankAccounts
[DEBUG] 2022-02-16 00:14:38.154 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2022-02-16 00:14:38.154 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [by.ganevich.entity.BankAccount.receivedTransactions#1]
[DEBUG] 2022-02-16 00:14:38.154 [main] SQL - select receivedtr0_.recipientAccountId as recipien4_5_0_, receivedtr0_.id as id1_5_0_, receivedtr0_.id as id1_5_1_, receivedtr0_.amountofmoney as amountof2_5_1_, receivedtr0_.date as date3_5_1_, receivedtr0_.recipientAccountId as recipien4_5_1_, receivedtr0_.sender as sender5_5_1_, receivedtr0_.senderAccountId as senderac6_5_1_, client1_.id as id1_2_2_, client1_.name as name2_2_2_, client1_.type as type3_2_2_, bankaccoun2_.id as id1_0_3_, bankaccoun2_.clientId as clientid4_0_3_, bankaccoun2_.ammountOfMoney as ammounto2_0_3_, bankaccoun2_.bankId as bankid5_0_3_, bankaccoun2_.currency as currency3_0_3_, client3_.id as id1_2_4_, client3_.name as name2_2_4_, client3_.type as type3_2_4_, bank4_.id as id1_1_5_, bank4_.commission as commissi2_1_5_, bank4_.name as name3_1_5_ from transactions receivedtr0_ left outer join clients client1_ on receivedtr0_.sender=client1_.id left outer join bankAccounts bankaccoun2_ on receivedtr0_.senderAccountId=bankaccoun2_.id left outer join clients client3_ on bankaccoun2_.clientId=client3_.id left outer join banks bank4_ on bankaccoun2_.bankId=bank4_.id where receivedtr0_.recipientAccountId=?
[DEBUG] 2022-02-16 00:14:38.156 [main] ResultSetProcessorImpl - Preparing collection initializer : [by.ganevich.entity.BankAccount.receivedTransactions#1]
[DEBUG] 2022-02-16 00:14:38.156 [main] CollectionReferenceInitializerImpl - Found row of collection: [by.ganevich.entity.BankAccount.receivedTransactions#1]
[DEBUG] 2022-02-16 00:14:38.156 [main] CollectionLoadContext - 1 collections were found in result set for role: by.ganevich.entity.BankAccount.receivedTransactions
[DEBUG] 2022-02-16 00:14:38.156 [main] CollectionLoadContext - Collection fully initialized: [by.ganevich.entity.BankAccount.receivedTransactions#1]
[DEBUG] 2022-02-16 00:14:38.156 [main] CollectionLoadContext - 1 collections initialized for role: by.ganevich.entity.BankAccount.receivedTransactions
[DEBUG] 2022-02-16 00:14:38.156 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2022-02-16 00:14:38.156 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [by.ganevich.entity.Client.bankAccounts#2]
[DEBUG] 2022-02-16 00:14:38.156 [main] SQL - select bankaccoun0_.clientId as clientid4_0_0_, bankaccoun0_.id as id1_0_0_, bankaccoun0_.id as id1_0_1_, bankaccoun0_.clientId as clientid4_0_1_, bankaccoun0_.ammountOfMoney as ammounto2_0_1_, bankaccoun0_.bankId as bankid5_0_1_, bankaccoun0_.currency as currency3_0_1_, bank1_.id as id1_1_2_, bank1_.commission as commissi2_1_2_, bank1_.name as name3_1_2_ from bankAccounts bankaccoun0_ left outer join banks bank1_ on bankaccoun0_.bankId=bank1_.id where bankaccoun0_.clientId=?
[DEBUG] 2022-02-16 00:14:38.158 [main] ResultSetProcessorImpl - Preparing collection initializer : [by.ganevich.entity.Client.bankAccounts#2]
[DEBUG] 2022-02-16 00:14:38.158 [main] CollectionReferenceInitializerImpl - Found row of collection: [by.ganevich.entity.Client.bankAccounts#2]
[DEBUG] 2022-02-16 00:14:38.158 [main] CollectionLoadContext - 1 collections were found in result set for role: by.ganevich.entity.Client.bankAccounts
[DEBUG] 2022-02-16 00:14:38.158 [main] CollectionLoadContext - Collection fully initialized: [by.ganevich.entity.Client.bankAccounts#2]
[DEBUG] 2022-02-16 00:14:38.158 [main] CollectionLoadContext - 1 collections initialized for role: by.ganevich.entity.Client.bankAccounts
[DEBUG] 2022-02-16 00:14:38.158 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2022-02-16 00:14:38.158 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [by.ganevich.entity.Client.sentTransactions#1]
[DEBUG] 2022-02-16 00:14:38.158 [main] SQL - select senttransa0_.sender as sender5_5_0_, senttransa0_.id as id1_5_0_, senttransa0_.id as id1_5_1_, senttransa0_.amountofmoney as amountof2_5_1_, senttransa0_.date as date3_5_1_, senttransa0_.recipientAccountId as recipien4_5_1_, senttransa0_.sender as sender5_5_1_, senttransa0_.senderAccountId as senderac6_5_1_, bankaccoun1_.id as id1_0_2_, bankaccoun1_.clientId as clientid4_0_2_, bankaccoun1_.ammountOfMoney as ammounto2_0_2_, bankaccoun1_.bankId as bankid5_0_2_, bankaccoun1_.currency as currency3_0_2_, client2_.id as id1_2_3_, client2_.name as name2_2_3_, client2_.type as type3_2_3_, bank3_.id as id1_1_4_, bank3_.commission as commissi2_1_4_, bank3_.name as name3_1_4_, bankaccoun4_.id as id1_0_5_, bankaccoun4_.clientId as clientid4_0_5_, bankaccoun4_.ammountOfMoney as ammounto2_0_5_, bankaccoun4_.bankId as bankid5_0_5_, bankaccoun4_.currency as currency3_0_5_ from transactions senttransa0_ left outer join bankAccounts bankaccoun1_ on senttransa0_.recipientAccountId=bankaccoun1_.id left outer join clients client2_ on bankaccoun1_.clientId=client2_.id left outer join banks bank3_ on bankaccoun1_.bankId=bank3_.id left outer join bankAccounts bankaccoun4_ on senttransa0_.senderAccountId=bankaccoun4_.id where senttransa0_.sender=?
[DEBUG] 2022-02-16 00:14:38.160 [main] ResultSetProcessorImpl - Preparing collection initializer : [by.ganevich.entity.Client.sentTransactions#1]
[DEBUG] 2022-02-16 00:14:38.160 [main] CollectionLoadContext - 1 collections were found in result set for role: by.ganevich.entity.Client.sentTransactions
[DEBUG] 2022-02-16 00:14:38.160 [main] CollectionLoadContext - Collection fully initialized: [by.ganevich.entity.Client.sentTransactions#1]
[DEBUG] 2022-02-16 00:14:38.160 [main] CollectionLoadContext - 1 collections initialized for role: by.ganevich.entity.Client.sentTransactions
[DEBUG] 2022-02-16 00:14:38.161 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2022-02-16 00:14:38.161 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [by.ganevich.entity.Client.bankAccounts#1]
[DEBUG] 2022-02-16 00:14:38.161 [main] SQL - select bankaccoun0_.clientId as clientid4_0_0_, bankaccoun0_.id as id1_0_0_, bankaccoun0_.id as id1_0_1_, bankaccoun0_.clientId as clientid4_0_1_, bankaccoun0_.ammountOfMoney as ammounto2_0_1_, bankaccoun0_.bankId as bankid5_0_1_, bankaccoun0_.currency as currency3_0_1_, bank1_.id as id1_1_2_, bank1_.commission as commissi2_1_2_, bank1_.name as name3_1_2_ from bankAccounts bankaccoun0_ left outer join banks bank1_ on bankaccoun0_.bankId=bank1_.id where bankaccoun0_.clientId=?
[DEBUG] 2022-02-16 00:14:38.162 [main] ResultSetProcessorImpl - Preparing collection initializer : [by.ganevich.entity.Client.bankAccounts#1]
[DEBUG] 2022-02-16 00:14:38.162 [main] CollectionReferenceInitializerImpl - Found row of collection: [by.ganevich.entity.Client.bankAccounts#1]
[DEBUG] 2022-02-16 00:14:38.162 [main] CollectionLoadContext - 1 collections were found in result set for role: by.ganevich.entity.Client.bankAccounts
[DEBUG] 2022-02-16 00:14:38.162 [main] CollectionLoadContext - Collection fully initialized: [by.ganevich.entity.Client.bankAccounts#1]
[DEBUG] 2022-02-16 00:14:38.162 [main] CollectionLoadContext - 1 collections initialized for role: by.ganevich.entity.Client.bankAccounts
[DEBUG] 2022-02-16 00:14:38.162 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2022-02-16 00:14:38.166 [main] JpaTransactionManager - Initiating transaction commit
[DEBUG] 2022-02-16 00:14:38.166 [main] JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(831993944<open>)]
[DEBUG] 2022-02-16 00:14:38.166 [main] TransactionImpl - committing
[DEBUG] 2022-02-16 00:14:38.167 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2022-02-16 00:14:38.177 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2022-02-16 00:14:38.185 [main] Collections - Collection found: [by.ganevich.entity.Client.bankAccounts#1], was: [by.ganevich.entity.Client.bankAccounts#1] (initialized)
[DEBUG] 2022-02-16 00:14:38.185 [main] Collections - Collection found: [by.ganevich.entity.Client.sentTransactions#1], was: [by.ganevich.entity.Client.sentTransactions#1] (initialized)
[DEBUG] 2022-02-16 00:14:38.185 [main] Collections - Collection found: [by.ganevich.entity.Client.bankAccounts#2], was: [by.ganevich.entity.Client.bankAccounts#2] (initialized)
[DEBUG] 2022-02-16 00:14:38.185 [main] Collections - Collection found: [by.ganevich.entity.Client.sentTransactions#2], was: [by.ganevich.entity.Client.sentTransactions#2] (initialized)
[DEBUG] 2022-02-16 00:14:38.185 [main] Collections - Collection found: [by.ganevich.entity.BankAccount.receivedTransactions#1], was: [by.ganevich.entity.BankAccount.receivedTransactions#1] (initialized)
[DEBUG] 2022-02-16 00:14:38.185 [main] Collections - Collection found: [by.ganevich.entity.BankAccount.sentTransactions#1], was: [by.ganevich.entity.BankAccount.sentTransactions#1] (initialized)
[DEBUG] 2022-02-16 00:14:38.186 [main] Collections - Collection found: [by.ganevich.entity.Bank.bankAccounts#1], was: [by.ganevich.entity.Bank.bankAccounts#1] (initialized)
[DEBUG] 2022-02-16 00:14:38.186 [main] Collections - Collection found: [by.ganevich.entity.BankAccount.receivedTransactions#2], was: [by.ganevich.entity.BankAccount.receivedTransactions#2] (initialized)
[DEBUG] 2022-02-16 00:14:38.186 [main] Collections - Collection found: [by.ganevich.entity.BankAccount.sentTransactions#2], was: [by.ganevich.entity.BankAccount.sentTransactions#2] (initialized)
[DEBUG] 2022-02-16 00:14:38.186 [main] Collections - Collection found: [by.ganevich.entity.Bank.bankAccounts#4], was: [by.ganevich.entity.Bank.bankAccounts#4] (initialized)
[DEBUG] 2022-02-16 00:14:38.189 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[DEBUG] 2022-02-16 00:14:38.189 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 10 collections
[DEBUG] 2022-02-16 00:14:38.190 [main] EntityPrinter - Listing entities:
[DEBUG] 2022-02-16 00:14:38.191 [main] EntityPrinter - by.ganevich.entity.Client{sentTransactions=[by.ganevich.entity.Transaction#1], bankAccounts=[by.ganevich.entity.BankAccount#2], name=Max, id=2, type=INDUSTRIAL}
[DEBUG] 2022-02-16 00:14:38.191 [main] EntityPrinter - by.ganevich.entity.Transaction{date=2022-02-15, senderAccount=by.ganevich.entity.BankAccount#2, sender=by.ganevich.entity.Client#2, id=1, receiverAccount=by.ganevich.entity.BankAccount#1, amountOfMoney=100.0}
[DEBUG] 2022-02-16 00:14:38.191 [main] EntityPrinter - by.ganevich.entity.Client{sentTransactions=[], bankAccounts=[by.ganevich.entity.BankAccount#1], name=Matvey, id=1, type=INDIVIDUAL}
[DEBUG] 2022-02-16 00:14:38.191 [main] EntityPrinter - by.ganevich.entity.Bank{bankAccounts=[by.ganevich.entity.BankAccount#2], name=Belarus, commission=0.2, id=4}
[DEBUG] 2022-02-16 00:14:38.191 [main] EntityPrinter - by.ganevich.entity.BankAccount{receivedTransactions=[by.ganevich.entity.Transaction#1], sentTransactions=[], bankProducer=by.ganevich.entity.Bank#1, currency=USD, id=1, accountOwner=by.ganevich.entity.Client#1, amountOfMoney=512.28125}
[DEBUG] 2022-02-16 00:14:38.191 [main] EntityPrinter - by.ganevich.entity.Bank{bankAccounts=[by.ganevich.entity.BankAccount#1], name=Alfa, commission=0.3, id=1}
[DEBUG] 2022-02-16 00:14:38.191 [main] EntityPrinter - by.ganevich.entity.BankAccount{receivedTransactions=[], sentTransactions=[by.ganevich.entity.Transaction#1], bankProducer=by.ganevich.entity.Bank#4, currency=EUR, id=2, accountOwner=by.ganevich.entity.Client#2, amountOfMoney=186.27585}
[DEBUG] 2022-02-16 00:14:38.195 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-02-16 00:14:38.195 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-02-16 00:14:38.195 [main] JpaTransactionManager - Closing JPA EntityManager [SessionImpl(831993944<open>)] after transaction
[DEBUG] 2022-02-16 00:18:34.991 [main] AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@67b467e9
[DEBUG] 2022-02-16 00:18:35.014 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[DEBUG] 2022-02-16 00:18:35.172 [main] ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\config\DatabaseConfig.class]
[DEBUG] 2022-02-16 00:18:35.183 [main] ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\io\Interactive.class]
[DEBUG] 2022-02-16 00:18:35.184 [main] ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\io\subinteractive\BankAccountMenuInteractive.class]
[DEBUG] 2022-02-16 00:18:35.185 [main] ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\io\subinteractive\BankMenuInteractive.class]
[DEBUG] 2022-02-16 00:18:35.186 [main] ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\io\subinteractive\ClientMenuInteractive.class]
[DEBUG] 2022-02-16 00:18:35.189 [main] ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\io\subinteractive\TransactionMenuInteractive.class]
[DEBUG] 2022-02-16 00:18:35.191 [main] ClassPathBeanDefinitionScanner - Ignored because not a concrete top-level class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\repository\BankAccountRepository.class]
[DEBUG] 2022-02-16 00:18:35.192 [main] ClassPathBeanDefinitionScanner - Ignored because not a concrete top-level class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\repository\BankRepository.class]
[DEBUG] 2022-02-16 00:18:35.193 [main] ClassPathBeanDefinitionScanner - Ignored because not a concrete top-level class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\repository\ClientRepository.class]
[DEBUG] 2022-02-16 00:18:35.197 [main] ClassPathBeanDefinitionScanner - Ignored because not a concrete top-level class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\repository\TransactionRepository.class]
[DEBUG] 2022-02-16 00:18:35.197 [main] ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\service\BankAccountService.class]
[DEBUG] 2022-02-16 00:18:35.199 [main] ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\service\BankService.class]
[DEBUG] 2022-02-16 00:18:35.200 [main] ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\service\ClientService.class]
[DEBUG] 2022-02-16 00:18:35.201 [main] ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\service\CommissionService.class]
[DEBUG] 2022-02-16 00:18:35.202 [main] ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\service\RateService.class]
[DEBUG] 2022-02-16 00:18:35.202 [main] ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\service\TransactionService.class]
[INFO ] 2022-02-16 00:18:35.278 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[DEBUG] 2022-02-16 00:18:35.300 [main] RepositoryConfigurationDelegate - Scanning for JPA repositories in packages by.ganevich.repository.
[DEBUG] 2022-02-16 00:18:35.324 [main] RepositoryComponentProvider - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\repository\BankAccountRepository.class]
[DEBUG] 2022-02-16 00:18:35.325 [main] RepositoryComponentProvider - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\repository\BankRepository.class]
[DEBUG] 2022-02-16 00:18:35.325 [main] RepositoryComponentProvider - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\repository\ClientRepository.class]
[DEBUG] 2022-02-16 00:18:35.325 [main] RepositoryComponentProvider - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\repository\CommissionRepository.class]
[DEBUG] 2022-02-16 00:18:35.325 [main] RepositoryComponentProvider - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\repository\RateRepository.class]
[DEBUG] 2022-02-16 00:18:35.325 [main] RepositoryComponentProvider - Identified candidate component class: file [D:\JavaProjects\intexsoft-test-task\target\classes\by\ganevich\repository\TransactionRepository.class]
[INFO ] 2022-02-16 00:18:35.426 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 124 ms. Found 6 JPA repository interfaces.
[DEBUG] 2022-02-16 00:18:35.594 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'emBeanDefinitionRegistrarPostProcessor'
[DEBUG] 2022-02-16 00:18:35.602 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
[DEBUG] 2022-02-16 00:18:35.607 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
[DEBUG] 2022-02-16 00:18:35.607 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
[DEBUG] 2022-02-16 00:18:35.614 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[DEBUG] 2022-02-16 00:18:35.617 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[DEBUG] 2022-02-16 00:18:35.622 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[DEBUG] 2022-02-16 00:18:35.622 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[DEBUG] 2022-02-16 00:18:35.673 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'application'
[DEBUG] 2022-02-16 00:18:35.675 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[DEBUG] 2022-02-16 00:18:35.675 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
[DEBUG] 2022-02-16 00:18:35.719 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionAttributeSource'
[DEBUG] 2022-02-16 00:18:35.729 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionInterceptor'
[DEBUG] 2022-02-16 00:18:35.730 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
[DEBUG] 2022-02-16 00:18:35.739 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
[DEBUG] 2022-02-16 00:18:35.739 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
[DEBUG] 2022-02-16 00:18:35.750 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'databaseConfig'
[DEBUG] 2022-02-16 00:18:35.755 [main] PropertySourcesPropertyResolver - Found key 'postgres.username' in PropertySource 'class path resource [application.properties]' with value of type String
[DEBUG] 2022-02-16 00:18:35.757 [main] PropertySourcesPropertyResolver - Found key 'password' in PropertySource 'class path resource [application.properties]' with value of type String
[DEBUG] 2022-02-16 00:18:35.757 [main] PropertySourcesPropertyResolver - Found key 'url' in PropertySource 'class path resource [application.properties]' with value of type String
[DEBUG] 2022-02-16 00:18:35.757 [main] PropertySourcesPropertyResolver - Found key 'driver' in PropertySource 'class path resource [application.properties]' with value of type String
[DEBUG] 2022-02-16 00:18:35.757 [main] PropertySourcesPropertyResolver - Found key 'dialect' in PropertySource 'class path resource [application.properties]' with value of type String
[DEBUG] 2022-02-16 00:18:35.758 [main] PropertySourcesPropertyResolver - Found key 'packagesToScan' in PropertySource 'class path resource [application.properties]' with value of type String
[DEBUG] 2022-02-16 00:18:35.766 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'interactive'
[DEBUG] 2022-02-16 00:18:35.768 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'bankMenuInteractive'
[DEBUG] 2022-02-16 00:18:35.772 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'bankService'
[DEBUG] 2022-02-16 00:18:35.774 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'bankRepository'
[DEBUG] 2022-02-16 00:18:35.815 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'entityManagerFactory'
[DEBUG] 2022-02-16 00:18:35.817 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'dataSource'
[DEBUG] 2022-02-16 00:18:35.908 [main] logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[DEBUG] 2022-02-16 00:18:35.914 [main] DriverManagerDataSource - Loaded JDBC driver: org.hibernate.dialect.PostgreSQLDialect
[DEBUG] 2022-02-16 00:18:35.917 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'dataSource'
[DEBUG] 2022-02-16 00:18:35.941 [main] LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
[DEBUG] 2022-02-16 00:18:35.962 [main] LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@18b4aac2
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.DriverManagerDataSource@73cd37c0
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/JavaProjects/intexsoft-test-task/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		by.ganevich.entity.Bank
		by.ganevich.entity.BankAccount
		by.ganevich.entity.Client
		by.ganevich.entity.Commission
		by.ganevich.entity.Rate
		by.ganevich.entity.Transaction]
	Mapping files names []
	Properties []
[DEBUG] 2022-02-16 00:18:35.972 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-02-16 00:18:35.974 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-02-16 00:18:35.980 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2022-02-16 00:18:36.067 [main] Version - HHH000412: Hibernate ORM core version 5.6.3.Final
[DEBUG] 2022-02-16 00:18:36.068 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2022-02-16 00:18:36.271 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2022-02-16 00:18:36.286 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2022-02-16 00:18:36.287 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2022-02-16 00:18:36.308 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-02-16 00:18:36.611 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3c9168dc
[DEBUG] 2022-02-16 00:18:36.611 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3c9168dc
[DEBUG] 2022-02-16 00:18:36.611 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3c9168dc
[DEBUG] 2022-02-16 00:18:36.612 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@54361a9
[DEBUG] 2022-02-16 00:18:36.612 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37ebc9d8
[DEBUG] 2022-02-16 00:18:36.613 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6fa590ba
[DEBUG] 2022-02-16 00:18:36.614 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@77307458
[DEBUG] 2022-02-16 00:18:36.614 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@77307458
[DEBUG] 2022-02-16 00:18:36.614 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@77307458
[DEBUG] 2022-02-16 00:18:36.615 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2c177f9e
[DEBUG] 2022-02-16 00:18:36.615 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2c177f9e
[DEBUG] 2022-02-16 00:18:36.616 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2c177f9e
[DEBUG] 2022-02-16 00:18:36.617 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@74cec793
[DEBUG] 2022-02-16 00:18:36.617 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@74cec793
[DEBUG] 2022-02-16 00:18:36.617 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@74cec793
[DEBUG] 2022-02-16 00:18:36.618 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@8a589a2
[DEBUG] 2022-02-16 00:18:36.619 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@8a589a2
[DEBUG] 2022-02-16 00:18:36.619 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@8a589a2
[DEBUG] 2022-02-16 00:18:36.620 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@ec0c838
[DEBUG] 2022-02-16 00:18:36.620 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@ec0c838
[DEBUG] 2022-02-16 00:18:36.620 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@ec0c838
[DEBUG] 2022-02-16 00:18:36.621 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7997b197
[DEBUG] 2022-02-16 00:18:36.621 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7997b197
[DEBUG] 2022-02-16 00:18:36.621 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7997b197
[DEBUG] 2022-02-16 00:18:36.622 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@770d4269
[DEBUG] 2022-02-16 00:18:36.623 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@770d4269
[DEBUG] 2022-02-16 00:18:36.623 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@770d4269
[DEBUG] 2022-02-16 00:18:36.624 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@74bdc168
[DEBUG] 2022-02-16 00:18:36.624 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@74bdc168
[DEBUG] 2022-02-16 00:18:36.625 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7cbee484
[DEBUG] 2022-02-16 00:18:36.625 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7cbee484
[DEBUG] 2022-02-16 00:18:36.626 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@7807ac2c
[DEBUG] 2022-02-16 00:18:36.626 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@7807ac2c
[DEBUG] 2022-02-16 00:18:36.627 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a77614d
[DEBUG] 2022-02-16 00:18:36.627 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@a1217f9
[DEBUG] 2022-02-16 00:18:36.628 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@791cbf87
[DEBUG] 2022-02-16 00:18:36.628 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@791cbf87
[DEBUG] 2022-02-16 00:18:36.630 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4cc76301
[DEBUG] 2022-02-16 00:18:36.630 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4cc76301
[DEBUG] 2022-02-16 00:18:36.642 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@56e07a08
[DEBUG] 2022-02-16 00:18:36.643 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@56e07a08
[DEBUG] 2022-02-16 00:18:36.645 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@114a85c2
[DEBUG] 2022-02-16 00:18:36.645 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@114a85c2
[DEBUG] 2022-02-16 00:18:36.647 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@32fe9d0a
[DEBUG] 2022-02-16 00:18:36.647 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@32fe9d0a
[DEBUG] 2022-02-16 00:18:36.649 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2c715e84
[DEBUG] 2022-02-16 00:18:36.649 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2c715e84
[DEBUG] 2022-02-16 00:18:36.651 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@72b16078
[DEBUG] 2022-02-16 00:18:36.651 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@72b16078
[DEBUG] 2022-02-16 00:18:36.653 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@32057e6
[DEBUG] 2022-02-16 00:18:36.653 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@32057e6
[DEBUG] 2022-02-16 00:18:36.656 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@24f360b2
[DEBUG] 2022-02-16 00:18:36.656 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@24f360b2
[DEBUG] 2022-02-16 00:18:36.657 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@476aac9
[DEBUG] 2022-02-16 00:18:36.657 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@476aac9
[DEBUG] 2022-02-16 00:18:36.659 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@21ec5d87
[DEBUG] 2022-02-16 00:18:36.659 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@21ec5d87
[DEBUG] 2022-02-16 00:18:36.660 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@363f6148
[DEBUG] 2022-02-16 00:18:36.661 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@363f6148
[DEBUG] 2022-02-16 00:18:36.661 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@363f6148
[DEBUG] 2022-02-16 00:18:36.663 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4b21844c
[DEBUG] 2022-02-16 00:18:36.664 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@455351c4
[DEBUG] 2022-02-16 00:18:36.664 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@455351c4
[DEBUG] 2022-02-16 00:18:36.664 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@455351c4
[DEBUG] 2022-02-16 00:18:36.665 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4940809c
[DEBUG] 2022-02-16 00:18:36.666 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@307765b4
[DEBUG] 2022-02-16 00:18:36.667 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@7cc586a8
[DEBUG] 2022-02-16 00:18:36.667 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7cc586a8
[DEBUG] 2022-02-16 00:18:36.668 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7eb01b12
[DEBUG] 2022-02-16 00:18:36.668 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7eb01b12
[DEBUG] 2022-02-16 00:18:36.669 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6de54b40
[DEBUG] 2022-02-16 00:18:36.669 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6de54b40
[DEBUG] 2022-02-16 00:18:36.670 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@6691490c
[DEBUG] 2022-02-16 00:18:36.670 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6691490c
[DEBUG] 2022-02-16 00:18:36.671 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@538613b3
[DEBUG] 2022-02-16 00:18:36.671 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@538613b3
[DEBUG] 2022-02-16 00:18:36.672 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5db99216
[DEBUG] 2022-02-16 00:18:36.673 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2e77b8cf
[DEBUG] 2022-02-16 00:18:36.673 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2e77b8cf
[DEBUG] 2022-02-16 00:18:36.673 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2e77b8cf
[DEBUG] 2022-02-16 00:18:36.674 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2755d705
[DEBUG] 2022-02-16 00:18:36.675 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2755d705
[DEBUG] 2022-02-16 00:18:36.675 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2755d705
[DEBUG] 2022-02-16 00:18:36.676 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@551a20d6
[DEBUG] 2022-02-16 00:18:36.676 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7e094740
[DEBUG] 2022-02-16 00:18:36.677 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3591009c
[DEBUG] 2022-02-16 00:18:36.677 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3591009c
[DEBUG] 2022-02-16 00:18:36.677 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3591009c
[DEBUG] 2022-02-16 00:18:36.679 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@758f4f03
[DEBUG] 2022-02-16 00:18:36.679 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@758f4f03
[DEBUG] 2022-02-16 00:18:36.679 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@758f4f03
[DEBUG] 2022-02-16 00:18:36.680 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@660e9100
[DEBUG] 2022-02-16 00:18:36.680 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@27e0f2f5
[DEBUG] 2022-02-16 00:18:36.683 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4eeea57d
[DEBUG] 2022-02-16 00:18:36.684 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4eeea57d
[DEBUG] 2022-02-16 00:18:36.684 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f70f32f
[DEBUG] 2022-02-16 00:18:36.686 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@1ee4730
[DEBUG] 2022-02-16 00:18:36.686 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ee4730
[DEBUG] 2022-02-16 00:18:36.687 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@ca27722
[DEBUG] 2022-02-16 00:18:36.687 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@ca27722
[DEBUG] 2022-02-16 00:18:36.688 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@67427b69
[DEBUG] 2022-02-16 00:18:36.688 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@64f857e7
[DEBUG] 2022-02-16 00:18:36.689 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@73511076
[DEBUG] 2022-02-16 00:18:36.693 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5b800468
[DEBUG] 2022-02-16 00:18:36.693 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5b800468
[DEBUG] 2022-02-16 00:18:36.693 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5f7f2382
[DEBUG] 2022-02-16 00:18:36.693 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@407cf41
[DEBUG] 2022-02-16 00:18:36.694 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6815c5f2
[DEBUG] 2022-02-16 00:18:36.694 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@46cc127b
[DEBUG] 2022-02-16 00:18:36.694 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@60094a13
[DEBUG] 2022-02-16 00:18:36.694 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5aceec94
[DEBUG] 2022-02-16 00:18:36.694 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1c32886a
[DEBUG] 2022-02-16 00:18:36.694 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3a4b0e5d
[DEBUG] 2022-02-16 00:18:36.707 [main] BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2f66e802] into BootstrapContext; was [null]
[DEBUG] 2022-02-16 00:18:36.707 [main] ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2f66e802) [was null]
[DEBUG] 2022-02-16 00:18:36.708 [main] BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@2a492f2a] into BootstrapContext; was [null]
[DEBUG] 2022-02-16 00:18:36.708 [main] BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3277e499] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@585811a4]
[DEBUG] 2022-02-16 00:18:36.795 [main] BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2f66e802]
[DEBUG] 2022-02-16 00:18:36.795 [main] ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2f66e802]
[DEBUG] 2022-02-16 00:18:36.808 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2022-02-16 00:18:36.809 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2022-02-16 00:18:36.810 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-02-16 00:18:36.810 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-02-16 00:18:36.811 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2022-02-16 00:18:36.812 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2022-02-16 00:18:36.813 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2022-02-16 00:18:36.814 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-02-16 00:18:36.815 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2022-02-16 00:18:36.816 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2022-02-16 00:18:36.816 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2022-02-16 00:18:36.817 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2022-02-16 00:18:36.817 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-02-16 00:18:36.818 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2022-02-16 00:18:36.825 [main] DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:postgresql://localhost:5432/bank-system]
[DEBUG] 2022-02-16 00:18:37.323 [main] JdbcEnvironmentInitiator - Database ->
       name : PostgreSQL
    version : 14.1
      major : 14
      minor : 1
[DEBUG] 2022-02-16 00:18:37.323 [main] JdbcEnvironmentInitiator - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.1
      major : 42
      minor : 3
[DEBUG] 2022-02-16 00:18:37.324 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2022-02-16 00:18:37.329 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
[DEBUG] 2022-02-16 00:18:37.344 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[DEBUG] 2022-02-16 00:18:37.375 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5e3a39cd
[DEBUG] 2022-02-16 00:18:37.376 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5e3a39cd
[DEBUG] 2022-02-16 00:18:37.376 [main] BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@538613b3
[DEBUG] 2022-02-16 00:18:37.378 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27b22f74] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@22fba58c]
[DEBUG] 2022-02-16 00:18:37.421 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2022-02-16 00:18:37.437 [main] AnnotationBinder - Binding entity from annotated class: by.ganevich.entity.Commission
[DEBUG] 2022-02-16 00:18:37.458 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-02-16 00:18:37.465 [main] EntityBinder - Import with entity name Commission
[DEBUG] 2022-02-16 00:18:37.468 [main] EntityBinder - Bind entity by.ganevich.entity.Commission on table commissionForClients
[DEBUG] 2022-02-16 00:18:37.491 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(commissionForClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.493 [main] ClassLoaderAccessImpl - Not known whether passed class name [by.ganevich.entity.Commission] is safe
[DEBUG] 2022-02-16 00:18:37.493 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : by.ganevich.entity.Commission
[DEBUG] 2022-02-16 00:18:37.494 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2022-02-16 00:18:37.495 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Commission:id]
[DEBUG] 2022-02-16 00:18:37.497 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2022-02-16 00:18:37.499 [main] PropertyBinder - Building property id
[DEBUG] 2022-02-16 00:18:37.502 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
[DEBUG] 2022-02-16 00:18:37.503 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(commissionForClients), mappingColumn=clientType, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.503 [main] PropertyBinder - MetadataSourceProcessor property clientType with lazy=false
[DEBUG] 2022-02-16 00:18:37.503 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Commission:clientType]
[DEBUG] 2022-02-16 00:18:37.503 [main] SimpleValueBinder - building SimpleValue for clientType
[DEBUG] 2022-02-16 00:18:37.503 [main] PropertyBinder - Building property clientType
[DEBUG] 2022-02-16 00:18:37.503 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(commissionForClients), mappingColumn=commission, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.503 [main] PropertyBinder - MetadataSourceProcessor property commission with lazy=false
[DEBUG] 2022-02-16 00:18:37.503 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Commission:commission]
[DEBUG] 2022-02-16 00:18:37.504 [main] SimpleValueBinder - building SimpleValue for commission
[DEBUG] 2022-02-16 00:18:37.504 [main] PropertyBinder - Building property commission
[DEBUG] 2022-02-16 00:18:37.511 [main] AnnotationBinder - Binding entity from annotated class: by.ganevich.entity.Transaction
[DEBUG] 2022-02-16 00:18:37.511 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-02-16 00:18:37.511 [main] EntityBinder - Import with entity name Transaction
[DEBUG] 2022-02-16 00:18:37.511 [main] EntityBinder - Bind entity by.ganevich.entity.Transaction on table transactions
[DEBUG] 2022-02-16 00:18:37.516 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(transactions), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.517 [main] ClassLoaderAccessImpl - Not known whether passed class name [by.ganevich.entity.Transaction] is safe
[DEBUG] 2022-02-16 00:18:37.517 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : by.ganevich.entity.Transaction
[DEBUG] 2022-02-16 00:18:37.517 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2022-02-16 00:18:37.517 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Transaction:id]
[DEBUG] 2022-02-16 00:18:37.517 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2022-02-16 00:18:37.517 [main] PropertyBinder - Building property id
[DEBUG] 2022-02-16 00:18:37.517 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
[DEBUG] 2022-02-16 00:18:37.517 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(transactions), mappingColumn=amountofmoney, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.517 [main] PropertyBinder - MetadataSourceProcessor property amountOfMoney with lazy=false
[DEBUG] 2022-02-16 00:18:37.517 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Transaction:amountOfMoney]
[DEBUG] 2022-02-16 00:18:37.517 [main] SimpleValueBinder - building SimpleValue for amountOfMoney
[DEBUG] 2022-02-16 00:18:37.517 [main] PropertyBinder - Building property amountOfMoney
[DEBUG] 2022-02-16 00:18:37.518 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(transactions), mappingColumn=date, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.518 [main] PropertyBinder - MetadataSourceProcessor property date with lazy=false
[DEBUG] 2022-02-16 00:18:37.518 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Transaction:date]
[DEBUG] 2022-02-16 00:18:37.518 [main] SimpleValueBinder - building SimpleValue for date
[DEBUG] 2022-02-16 00:18:37.518 [main] PropertyBinder - Building property date
[DEBUG] 2022-02-16 00:18:37.519 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipientAccountId', referencedColumn='', mappedBy=''}
[DEBUG] 2022-02-16 00:18:37.520 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(transactions), mappingColumn=receiverAccount, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.523 [main] PropertyBinder - Building property receiverAccount
[DEBUG] 2022-02-16 00:18:37.523 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='sender', referencedColumn='', mappedBy=''}
[DEBUG] 2022-02-16 00:18:37.523 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(transactions), mappingColumn=sender, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.524 [main] PropertyBinder - Building property sender
[DEBUG] 2022-02-16 00:18:37.524 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='senderAccountId', referencedColumn='', mappedBy=''}
[DEBUG] 2022-02-16 00:18:37.524 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(transactions), mappingColumn=senderAccount, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.524 [main] PropertyBinder - Building property senderAccount
[DEBUG] 2022-02-16 00:18:37.524 [main] AnnotationBinder - Binding entity from annotated class: by.ganevich.entity.BankAccount
[DEBUG] 2022-02-16 00:18:37.525 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-02-16 00:18:37.525 [main] EntityBinder - Import with entity name BankAccount
[DEBUG] 2022-02-16 00:18:37.525 [main] EntityBinder - Bind entity by.ganevich.entity.BankAccount on table bankAccounts
[DEBUG] 2022-02-16 00:18:37.528 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(bankAccounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.528 [main] ClassLoaderAccessImpl - Not known whether passed class name [by.ganevich.entity.BankAccount] is safe
[DEBUG] 2022-02-16 00:18:37.528 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : by.ganevich.entity.BankAccount
[DEBUG] 2022-02-16 00:18:37.528 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2022-02-16 00:18:37.529 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.BankAccount:id]
[DEBUG] 2022-02-16 00:18:37.529 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2022-02-16 00:18:37.529 [main] PropertyBinder - Building property id
[DEBUG] 2022-02-16 00:18:37.529 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
[DEBUG] 2022-02-16 00:18:37.529 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='clientId', referencedColumn='', mappedBy=''}
[DEBUG] 2022-02-16 00:18:37.529 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(bankAccounts), mappingColumn=accountOwner, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.529 [main] PropertyBinder - Building property accountOwner
[DEBUG] 2022-02-16 00:18:37.529 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(bankAccounts), mappingColumn=ammountOfMoney, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.530 [main] PropertyBinder - MetadataSourceProcessor property amountOfMoney with lazy=false
[DEBUG] 2022-02-16 00:18:37.530 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.BankAccount:amountOfMoney]
[DEBUG] 2022-02-16 00:18:37.530 [main] SimpleValueBinder - building SimpleValue for amountOfMoney
[DEBUG] 2022-02-16 00:18:37.530 [main] PropertyBinder - Building property amountOfMoney
[DEBUG] 2022-02-16 00:18:37.530 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='bankId', referencedColumn='', mappedBy=''}
[DEBUG] 2022-02-16 00:18:37.530 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(bankAccounts), mappingColumn=bankProducer, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.530 [main] PropertyBinder - Building property bankProducer
[DEBUG] 2022-02-16 00:18:37.530 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(bankAccounts), mappingColumn=currency, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.530 [main] PropertyBinder - MetadataSourceProcessor property currency with lazy=false
[DEBUG] 2022-02-16 00:18:37.530 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.BankAccount:currency]
[DEBUG] 2022-02-16 00:18:37.532 [main] SimpleValueBinder - building SimpleValue for currency
[DEBUG] 2022-02-16 00:18:37.533 [main] PropertyBinder - Building property currency
[DEBUG] 2022-02-16 00:18:37.533 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='receiverAccount'}
[DEBUG] 2022-02-16 00:18:37.533 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(bankAccounts), mappingColumn=receivedTransactions, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.535 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(bankAccounts), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.542 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(bankAccounts), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.543 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(bankAccounts), mappingColumn=receivedTransactions_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.544 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='receivedTransactions_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2022-02-16 00:18:37.544 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='receiverAccount'}
[DEBUG] 2022-02-16 00:18:37.545 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='receiverAccount'}
[DEBUG] 2022-02-16 00:18:37.545 [main] CollectionBinder - Collection role: by.ganevich.entity.BankAccount.receivedTransactions
[DEBUG] 2022-02-16 00:18:37.547 [main] PropertyBinder - Building property receivedTransactions
[DEBUG] 2022-02-16 00:18:37.547 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='senderAccount'}
[DEBUG] 2022-02-16 00:18:37.547 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(bankAccounts), mappingColumn=sentTransactions, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.548 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(bankAccounts), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.548 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(bankAccounts), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.548 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(bankAccounts), mappingColumn=sentTransactions_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.548 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='sentTransactions_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2022-02-16 00:18:37.548 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='senderAccount'}
[DEBUG] 2022-02-16 00:18:37.548 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='senderAccount'}
[DEBUG] 2022-02-16 00:18:37.548 [main] CollectionBinder - Collection role: by.ganevich.entity.BankAccount.sentTransactions
[DEBUG] 2022-02-16 00:18:37.548 [main] PropertyBinder - Building property sentTransactions
[DEBUG] 2022-02-16 00:18:37.549 [main] AnnotationBinder - Binding entity from annotated class: by.ganevich.entity.Bank
[DEBUG] 2022-02-16 00:18:37.549 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-02-16 00:18:37.549 [main] EntityBinder - Import with entity name Bank
[DEBUG] 2022-02-16 00:18:37.549 [main] EntityBinder - Bind entity by.ganevich.entity.Bank on table banks
[DEBUG] 2022-02-16 00:18:37.550 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(banks), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.550 [main] ClassLoaderAccessImpl - Not known whether passed class name [by.ganevich.entity.Bank] is safe
[DEBUG] 2022-02-16 00:18:37.550 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : by.ganevich.entity.Bank
[DEBUG] 2022-02-16 00:18:37.550 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2022-02-16 00:18:37.550 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Bank:id]
[DEBUG] 2022-02-16 00:18:37.550 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2022-02-16 00:18:37.550 [main] PropertyBinder - Building property id
[DEBUG] 2022-02-16 00:18:37.550 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
[DEBUG] 2022-02-16 00:18:37.550 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='bankProducer'}
[DEBUG] 2022-02-16 00:18:37.550 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(banks), mappingColumn=bankAccounts, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.551 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(banks), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.551 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(banks), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.551 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(banks), mappingColumn=bankAccounts_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.551 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='bankAccounts_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2022-02-16 00:18:37.551 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='bankProducer'}
[DEBUG] 2022-02-16 00:18:37.551 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='bankProducer'}
[DEBUG] 2022-02-16 00:18:37.551 [main] CollectionBinder - Collection role: by.ganevich.entity.Bank.bankAccounts
[DEBUG] 2022-02-16 00:18:37.551 [main] PropertyBinder - Building property bankAccounts
[DEBUG] 2022-02-16 00:18:37.551 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(banks), mappingColumn=commission, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.551 [main] PropertyBinder - MetadataSourceProcessor property commission with lazy=false
[DEBUG] 2022-02-16 00:18:37.552 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Bank:commission]
[DEBUG] 2022-02-16 00:18:37.552 [main] SimpleValueBinder - building SimpleValue for commission
[DEBUG] 2022-02-16 00:18:37.552 [main] PropertyBinder - Building property commission
[DEBUG] 2022-02-16 00:18:37.552 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(banks), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.552 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2022-02-16 00:18:37.552 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Bank:name]
[DEBUG] 2022-02-16 00:18:37.552 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2022-02-16 00:18:37.552 [main] PropertyBinder - Building property name
[DEBUG] 2022-02-16 00:18:37.552 [main] AnnotationBinder - Binding entity from annotated class: by.ganevich.entity.Rate
[DEBUG] 2022-02-16 00:18:37.552 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-02-16 00:18:37.552 [main] EntityBinder - Import with entity name Rate
[DEBUG] 2022-02-16 00:18:37.553 [main] EntityBinder - Bind entity by.ganevich.entity.Rate on table exchangeRates
[DEBUG] 2022-02-16 00:18:37.553 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(exchangeRates), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.553 [main] ClassLoaderAccessImpl - Not known whether passed class name [by.ganevich.entity.Rate] is safe
[DEBUG] 2022-02-16 00:18:37.553 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : by.ganevich.entity.Rate
[DEBUG] 2022-02-16 00:18:37.553 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2022-02-16 00:18:37.553 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Rate:id]
[DEBUG] 2022-02-16 00:18:37.553 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2022-02-16 00:18:37.553 [main] PropertyBinder - Building property id
[DEBUG] 2022-02-16 00:18:37.554 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
[DEBUG] 2022-02-16 00:18:37.554 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(exchangeRates), mappingColumn=currency, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.554 [main] PropertyBinder - MetadataSourceProcessor property currency with lazy=false
[DEBUG] 2022-02-16 00:18:37.554 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Rate:currency]
[DEBUG] 2022-02-16 00:18:37.554 [main] SimpleValueBinder - building SimpleValue for currency
[DEBUG] 2022-02-16 00:18:37.554 [main] PropertyBinder - Building property currency
[DEBUG] 2022-02-16 00:18:37.554 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(exchangeRates), mappingColumn=rate, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.554 [main] PropertyBinder - MetadataSourceProcessor property rate with lazy=false
[DEBUG] 2022-02-16 00:18:37.554 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Rate:rate]
[DEBUG] 2022-02-16 00:18:37.554 [main] SimpleValueBinder - building SimpleValue for rate
[DEBUG] 2022-02-16 00:18:37.554 [main] PropertyBinder - Building property rate
[DEBUG] 2022-02-16 00:18:37.554 [main] AnnotationBinder - Binding entity from annotated class: by.ganevich.entity.Client
[DEBUG] 2022-02-16 00:18:37.554 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-02-16 00:18:37.555 [main] EntityBinder - Import with entity name Client
[DEBUG] 2022-02-16 00:18:37.555 [main] EntityBinder - Bind entity by.ganevich.entity.Client on table clients
[DEBUG] 2022-02-16 00:18:37.556 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.556 [main] ClassLoaderAccessImpl - Not known whether passed class name [by.ganevich.entity.Client] is safe
[DEBUG] 2022-02-16 00:18:37.556 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : by.ganevich.entity.Client
[DEBUG] 2022-02-16 00:18:37.556 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2022-02-16 00:18:37.556 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Client:id]
[DEBUG] 2022-02-16 00:18:37.557 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2022-02-16 00:18:37.557 [main] PropertyBinder - Building property id
[DEBUG] 2022-02-16 00:18:37.557 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
[DEBUG] 2022-02-16 00:18:37.557 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='accountOwner'}
[DEBUG] 2022-02-16 00:18:37.557 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=bankAccounts, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.557 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.557 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.557 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=bankAccounts_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.558 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='bankAccounts_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2022-02-16 00:18:37.558 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='accountOwner'}
[DEBUG] 2022-02-16 00:18:37.558 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='accountOwner'}
[DEBUG] 2022-02-16 00:18:37.558 [main] CollectionBinder - Collection role: by.ganevich.entity.Client.bankAccounts
[DEBUG] 2022-02-16 00:18:37.558 [main] PropertyBinder - Building property bankAccounts
[DEBUG] 2022-02-16 00:18:37.558 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.558 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2022-02-16 00:18:37.558 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Client:name]
[DEBUG] 2022-02-16 00:18:37.559 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2022-02-16 00:18:37.559 [main] PropertyBinder - Building property name
[DEBUG] 2022-02-16 00:18:37.559 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='sender'}
[DEBUG] 2022-02-16 00:18:37.559 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=sentTransactions, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.559 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.559 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.560 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=sentTransactions_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.560 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='sentTransactions_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2022-02-16 00:18:37.560 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='sender'}
[DEBUG] 2022-02-16 00:18:37.560 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='sender'}
[DEBUG] 2022-02-16 00:18:37.560 [main] CollectionBinder - Collection role: by.ganevich.entity.Client.sentTransactions
[DEBUG] 2022-02-16 00:18:37.560 [main] PropertyBinder - Building property sentTransactions
[DEBUG] 2022-02-16 00:18:37.560 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=type, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-02-16 00:18:37.561 [main] PropertyBinder - MetadataSourceProcessor property type with lazy=false
[DEBUG] 2022-02-16 00:18:37.561 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [by.ganevich.entity.Client:type]
[DEBUG] 2022-02-16 00:18:37.561 [main] SimpleValueBinder - building SimpleValue for type
[DEBUG] 2022-02-16 00:18:37.561 [main] PropertyBinder - Building property type
[DEBUG] 2022-02-16 00:18:37.563 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2022-02-16 00:18:37.563 [main] SimpleValueBinder - Starting fillSimpleValue for clientType
[DEBUG] 2022-02-16 00:18:37.563 [main] SimpleValueBinder - Starting fillSimpleValue for commission
[DEBUG] 2022-02-16 00:18:37.563 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2022-02-16 00:18:37.563 [main] SimpleValueBinder - Starting fillSimpleValue for amountOfMoney
[DEBUG] 2022-02-16 00:18:37.563 [main] SimpleValueBinder - Starting fillSimpleValue for date
[DEBUG] 2022-02-16 00:18:37.563 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2022-02-16 00:18:37.563 [main] SimpleValueBinder - Starting fillSimpleValue for amountOfMoney
[DEBUG] 2022-02-16 00:18:37.563 [main] SimpleValueBinder - Starting fillSimpleValue for currency
[DEBUG] 2022-02-16 00:18:37.564 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2022-02-16 00:18:37.564 [main] SimpleValueBinder - Starting fillSimpleValue for commission
[DEBUG] 2022-02-16 00:18:37.564 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2022-02-16 00:18:37.565 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2022-02-16 00:18:37.565 [main] SimpleValueBinder - Starting fillSimpleValue for currency
[DEBUG] 2022-02-16 00:18:37.565 [main] SimpleValueBinder - Starting fillSimpleValue for rate
[DEBUG] 2022-02-16 00:18:37.565 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2022-02-16 00:18:37.565 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2022-02-16 00:18:37.565 [main] SimpleValueBinder - Starting fillSimpleValue for type
[DEBUG] 2022-02-16 00:18:37.569 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [commissionforclients]
[DEBUG] 2022-02-16 00:18:37.569 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [transactions]
[DEBUG] 2022-02-16 00:18:37.569 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [bankaccounts]
[DEBUG] 2022-02-16 00:18:37.569 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [banks]
[DEBUG] 2022-02-16 00:18:37.569 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [exchangerates]
[DEBUG] 2022-02-16 00:18:37.569 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
[DEBUG] 2022-02-16 00:18:37.569 [main] CollectionSecondPass - Second pass for collection: by.ganevich.entity.BankAccount.receivedTransactions
[DEBUG] 2022-02-16 00:18:37.570 [main] CollectionBinder - Binding a OneToMany: by.ganevich.entity.BankAccount.receivedTransactions through a foreign key
[DEBUG] 2022-02-16 00:18:37.570 [main] CollectionBinder - Mapping collection: by.ganevich.entity.BankAccount.receivedTransactions -> transactions
[DEBUG] 2022-02-16 00:18:37.572 [main] TableBinder - Retrieving property by.ganevich.entity.Transaction.receiverAccount
[DEBUG] 2022-02-16 00:18:37.572 [main] CollectionSecondPass - Mapped collection key: recipientAccountId, one-to-many: by.ganevich.entity.Transaction
[DEBUG] 2022-02-16 00:18:37.572 [main] CollectionSecondPass - Second pass for collection: by.ganevich.entity.BankAccount.sentTransactions
[DEBUG] 2022-02-16 00:18:37.573 [main] CollectionBinder - Binding a OneToMany: by.ganevich.entity.BankAccount.sentTransactions through a foreign key
[DEBUG] 2022-02-16 00:18:37.573 [main] CollectionBinder - Mapping collection: by.ganevich.entity.BankAccount.sentTransactions -> transactions
[DEBUG] 2022-02-16 00:18:37.573 [main] TableBinder - Retrieving property by.ganevich.entity.Transaction.senderAccount
[DEBUG] 2022-02-16 00:18:37.573 [main] CollectionSecondPass - Mapped collection key: senderAccountId, one-to-many: by.ganevich.entity.Transaction
[DEBUG] 2022-02-16 00:18:37.573 [main] CollectionSecondPass - Second pass for collection: by.ganevich.entity.Bank.bankAccounts
[DEBUG] 2022-02-16 00:18:37.573 [main] CollectionBinder - Binding a OneToMany: by.ganevich.entity.Bank.bankAccounts through a foreign key
[DEBUG] 2022-02-16 00:18:37.573 [main] CollectionBinder - Mapping collection: by.ganevich.entity.Bank.bankAccounts -> bankAccounts
[DEBUG] 2022-02-16 00:18:37.573 [main] TableBinder - Retrieving property by.ganevich.entity.BankAccount.bankProducer
[DEBUG] 2022-02-16 00:18:37.573 [main] CollectionSecondPass - Mapped collection key: bankId, one-to-many: by.ganevich.entity.BankAccount
[DEBUG] 2022-02-16 00:18:37.573 [main] CollectionSecondPass - Second pass for collection: by.ganevich.entity.Client.bankAccounts
[DEBUG] 2022-02-16 00:18:37.573 [main] CollectionBinder - Binding a OneToMany: by.ganevich.entity.Client.bankAccounts through a foreign key
[DEBUG] 2022-02-16 00:18:37.573 [main] CollectionBinder - Mapping collection: by.ganevich.entity.Client.bankAccounts -> bankAccounts
[DEBUG] 2022-02-16 00:18:37.573 [main] TableBinder - Retrieving property by.ganevich.entity.BankAccount.accountOwner
[DEBUG] 2022-02-16 00:18:37.573 [main] CollectionSecondPass - Mapped collection key: clientId, one-to-many: by.ganevich.entity.BankAccount
[DEBUG] 2022-02-16 00:18:37.574 [main] CollectionSecondPass - Second pass for collection: by.ganevich.entity.Client.sentTransactions
[DEBUG] 2022-02-16 00:18:37.574 [main] CollectionBinder - Binding a OneToMany: by.ganevich.entity.Client.sentTransactions through a foreign key
[DEBUG] 2022-02-16 00:18:37.574 [main] CollectionBinder - Mapping collection: by.ganevich.entity.Client.sentTransactions -> transactions
[DEBUG] 2022-02-16 00:18:37.574 [main] TableBinder - Retrieving property by.ganevich.entity.Transaction.sender
[DEBUG] 2022-02-16 00:18:37.574 [main] CollectionSecondPass - Mapped collection key: sender, one-to-many: by.ganevich.entity.Transaction
[DEBUG] 2022-02-16 00:18:37.574 [main] InFlightMetadataCollectorImpl - Resolving reference to class: by.ganevich.entity.Client
[DEBUG] 2022-02-16 00:18:37.576 [main] InFlightMetadataCollectorImpl - Resolving reference to class: by.ganevich.entity.Bank
[DEBUG] 2022-02-16 00:18:37.576 [main] InFlightMetadataCollectorImpl - Resolving reference to class: by.ganevich.entity.BankAccount
[DEBUG] 2022-02-16 00:18:37.576 [main] InFlightMetadataCollectorImpl - Resolving reference to class: by.ganevich.entity.Client
[DEBUG] 2022-02-16 00:18:37.576 [main] InFlightMetadataCollectorImpl - Resolving reference to class: by.ganevich.entity.BankAccount
[DEBUG] 2022-02-16 00:18:37.577 [main] InFlightMetadataCollectorImpl - Resolving reference to class: by.ganevich.entity.Client
[DEBUG] 2022-02-16 00:18:37.578 [main] InFlightMetadataCollectorImpl - Resolving reference to class: by.ganevich.entity.Bank
[DEBUG] 2022-02-16 00:18:37.578 [main] InFlightMetadataCollectorImpl - Resolving reference to class: by.ganevich.entity.BankAccount
[DEBUG] 2022-02-16 00:18:37.578 [main] InFlightMetadataCollectorImpl - Resolving reference to class: by.ganevich.entity.Client
[DEBUG] 2022-02-16 00:18:37.578 [main] InFlightMetadataCollectorImpl - Resolving reference to class: by.ganevich.entity.BankAccount
[DEBUG] 2022-02-16 00:18:37.613 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - SessionFactory name : null
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - Statistics: disabled
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - Default entity-mode: pojo
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - Default batch fetch size: -1
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - Maximum outer join fetch depth: null
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - Default null ordering: NONE
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - Query language substitutions: {}
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - Named query checking : enabled
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - Second-level cache: disabled
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - Second-level query cache: disabled
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - Second-level query cache factory: null
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - JDBC batch size: 15
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - Wrap result sets: disabled
[DEBUG] 2022-02-16 00:18:37.614 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2022-02-16 00:18:37.615 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2022-02-16 00:18:37.615 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2022-02-16 00:18:37.615 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2022-02-16 00:18:37.615 [main] Settings - JPA compliance - query : disabled
[DEBUG] 2022-02-16 00:18:37.615 [main] Settings - JPA compliance - closed-handling : disabled
[DEBUG] 2022-02-16 00:18:37.615 [main] Settings - JPA compliance - lists : disabled
[DEBUG] 2022-02-16 00:18:37.615 [main] Settings - JPA compliance - transactions : disabled
[DEBUG] 2022-02-16 00:18:37.663 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-02-16 00:18:37.664 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-02-16 00:18:37.679 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2022-02-16 00:18:37.679 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\Program Files\Java\jdk1.8.0_291\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\rt.jar;D:\JavaProjects\intexsoft-test-task\target\classes;C:\Users\user\.m2\repository\org\postgresql\postgresql\42.3.1\postgresql-42.3.1.jar;C:\Users\user\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\user\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\user\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\user\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\user\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\user\.m2\repository\org\springframework\spring-jdbc\5.3.14\spring-jdbc-5.3.14.jar;C:\Users\user\.m2\repository\org\springframework\spring-beans\5.3.14\spring-beans-5.3.14.jar;C:\Users\user\.m2\repository\org\springframework\spring-core\5.3.14\spring-core-5.3.14.jar;C:\Users\user\.m2\repository\org\springframework\spring-jcl\5.3.14\spring-jcl-5.3.14.jar;C:\Users\user\.m2\repository\org\springframework\spring-tx\5.3.14\spring-tx-5.3.14.jar;C:\Users\user\.m2\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;C:\Users\user\.m2\repository\org\hibernate\hibernate-core\5.6.3.Final\hibernate-core-5.6.3.Final.jar;C:\Users\user\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\user\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\user\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\user\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\user\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\user\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\user\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\user\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\user\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\user\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\user\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\user\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\user\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\user\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\user\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\user\.m2\repository\org\springframework\data\spring-data-jpa\2.6.0\spring-data-jpa-2.6.0.jar;C:\Users\user\.m2\repository\org\springframework\data\spring-data-commons\2.6.0\spring-data-commons-2.6.0.jar;C:\Users\user\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\user\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\user\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\user\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;D:\IntelliJ IDEA 2021.1\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=org.springframework.jdbc.datasource.DriverManagerDataSource@73cd37c0, user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_291\jre\bin, sun.java.command=by.ganevich.Application, javax.persistence.nonJtaDataSource=org.springframework.jdbc.datasource.DriverManagerDataSource@73cd37c0, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_291\jre, file.separator=\, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_291\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_291\jre\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_291-b10, user.name=user, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\user\AppData\Local\Temp\, java.version=1.8.0_291, user.dir=D:\JavaProjects\intexsoft-test-task, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@771d1ffb, java.library.path=C:\Program Files\Java\jdk1.8.0_291\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;D:\Git\cmd;C:\Program Files\nodejs\;C:\Program Files\Java\jdk-16.0.1;C:\Program Files (x86)\GitExtensions\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\.dotnet\tools;D:\Visual Studio Code\Microsoft VS Code\bin;C:\Users\user\AppData\Roaming\npm;D:\Maven\apache-maven-3.8.1\bin;C:\Program Files\heroku\bin;C:\Program Files\Java\jre1.8.0_291\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.291-b10, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@73cd37c0, java.class.version=52.0}
[DEBUG] 2022-02-16 00:18:37.694 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2022-02-16 00:18:37.698 [main] EnumType - Using ORDINAL-based conversion for Enum by.ganevich.entity.Currency
[DEBUG] 2022-02-16 00:18:37.699 [main] EnumType - Using ORDINAL-based conversion for Enum by.ganevich.entity.ClientType
[DEBUG] 2022-02-16 00:18:37.700 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2022-02-16 00:18:37.700 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27b22f74] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@58ec7116]
[DEBUG] 2022-02-16 00:18:37.751 [main] ClassLoaderAccessImpl - Not known whether passed class name [by.ganevich.entity.Commission] is safe
[DEBUG] 2022-02-16 00:18:37.751 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : by.ganevich.entity.Commission
[DEBUG] 2022-02-16 00:18:38.048 [main] interceptor - To-one property `by.ganevich.entity.Transaction#receiverAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:18:38.051 [main] interceptor - To-one property `by.ganevich.entity.Transaction#receiverAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:18:38.051 [main] interceptor - To-one property `by.ganevich.entity.Transaction#sender` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:18:38.051 [main] interceptor - To-one property `by.ganevich.entity.Transaction#sender` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:18:38.051 [main] interceptor - To-one property `by.ganevich.entity.Transaction#senderAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:18:38.051 [main] interceptor - To-one property `by.ganevich.entity.Transaction#senderAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:18:38.051 [main] ClassLoaderAccessImpl - Not known whether passed class name [by.ganevich.entity.Transaction] is safe
[DEBUG] 2022-02-16 00:18:38.051 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : by.ganevich.entity.Transaction
[DEBUG] 2022-02-16 00:18:38.064 [main] interceptor - To-one property `by.ganevich.entity.Transaction#receiverAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:18:38.064 [main] interceptor - To-one property `by.ganevich.entity.Transaction#sender` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:18:38.064 [main] interceptor - To-one property `by.ganevich.entity.Transaction#senderAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:18:38.064 [main] interceptor - To-one property `by.ganevich.entity.Transaction#receiverAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:18:38.064 [main] interceptor - To-one property `by.ganevich.entity.Transaction#sender` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:18:38.064 [main] interceptor - To-one property `by.ganevich.entity.Transaction#senderAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:18:38.065 [main] interceptor - To-one property `by.ganevich.entity.BankAccount#accountOwner` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:18:38.065 [main] interceptor - To-one property `by.ganevich.entity.BankAccount#accountOwner` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:18:38.065 [main] interceptor - To-one property `by.ganevich.entity.BankAccount#bankProducer` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:18:38.065 [main] interceptor - To-one property `by.ganevich.entity.BankAccount#bankProducer` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:18:38.066 [main] ClassLoaderAccessImpl - Not known whether passed class name [by.ganevich.entity.BankAccount] is safe
[DEBUG] 2022-02-16 00:18:38.066 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : by.ganevich.entity.BankAccount
[DEBUG] 2022-02-16 00:18:38.081 [main] interceptor - To-one property `by.ganevich.entity.BankAccount#accountOwner` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:18:38.081 [main] interceptor - To-one property `by.ganevich.entity.BankAccount#bankProducer` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:18:38.081 [main] interceptor - To-one property `by.ganevich.entity.BankAccount#accountOwner` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:18:38.082 [main] interceptor - To-one property `by.ganevich.entity.BankAccount#bankProducer` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2022-02-16 00:18:38.082 [main] ClassLoaderAccessImpl - Not known whether passed class name [by.ganevich.entity.Bank] is safe
[DEBUG] 2022-02-16 00:18:38.082 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : by.ganevich.entity.Bank
[DEBUG] 2022-02-16 00:18:38.090 [main] ClassLoaderAccessImpl - Not known whether passed class name [by.ganevich.entity.Rate] is safe
[DEBUG] 2022-02-16 00:18:38.090 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : by.ganevich.entity.Rate
[DEBUG] 2022-02-16 00:18:38.098 [main] ClassLoaderAccessImpl - Not known whether passed class name [by.ganevich.entity.Client] is safe
[DEBUG] 2022-02-16 00:18:38.098 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : by.ganevich.entity.Client
[DEBUG] 2022-02-16 00:18:38.116 [main] AbstractCollectionPersister - Static SQL for collection: by.ganevich.entity.BankAccount.sentTransactions
[DEBUG] 2022-02-16 00:18:38.116 [main] AbstractCollectionPersister -  Row insert: update transactions set senderAccountId=? where id=?
[DEBUG] 2022-02-16 00:18:38.116 [main] AbstractCollectionPersister -  Row update: update transactions set  where id=?
[DEBUG] 2022-02-16 00:18:38.116 [main] AbstractCollectionPersister -  Row delete: update transactions set senderAccountId=null where senderAccountId=? and id=?
[DEBUG] 2022-02-16 00:18:38.116 [main] AbstractCollectionPersister -  One-shot delete: update transactions set senderAccountId=null where senderAccountId=?
[DEBUG] 2022-02-16 00:18:38.116 [main] AbstractCollectionPersister - Static SQL for collection: by.ganevich.entity.BankAccount.receivedTransactions
[DEBUG] 2022-02-16 00:18:38.116 [main] AbstractCollectionPersister -  Row insert: update transactions set recipientAccountId=? where id=?
[DEBUG] 2022-02-16 00:18:38.116 [main] AbstractCollectionPersister -  Row update: update transactions set  where id=?
[DEBUG] 2022-02-16 00:18:38.116 [main] AbstractCollectionPersister -  Row delete: update transactions set recipientAccountId=null where recipientAccountId=? and id=?
[DEBUG] 2022-02-16 00:18:38.116 [main] AbstractCollectionPersister -  One-shot delete: update transactions set recipientAccountId=null where recipientAccountId=?
[DEBUG] 2022-02-16 00:18:38.116 [main] AbstractCollectionPersister - Static SQL for collection: by.ganevich.entity.Bank.bankAccounts
[DEBUG] 2022-02-16 00:18:38.116 [main] AbstractCollectionPersister -  Row insert: update bankAccounts set bankId=? where id=?
[DEBUG] 2022-02-16 00:18:38.116 [main] AbstractCollectionPersister -  Row update: update bankAccounts set  where id=?
[DEBUG] 2022-02-16 00:18:38.116 [main] AbstractCollectionPersister -  Row delete: update bankAccounts set bankId=null where bankId=? and id=?
[DEBUG] 2022-02-16 00:18:38.116 [main] AbstractCollectionPersister -  One-shot delete: update bankAccounts set bankId=null where bankId=?
[DEBUG] 2022-02-16 00:18:38.116 [main] AbstractCollectionPersister - Static SQL for collection: by.ganevich.entity.Client.sentTransactions
[DEBUG] 2022-02-16 00:18:38.116 [main] AbstractCollectionPersister -  Row insert: update transactions set sender=? where id=?
[DEBUG] 2022-02-16 00:18:38.116 [main] AbstractCollectionPersister -  Row update: update transactions set  where id=?
[DEBUG] 2022-02-16 00:18:38.116 [main] AbstractCollectionPersister -  Row delete: update transactions set sender=null where sender=? and id=?
[DEBUG] 2022-02-16 00:18:38.116 [main] AbstractCollectionPersister -  One-shot delete: update transactions set sender=null where sender=?
[DEBUG] 2022-02-16 00:18:38.117 [main] AbstractCollectionPersister - Static SQL for collection: by.ganevich.entity.Client.bankAccounts
[DEBUG] 2022-02-16 00:18:38.117 [main] AbstractCollectionPersister -  Row insert: update bankAccounts set clientId=? where id=?
[DEBUG] 2022-02-16 00:18:38.117 [main] AbstractCollectionPersister -  Row update: update bankAccounts set  where id=?
[DEBUG] 2022-02-16 00:18:38.117 [main] AbstractCollectionPersister -  Row delete: update bankAccounts set clientId=null where clientId=? and id=?
[DEBUG] 2022-02-16 00:18:38.117 [main] AbstractCollectionPersister -  One-shot delete: update bankAccounts set clientId=null where clientId=?
[DEBUG] 2022-02-16 00:18:38.121 [main] AbstractEntityPersister - Static SQL for entity: by.ganevich.entity.Commission
[DEBUG] 2022-02-16 00:18:38.121 [main] AbstractEntityPersister -  Version select: select id from commissionForClients where id =?
[DEBUG] 2022-02-16 00:18:38.121 [main] AbstractEntityPersister -  Snapshot select: select commission_.id, commission_.clientType as clientty2_3_, commission_.commission as commissi3_3_ from commissionForClients commission_ where commission_.id=?
[DEBUG] 2022-02-16 00:18:38.121 [main] AbstractEntityPersister -  Insert 0: insert into commissionForClients (clientType, commission, id) values (?, ?, ?)
[DEBUG] 2022-02-16 00:18:38.121 [main] AbstractEntityPersister -  Update 0: update commissionForClients set clientType=?, commission=? where id=?
[DEBUG] 2022-02-16 00:18:38.122 [main] AbstractEntityPersister -  Delete 0: delete from commissionForClients where id=?
[DEBUG] 2022-02-16 00:18:38.122 [main] AbstractEntityPersister -  Identity insert: insert into commissionForClients (clientType, commission) values (?, ?)
[DEBUG] 2022-02-16 00:18:38.140 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44032fde]
[DEBUG] 2022-02-16 00:18:38.141 [main] MetamodelGraphWalker - Visiting attribute path : clientType
[DEBUG] 2022-02-16 00:18:38.141 [main] MetamodelGraphWalker - Visiting attribute path : commission
[DEBUG] 2022-02-16 00:18:38.141 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-02-16 00:18:38.150 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-02-16 00:18:38.153 [main] LoadPlanTreePrinter - LoadPlan(entity=by.ganevich.entity.Commission)
    - Returns
       - EntityReturnImpl(entity=by.ganevich.entity.Commission, querySpaceUid=<gen:0>, path=by.ganevich.entity.Commission)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=by.ganevich.entity.Commission)
          - SQL table alias mapping - commission0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

[DEBUG] 2022-02-16 00:18:38.155 [main] EntityLoader - Static select for entity by.ganevich.entity.Commission [NONE]: select commission0_.id as id1_3_0_, commission0_.clientType as clientty2_3_0_, commission0_.commission as commissi3_3_0_ from commissionForClients commission0_ where commission0_.id=?
[DEBUG] 2022-02-16 00:18:38.155 [main] AbstractEntityPersister - Static SQL for entity: by.ganevich.entity.Transaction
[DEBUG] 2022-02-16 00:18:38.155 [main] AbstractEntityPersister -  Version select: select id from transactions where id =?
[DEBUG] 2022-02-16 00:18:38.155 [main] AbstractEntityPersister -  Snapshot select: select transactio_.id, transactio_.amountofmoney as amountof2_5_, transactio_.date as date3_5_, transactio_.recipientAccountId as recipien4_5_, transactio_.sender as sender5_5_, transactio_.senderAccountId as senderac6_5_ from transactions transactio_ where transactio_.id=?
[DEBUG] 2022-02-16 00:18:38.155 [main] AbstractEntityPersister -  Insert 0: insert into transactions (amountofmoney, date, recipientAccountId, sender, senderAccountId, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2022-02-16 00:18:38.155 [main] AbstractEntityPersister -  Update 0: update transactions set amountofmoney=?, date=?, recipientAccountId=?, sender=?, senderAccountId=? where id=?
[DEBUG] 2022-02-16 00:18:38.155 [main] AbstractEntityPersister -  Delete 0: delete from transactions where id=?
[DEBUG] 2022-02-16 00:18:38.155 [main] AbstractEntityPersister -  Identity insert: insert into transactions (amountofmoney, date, recipientAccountId, sender, senderAccountId) values (?, ?, ?, ?, ?)
[DEBUG] 2022-02-16 00:18:38.155 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6920b0bc]
[DEBUG] 2022-02-16 00:18:38.155 [main] MetamodelGraphWalker - Visiting attribute path : amountOfMoney
[DEBUG] 2022-02-16 00:18:38.155 [main] MetamodelGraphWalker - Visiting attribute path : date
[DEBUG] 2022-02-16 00:18:38.155 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount
[DEBUG] 2022-02-16 00:18:38.158 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2abe9173]
[DEBUG] 2022-02-16 00:18:38.159 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner
[DEBUG] 2022-02-16 00:18:38.160 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bd6ba24]
[DEBUG] 2022-02-16 00:18:38.160 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.bankAccounts
[DEBUG] 2022-02-16 00:18:38.160 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.accountOwner.bankAccounts
[DEBUG] 2022-02-16 00:18:38.160 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.name
[DEBUG] 2022-02-16 00:18:38.160 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions
[DEBUG] 2022-02-16 00:18:38.160 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22ebccb9]
[DEBUG] 2022-02-16 00:18:38.161 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58867cd5]
[DEBUG] 2022-02-16 00:18:38.162 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions.amountOfMoney
[DEBUG] 2022-02-16 00:18:38.162 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions.date
[DEBUG] 2022-02-16 00:18:38.163 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions.receiverAccount
[DEBUG] 2022-02-16 00:18:38.163 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.accountOwner.sentTransactions.receiverAccount
[DEBUG] 2022-02-16 00:18:38.163 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions.sender
[DEBUG] 2022-02-16 00:18:38.163 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.accountOwner.sentTransactions.sender
[DEBUG] 2022-02-16 00:18:38.163 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions.senderAccount
[DEBUG] 2022-02-16 00:18:38.163 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d78f3d5]
[DEBUG] 2022-02-16 00:18:38.163 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions.senderAccount.accountOwner
[DEBUG] 2022-02-16 00:18:38.163 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.accountOwner.sentTransactions.senderAccount.accountOwner
[DEBUG] 2022-02-16 00:18:38.163 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions.senderAccount.amountOfMoney
[DEBUG] 2022-02-16 00:18:38.163 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions.senderAccount.bankProducer
[DEBUG] 2022-02-16 00:18:38.163 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f5b6e78]
[DEBUG] 2022-02-16 00:18:38.163 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions.senderAccount.bankProducer.bankAccounts
[DEBUG] 2022-02-16 00:18:38.163 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.accountOwner.sentTransactions.senderAccount.bankProducer.bankAccounts
[DEBUG] 2022-02-16 00:18:38.163 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions.senderAccount.bankProducer.commission
[DEBUG] 2022-02-16 00:18:38.163 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions.senderAccount.bankProducer.name
[DEBUG] 2022-02-16 00:18:38.164 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions.senderAccount.currency
[DEBUG] 2022-02-16 00:18:38.164 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions.senderAccount.receivedTransactions
[DEBUG] 2022-02-16 00:18:38.164 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.accountOwner.sentTransactions.senderAccount.receivedTransactions
[DEBUG] 2022-02-16 00:18:38.164 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions.senderAccount.sentTransactions
[DEBUG] 2022-02-16 00:18:38.164 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.accountOwner.sentTransactions.senderAccount.sentTransactions
[DEBUG] 2022-02-16 00:18:38.164 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.type
[DEBUG] 2022-02-16 00:18:38.164 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.amountOfMoney
[DEBUG] 2022-02-16 00:18:38.164 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.bankProducer
[DEBUG] 2022-02-16 00:18:38.164 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.bankProducer
[DEBUG] 2022-02-16 00:18:38.164 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.currency
[DEBUG] 2022-02-16 00:18:38.164 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.receivedTransactions
[DEBUG] 2022-02-16 00:18:38.164 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.receivedTransactions
[DEBUG] 2022-02-16 00:18:38.164 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.sentTransactions
[DEBUG] 2022-02-16 00:18:38.164 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.sentTransactions
[DEBUG] 2022-02-16 00:18:38.164 [main] MetamodelGraphWalker - Visiting attribute path : sender
[DEBUG] 2022-02-16 00:18:38.164 [main] MetamodelGraphWalker - Property path deemed to be circular : sender
[DEBUG] 2022-02-16 00:18:38.164 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount
[DEBUG] 2022-02-16 00:18:38.164 [main] MetamodelGraphWalker - Property path deemed to be circular : senderAccount
[DEBUG] 2022-02-16 00:18:38.164 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-02-16 00:18:38.164 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-02-16 00:18:38.167 [main] LoadPlanTreePrinter - LoadPlan(entity=by.ganevich.entity.Transaction)
    - Returns
       - EntityReturnImpl(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:0>, path=by.ganevich.entity.Transaction)
          - EntityAttributeFetchImpl(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:1>, path=by.ganevich.entity.Transaction.receiverAccount)
             - EntityAttributeFetchImpl(entity=by.ganevich.entity.Client, querySpaceUid=<gen:2>, path=by.ganevich.entity.Transaction.receiverAccount.accountOwner)
                - CollectionAttributeFetchImpl(collection=by.ganevich.entity.Client.sentTransactions, querySpaceUid=<gen:3>, path=by.ganevich.entity.Transaction.receiverAccount.accountOwner.sentTransactions)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:4>, path=by.ganevich.entity.Transaction.receiverAccount.accountOwner.sentTransactions.<elements>)
                      - EntityAttributeFetchImpl(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:5>, path=by.ganevich.entity.Transaction.receiverAccount.accountOwner.sentTransactions.<elements>.senderAccount)
                         - EntityAttributeFetchImpl(entity=by.ganevich.entity.Bank, querySpaceUid=<gen:6>, path=by.ganevich.entity.Transaction.receiverAccount.accountOwner.sentTransactions.<elements>.senderAccount.bankProducer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=by.ganevich.entity.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}
          - JOIN (JoinDefinedByMetadata(receiverAccount)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=by.ganevich.entity.BankAccount)
                - SQL table alias mapping - bankaccoun1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(accountOwner)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=by.ganevich.entity.Client)
                      - SQL table alias mapping - client2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                      - JOIN (JoinDefinedByMetadata(sentTransactions)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=by.ganevich.entity.Client.sentTransactions)
                            - SQL table alias mapping - senttransa3_
                            - alias suffix - 3_
                            - suffixed key columns - {sender5_5_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_5_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=by.ganevich.entity.Transaction)
                                  - SQL table alias mapping - senttransa3_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_5_4_}
                                  - JOIN (JoinDefinedByMetadata(senderAccount)) : <gen:4> -> <gen:5>
                                     - EntityQuerySpaceImpl(uid=<gen:5>, entity=by.ganevich.entity.BankAccount)
                                        - SQL table alias mapping - bankaccoun4_
                                        - alias suffix - 5_
                                        - suffixed key columns - {id1_0_5_}
                                        - JOIN (JoinDefinedByMetadata(bankProducer)) : <gen:5> -> <gen:6>
                                           - EntityQuerySpaceImpl(uid=<gen:6>, entity=by.ganevich.entity.Bank)
                                              - SQL table alias mapping - bank5_
                                              - alias suffix - 6_
                                              - suffixed key columns - {id1_1_6_}

[DEBUG] 2022-02-16 00:18:38.168 [main] EntityLoader - Static select for entity by.ganevich.entity.Transaction [NONE]: select transactio0_.id as id1_5_0_, transactio0_.amountofmoney as amountof2_5_0_, transactio0_.date as date3_5_0_, transactio0_.recipientAccountId as recipien4_5_0_, transactio0_.sender as sender5_5_0_, transactio0_.senderAccountId as senderac6_5_0_, bankaccoun1_.id as id1_0_1_, bankaccoun1_.clientId as clientid4_0_1_, bankaccoun1_.ammountOfMoney as ammounto2_0_1_, bankaccoun1_.bankId as bankid5_0_1_, bankaccoun1_.currency as currency3_0_1_, client2_.id as id1_2_2_, client2_.name as name2_2_2_, client2_.type as type3_2_2_, senttransa3_.sender as sender5_5_3_, senttransa3_.id as id1_5_3_, senttransa3_.id as id1_5_4_, senttransa3_.amountofmoney as amountof2_5_4_, senttransa3_.date as date3_5_4_, senttransa3_.recipientAccountId as recipien4_5_4_, senttransa3_.sender as sender5_5_4_, senttransa3_.senderAccountId as senderac6_5_4_, bankaccoun4_.id as id1_0_5_, bankaccoun4_.clientId as clientid4_0_5_, bankaccoun4_.ammountOfMoney as ammounto2_0_5_, bankaccoun4_.bankId as bankid5_0_5_, bankaccoun4_.currency as currency3_0_5_, bank5_.id as id1_1_6_, bank5_.commission as commissi2_1_6_, bank5_.name as name3_1_6_ from transactions transactio0_ left outer join bankAccounts bankaccoun1_ on transactio0_.recipientAccountId=bankaccoun1_.id left outer join clients client2_ on bankaccoun1_.clientId=client2_.id left outer join transactions senttransa3_ on client2_.id=senttransa3_.sender left outer join bankAccounts bankaccoun4_ on senttransa3_.senderAccountId=bankaccoun4_.id left outer join banks bank5_ on bankaccoun4_.bankId=bank5_.id where transactio0_.id=?
[DEBUG] 2022-02-16 00:18:38.168 [main] AbstractEntityPersister - Static SQL for entity: by.ganevich.entity.BankAccount
[DEBUG] 2022-02-16 00:18:38.168 [main] AbstractEntityPersister -  Version select: select id from bankAccounts where id =?
[DEBUG] 2022-02-16 00:18:38.168 [main] AbstractEntityPersister -  Snapshot select: select bankaccoun_.id, bankaccoun_.clientId as clientid4_0_, bankaccoun_.ammountOfMoney as ammounto2_0_, bankaccoun_.bankId as bankid5_0_, bankaccoun_.currency as currency3_0_ from bankAccounts bankaccoun_ where bankaccoun_.id=?
[DEBUG] 2022-02-16 00:18:38.168 [main] AbstractEntityPersister -  Insert 0: insert into bankAccounts (clientId, ammountOfMoney, bankId, currency, id) values (?, ?, ?, ?, ?)
[DEBUG] 2022-02-16 00:18:38.168 [main] AbstractEntityPersister -  Update 0: update bankAccounts set clientId=?, ammountOfMoney=?, bankId=?, currency=? where id=?
[DEBUG] 2022-02-16 00:18:38.168 [main] AbstractEntityPersister -  Delete 0: delete from bankAccounts where id=?
[DEBUG] 2022-02-16 00:18:38.168 [main] AbstractEntityPersister -  Identity insert: insert into bankAccounts (clientId, ammountOfMoney, bankId, currency) values (?, ?, ?, ?)
[DEBUG] 2022-02-16 00:18:38.168 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70211df5]
[DEBUG] 2022-02-16 00:18:38.168 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner
[DEBUG] 2022-02-16 00:18:38.168 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38e7ed69]
[DEBUG] 2022-02-16 00:18:38.168 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.bankAccounts
[DEBUG] 2022-02-16 00:18:38.168 [main] MetamodelGraphWalker - Property path deemed to be circular : accountOwner.bankAccounts
[DEBUG] 2022-02-16 00:18:38.168 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.name
[DEBUG] 2022-02-16 00:18:38.168 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions
[DEBUG] 2022-02-16 00:18:38.168 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@78b612c6]
[DEBUG] 2022-02-16 00:18:38.168 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@257e0827]
[DEBUG] 2022-02-16 00:18:38.168 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.amountOfMoney
[DEBUG] 2022-02-16 00:18:38.168 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.date
[DEBUG] 2022-02-16 00:18:38.168 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount
[DEBUG] 2022-02-16 00:18:38.168 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69d23296]
[DEBUG] 2022-02-16 00:18:38.168 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount.accountOwner
[DEBUG] 2022-02-16 00:18:38.168 [main] MetamodelGraphWalker - Property path deemed to be circular : accountOwner.sentTransactions.receiverAccount.accountOwner
[DEBUG] 2022-02-16 00:18:38.168 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount.amountOfMoney
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount.bankProducer
[DEBUG] 2022-02-16 00:18:38.169 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@376c7d7d]
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount.bankProducer.bankAccounts
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Property path deemed to be circular : accountOwner.sentTransactions.receiverAccount.bankProducer.bankAccounts
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount.bankProducer.commission
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount.bankProducer.name
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount.currency
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount.receivedTransactions
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Property path deemed to be circular : accountOwner.sentTransactions.receiverAccount.receivedTransactions
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount.sentTransactions
[DEBUG] 2022-02-16 00:18:38.169 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3fba233d]
[DEBUG] 2022-02-16 00:18:38.169 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@427ae189]
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount.sentTransactions.amountOfMoney
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount.sentTransactions.date
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount.sentTransactions.receiverAccount
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Property path deemed to be circular : accountOwner.sentTransactions.receiverAccount.sentTransactions.receiverAccount
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount.sentTransactions.sender
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Property path deemed to be circular : accountOwner.sentTransactions.receiverAccount.sentTransactions.sender
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.receiverAccount.sentTransactions.senderAccount
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Property path deemed to be circular : accountOwner.sentTransactions.receiverAccount.sentTransactions.senderAccount
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.sender
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Property path deemed to be circular : accountOwner.sentTransactions.sender
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions.senderAccount
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Property path deemed to be circular : accountOwner.sentTransactions.senderAccount
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.type
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Visiting attribute path : amountOfMoney
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Visiting attribute path : bankProducer
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Property path deemed to be circular : bankProducer
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Visiting attribute path : currency
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Visiting attribute path : receivedTransactions
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Property path deemed to be circular : receivedTransactions
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Visiting attribute path : sentTransactions
[DEBUG] 2022-02-16 00:18:38.169 [main] MetamodelGraphWalker - Property path deemed to be circular : sentTransactions
[DEBUG] 2022-02-16 00:18:38.169 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-02-16 00:18:38.170 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-02-16 00:18:38.170 [main] LoadPlanTreePrinter - LoadPlan(entity=by.ganevich.entity.BankAccount)
    - Returns
       - EntityReturnImpl(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:0>, path=by.ganevich.entity.BankAccount)
          - EntityAttributeFetchImpl(entity=by.ganevich.entity.Client, querySpaceUid=<gen:1>, path=by.ganevich.entity.BankAccount.accountOwner)
             - CollectionAttributeFetchImpl(collection=by.ganevich.entity.Client.sentTransactions, querySpaceUid=<gen:2>, path=by.ganevich.entity.BankAccount.accountOwner.sentTransactions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:3>, path=by.ganevich.entity.BankAccount.accountOwner.sentTransactions.<elements>)
                   - EntityAttributeFetchImpl(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:4>, path=by.ganevich.entity.BankAccount.accountOwner.sentTransactions.<elements>.receiverAccount)
                      - EntityAttributeFetchImpl(entity=by.ganevich.entity.Bank, querySpaceUid=<gen:5>, path=by.ganevich.entity.BankAccount.accountOwner.sentTransactions.<elements>.receiverAccount.bankProducer)
                      - CollectionAttributeFetchImpl(collection=by.ganevich.entity.BankAccount.sentTransactions, querySpaceUid=<gen:6>, path=by.ganevich.entity.BankAccount.accountOwner.sentTransactions.<elements>.receiverAccount.sentTransactions)
                         - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:7>, path=by.ganevich.entity.BankAccount.accountOwner.sentTransactions.<elements>.receiverAccount.sentTransactions.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=by.ganevich.entity.BankAccount)
          - SQL table alias mapping - bankaccoun0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(accountOwner)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=by.ganevich.entity.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(sentTransactions)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=by.ganevich.entity.Client.sentTransactions)
                      - SQL table alias mapping - senttransa2_
                      - alias suffix - 2_
                      - suffixed key columns - {sender5_5_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_5_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=by.ganevich.entity.Transaction)
                            - SQL table alias mapping - senttransa2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_5_3_}
                            - JOIN (JoinDefinedByMetadata(receiverAccount)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=by.ganevich.entity.BankAccount)
                                  - SQL table alias mapping - bankaccoun3_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_0_4_}
                                  - JOIN (JoinDefinedByMetadata(bankProducer)) : <gen:4> -> <gen:5>
                                     - EntityQuerySpaceImpl(uid=<gen:5>, entity=by.ganevich.entity.Bank)
                                        - SQL table alias mapping - bank4_
                                        - alias suffix - 5_
                                        - suffixed key columns - {id1_1_5_}
                                  - JOIN (JoinDefinedByMetadata(sentTransactions)) : <gen:4> -> <gen:6>
                                     - CollectionQuerySpaceImpl(uid=<gen:6>, collection=by.ganevich.entity.BankAccount.sentTransactions)
                                        - SQL table alias mapping - senttransa5_
                                        - alias suffix - 6_
                                        - suffixed key columns - {senderac6_5_6_}
                                        - entity-element alias suffix - 7_
                                        - 7_entity-element suffixed key columns - id1_5_7_
                                        - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                                           - EntityQuerySpaceImpl(uid=<gen:7>, entity=by.ganevich.entity.Transaction)
                                              - SQL table alias mapping - senttransa5_
                                              - alias suffix - 7_
                                              - suffixed key columns - {id1_5_7_}

[DEBUG] 2022-02-16 00:18:38.170 [main] EntityLoader - Static select for entity by.ganevich.entity.BankAccount [NONE]: select bankaccoun0_.id as id1_0_0_, bankaccoun0_.clientId as clientid4_0_0_, bankaccoun0_.ammountOfMoney as ammounto2_0_0_, bankaccoun0_.bankId as bankid5_0_0_, bankaccoun0_.currency as currency3_0_0_, client1_.id as id1_2_1_, client1_.name as name2_2_1_, client1_.type as type3_2_1_, senttransa2_.sender as sender5_5_2_, senttransa2_.id as id1_5_2_, senttransa2_.id as id1_5_3_, senttransa2_.amountofmoney as amountof2_5_3_, senttransa2_.date as date3_5_3_, senttransa2_.recipientAccountId as recipien4_5_3_, senttransa2_.sender as sender5_5_3_, senttransa2_.senderAccountId as senderac6_5_3_, bankaccoun3_.id as id1_0_4_, bankaccoun3_.clientId as clientid4_0_4_, bankaccoun3_.ammountOfMoney as ammounto2_0_4_, bankaccoun3_.bankId as bankid5_0_4_, bankaccoun3_.currency as currency3_0_4_, bank4_.id as id1_1_5_, bank4_.commission as commissi2_1_5_, bank4_.name as name3_1_5_, senttransa5_.senderAccountId as senderac6_5_6_, senttransa5_.id as id1_5_6_, senttransa5_.id as id1_5_7_, senttransa5_.amountofmoney as amountof2_5_7_, senttransa5_.date as date3_5_7_, senttransa5_.recipientAccountId as recipien4_5_7_, senttransa5_.sender as sender5_5_7_, senttransa5_.senderAccountId as senderac6_5_7_ from bankAccounts bankaccoun0_ left outer join clients client1_ on bankaccoun0_.clientId=client1_.id left outer join transactions senttransa2_ on client1_.id=senttransa2_.sender left outer join bankAccounts bankaccoun3_ on senttransa2_.recipientAccountId=bankaccoun3_.id left outer join banks bank4_ on bankaccoun3_.bankId=bank4_.id left outer join transactions senttransa5_ on bankaccoun3_.id=senttransa5_.senderAccountId where bankaccoun0_.id=?
[DEBUG] 2022-02-16 00:18:38.170 [main] AbstractEntityPersister - Static SQL for entity: by.ganevich.entity.Bank
[DEBUG] 2022-02-16 00:18:38.171 [main] AbstractEntityPersister -  Version select: select id from banks where id =?
[DEBUG] 2022-02-16 00:18:38.171 [main] AbstractEntityPersister -  Snapshot select: select bank_.id, bank_.commission as commissi2_1_, bank_.name as name3_1_ from banks bank_ where bank_.id=?
[DEBUG] 2022-02-16 00:18:38.171 [main] AbstractEntityPersister -  Insert 0: insert into banks (commission, name, id) values (?, ?, ?)
[DEBUG] 2022-02-16 00:18:38.171 [main] AbstractEntityPersister -  Update 0: update banks set commission=?, name=? where id=?
[DEBUG] 2022-02-16 00:18:38.171 [main] AbstractEntityPersister -  Delete 0: delete from banks where id=?
[DEBUG] 2022-02-16 00:18:38.171 [main] AbstractEntityPersister -  Identity insert: insert into banks (commission, name) values (?, ?)
[DEBUG] 2022-02-16 00:18:38.171 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@187e5235]
[DEBUG] 2022-02-16 00:18:38.171 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts
[DEBUG] 2022-02-16 00:18:38.171 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5434e40c]
[DEBUG] 2022-02-16 00:18:38.171 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b48e183]
[DEBUG] 2022-02-16 00:18:38.171 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner
[DEBUG] 2022-02-16 00:18:38.171 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43a65cd8]
[DEBUG] 2022-02-16 00:18:38.171 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.bankAccounts
[DEBUG] 2022-02-16 00:18:38.171 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.accountOwner.bankAccounts
[DEBUG] 2022-02-16 00:18:38.171 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.name
[DEBUG] 2022-02-16 00:18:38.171 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions
[DEBUG] 2022-02-16 00:18:38.171 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17461db]
[DEBUG] 2022-02-16 00:18:38.171 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fd9e827]
[DEBUG] 2022-02-16 00:18:38.171 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.amountOfMoney
[DEBUG] 2022-02-16 00:18:38.171 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.date
[DEBUG] 2022-02-16 00:18:38.171 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.receiverAccount
[DEBUG] 2022-02-16 00:18:38.171 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24a86066]
[DEBUG] 2022-02-16 00:18:38.171 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.receiverAccount.accountOwner
[DEBUG] 2022-02-16 00:18:38.171 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.accountOwner.sentTransactions.receiverAccount.accountOwner
[DEBUG] 2022-02-16 00:18:38.171 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.receiverAccount.amountOfMoney
[DEBUG] 2022-02-16 00:18:38.171 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.receiverAccount.bankProducer
[DEBUG] 2022-02-16 00:18:38.171 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.accountOwner.sentTransactions.receiverAccount.bankProducer
[DEBUG] 2022-02-16 00:18:38.171 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.receiverAccount.currency
[DEBUG] 2022-02-16 00:18:38.171 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.receiverAccount.receivedTransactions
[DEBUG] 2022-02-16 00:18:38.171 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.accountOwner.sentTransactions.receiverAccount.receivedTransactions
[DEBUG] 2022-02-16 00:18:38.171 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.receiverAccount.sentTransactions
[DEBUG] 2022-02-16 00:18:38.171 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5b3bb1f7]
[DEBUG] 2022-02-16 00:18:38.171 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58d6b7b9]
[DEBUG] 2022-02-16 00:18:38.172 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.receiverAccount.sentTransactions.amountOfMoney
[DEBUG] 2022-02-16 00:18:38.172 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.receiverAccount.sentTransactions.date
[DEBUG] 2022-02-16 00:18:38.172 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.receiverAccount.sentTransactions.receiverAccount
[DEBUG] 2022-02-16 00:18:38.172 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.accountOwner.sentTransactions.receiverAccount.sentTransactions.receiverAccount
[DEBUG] 2022-02-16 00:18:38.172 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.receiverAccount.sentTransactions.sender
[DEBUG] 2022-02-16 00:18:38.172 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.accountOwner.sentTransactions.receiverAccount.sentTransactions.sender
[DEBUG] 2022-02-16 00:18:38.172 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.receiverAccount.sentTransactions.senderAccount
[DEBUG] 2022-02-16 00:18:38.172 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.accountOwner.sentTransactions.receiverAccount.sentTransactions.senderAccount
[DEBUG] 2022-02-16 00:18:38.172 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.sender
[DEBUG] 2022-02-16 00:18:38.172 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.accountOwner.sentTransactions.sender
[DEBUG] 2022-02-16 00:18:38.172 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.sentTransactions.senderAccount
[DEBUG] 2022-02-16 00:18:38.172 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.accountOwner.sentTransactions.senderAccount
[DEBUG] 2022-02-16 00:18:38.172 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner.type
[DEBUG] 2022-02-16 00:18:38.172 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.amountOfMoney
[DEBUG] 2022-02-16 00:18:38.172 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.bankProducer
[DEBUG] 2022-02-16 00:18:38.172 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.bankProducer
[DEBUG] 2022-02-16 00:18:38.172 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.currency
[DEBUG] 2022-02-16 00:18:38.172 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions
[DEBUG] 2022-02-16 00:18:38.172 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.receivedTransactions
[DEBUG] 2022-02-16 00:18:38.172 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.sentTransactions
[DEBUG] 2022-02-16 00:18:38.172 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.sentTransactions
[DEBUG] 2022-02-16 00:18:38.172 [main] MetamodelGraphWalker - Visiting attribute path : commission
[DEBUG] 2022-02-16 00:18:38.172 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2022-02-16 00:18:38.172 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-02-16 00:18:38.172 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-02-16 00:18:38.173 [main] LoadPlanTreePrinter - LoadPlan(entity=by.ganevich.entity.Bank)
    - Returns
       - EntityReturnImpl(entity=by.ganevich.entity.Bank, querySpaceUid=<gen:0>, path=by.ganevich.entity.Bank)
          - CollectionAttributeFetchImpl(collection=by.ganevich.entity.Bank.bankAccounts, querySpaceUid=<gen:1>, path=by.ganevich.entity.Bank.bankAccounts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:2>, path=by.ganevich.entity.Bank.bankAccounts.<elements>)
                - EntityAttributeFetchImpl(entity=by.ganevich.entity.Client, querySpaceUid=<gen:3>, path=by.ganevich.entity.Bank.bankAccounts.<elements>.accountOwner)
                   - CollectionAttributeFetchImpl(collection=by.ganevich.entity.Client.sentTransactions, querySpaceUid=<gen:4>, path=by.ganevich.entity.Bank.bankAccounts.<elements>.accountOwner.sentTransactions)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:5>, path=by.ganevich.entity.Bank.bankAccounts.<elements>.accountOwner.sentTransactions.<elements>)
                         - EntityAttributeFetchImpl(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:6>, path=by.ganevich.entity.Bank.bankAccounts.<elements>.accountOwner.sentTransactions.<elements>.receiverAccount)
                            - CollectionAttributeFetchImpl(collection=by.ganevich.entity.BankAccount.sentTransactions, querySpaceUid=<gen:7>, path=by.ganevich.entity.Bank.bankAccounts.<elements>.accountOwner.sentTransactions.<elements>.receiverAccount.sentTransactions)
                               - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:8>, path=by.ganevich.entity.Bank.bankAccounts.<elements>.accountOwner.sentTransactions.<elements>.receiverAccount.sentTransactions.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=by.ganevich.entity.Bank)
          - SQL table alias mapping - bank0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(bankAccounts)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=by.ganevich.entity.Bank.bankAccounts)
                - SQL table alias mapping - bankaccoun1_
                - alias suffix - 1_
                - suffixed key columns - {bankid5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=by.ganevich.entity.BankAccount)
                      - SQL table alias mapping - bankaccoun1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(accountOwner)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=by.ganevich.entity.Client)
                            - SQL table alias mapping - client2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}
                            - JOIN (JoinDefinedByMetadata(sentTransactions)) : <gen:3> -> <gen:4>
                               - CollectionQuerySpaceImpl(uid=<gen:4>, collection=by.ganevich.entity.Client.sentTransactions)
                                  - SQL table alias mapping - senttransa3_
                                  - alias suffix - 4_
                                  - suffixed key columns - {sender5_5_4_}
                                  - entity-element alias suffix - 5_
                                  - 5_entity-element suffixed key columns - id1_5_5_
                                  - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                                     - EntityQuerySpaceImpl(uid=<gen:5>, entity=by.ganevich.entity.Transaction)
                                        - SQL table alias mapping - senttransa3_
                                        - alias suffix - 5_
                                        - suffixed key columns - {id1_5_5_}
                                        - JOIN (JoinDefinedByMetadata(receiverAccount)) : <gen:5> -> <gen:6>
                                           - EntityQuerySpaceImpl(uid=<gen:6>, entity=by.ganevich.entity.BankAccount)
                                              - SQL table alias mapping - bankaccoun4_
                                              - alias suffix - 6_
                                              - suffixed key columns - {id1_0_6_}
                                              - JOIN (JoinDefinedByMetadata(sentTransactions)) : <gen:6> -> <gen:7>
                                                 - CollectionQuerySpaceImpl(uid=<gen:7>, collection=by.ganevich.entity.BankAccount.sentTransactions)
                                                    - SQL table alias mapping - senttransa5_
                                                    - alias suffix - 7_
                                                    - suffixed key columns - {senderac6_5_7_}
                                                    - entity-element alias suffix - 8_
                                                    - 8_entity-element suffixed key columns - id1_5_8_
                                                    - JOIN (JoinDefinedByMetadata(elements)) : <gen:7> -> <gen:8>
                                                       - EntityQuerySpaceImpl(uid=<gen:8>, entity=by.ganevich.entity.Transaction)
                                                          - SQL table alias mapping - senttransa5_
                                                          - alias suffix - 8_
                                                          - suffixed key columns - {id1_5_8_}

[DEBUG] 2022-02-16 00:18:38.173 [main] EntityLoader - Static select for entity by.ganevich.entity.Bank [NONE]: select bank0_.id as id1_1_0_, bank0_.commission as commissi2_1_0_, bank0_.name as name3_1_0_, bankaccoun1_.bankId as bankid5_0_1_, bankaccoun1_.id as id1_0_1_, bankaccoun1_.id as id1_0_2_, bankaccoun1_.clientId as clientid4_0_2_, bankaccoun1_.ammountOfMoney as ammounto2_0_2_, bankaccoun1_.bankId as bankid5_0_2_, bankaccoun1_.currency as currency3_0_2_, client2_.id as id1_2_3_, client2_.name as name2_2_3_, client2_.type as type3_2_3_, senttransa3_.sender as sender5_5_4_, senttransa3_.id as id1_5_4_, senttransa3_.id as id1_5_5_, senttransa3_.amountofmoney as amountof2_5_5_, senttransa3_.date as date3_5_5_, senttransa3_.recipientAccountId as recipien4_5_5_, senttransa3_.sender as sender5_5_5_, senttransa3_.senderAccountId as senderac6_5_5_, bankaccoun4_.id as id1_0_6_, bankaccoun4_.clientId as clientid4_0_6_, bankaccoun4_.ammountOfMoney as ammounto2_0_6_, bankaccoun4_.bankId as bankid5_0_6_, bankaccoun4_.currency as currency3_0_6_, senttransa5_.senderAccountId as senderac6_5_7_, senttransa5_.id as id1_5_7_, senttransa5_.id as id1_5_8_, senttransa5_.amountofmoney as amountof2_5_8_, senttransa5_.date as date3_5_8_, senttransa5_.recipientAccountId as recipien4_5_8_, senttransa5_.sender as sender5_5_8_, senttransa5_.senderAccountId as senderac6_5_8_ from banks bank0_ left outer join bankAccounts bankaccoun1_ on bank0_.id=bankaccoun1_.bankId left outer join clients client2_ on bankaccoun1_.clientId=client2_.id left outer join transactions senttransa3_ on client2_.id=senttransa3_.sender left outer join bankAccounts bankaccoun4_ on senttransa3_.recipientAccountId=bankaccoun4_.id left outer join transactions senttransa5_ on bankaccoun4_.id=senttransa5_.senderAccountId where bank0_.id=?
[DEBUG] 2022-02-16 00:18:38.173 [main] AbstractEntityPersister - Static SQL for entity: by.ganevich.entity.Rate
[DEBUG] 2022-02-16 00:18:38.173 [main] AbstractEntityPersister -  Version select: select id from exchangeRates where id =?
[DEBUG] 2022-02-16 00:18:38.174 [main] AbstractEntityPersister -  Snapshot select: select rate_.id, rate_.currency as currency2_4_, rate_.rate as rate3_4_ from exchangeRates rate_ where rate_.id=?
[DEBUG] 2022-02-16 00:18:38.174 [main] AbstractEntityPersister -  Insert 0: insert into exchangeRates (currency, rate, id) values (?, ?, ?)
[DEBUG] 2022-02-16 00:18:38.174 [main] AbstractEntityPersister -  Update 0: update exchangeRates set currency=?, rate=? where id=?
[DEBUG] 2022-02-16 00:18:38.174 [main] AbstractEntityPersister -  Delete 0: delete from exchangeRates where id=?
[DEBUG] 2022-02-16 00:18:38.174 [main] AbstractEntityPersister -  Identity insert: insert into exchangeRates (currency, rate) values (?, ?)
[DEBUG] 2022-02-16 00:18:38.174 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c5ddccd]
[DEBUG] 2022-02-16 00:18:38.174 [main] MetamodelGraphWalker - Visiting attribute path : currency
[DEBUG] 2022-02-16 00:18:38.174 [main] MetamodelGraphWalker - Visiting attribute path : rate
[DEBUG] 2022-02-16 00:18:38.174 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-02-16 00:18:38.174 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-02-16 00:18:38.174 [main] LoadPlanTreePrinter - LoadPlan(entity=by.ganevich.entity.Rate)
    - Returns
       - EntityReturnImpl(entity=by.ganevich.entity.Rate, querySpaceUid=<gen:0>, path=by.ganevich.entity.Rate)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=by.ganevich.entity.Rate)
          - SQL table alias mapping - rate0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

[DEBUG] 2022-02-16 00:18:38.174 [main] EntityLoader - Static select for entity by.ganevich.entity.Rate [NONE]: select rate0_.id as id1_4_0_, rate0_.currency as currency2_4_0_, rate0_.rate as rate3_4_0_ from exchangeRates rate0_ where rate0_.id=?
[DEBUG] 2022-02-16 00:18:38.174 [main] AbstractEntityPersister - Static SQL for entity: by.ganevich.entity.Client
[DEBUG] 2022-02-16 00:18:38.174 [main] AbstractEntityPersister -  Version select: select id from clients where id =?
[DEBUG] 2022-02-16 00:18:38.174 [main] AbstractEntityPersister -  Snapshot select: select client_.id, client_.name as name2_2_, client_.type as type3_2_ from clients client_ where client_.id=?
[DEBUG] 2022-02-16 00:18:38.174 [main] AbstractEntityPersister -  Insert 0: insert into clients (name, type, id) values (?, ?, ?)
[DEBUG] 2022-02-16 00:18:38.174 [main] AbstractEntityPersister -  Update 0: update clients set name=?, type=? where id=?
[DEBUG] 2022-02-16 00:18:38.174 [main] AbstractEntityPersister -  Delete 0: delete from clients where id=?
[DEBUG] 2022-02-16 00:18:38.174 [main] AbstractEntityPersister -  Identity insert: insert into clients (name, type) values (?, ?)
[DEBUG] 2022-02-16 00:18:38.174 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c101cc1]
[DEBUG] 2022-02-16 00:18:38.174 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts
[DEBUG] 2022-02-16 00:18:38.174 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7fb48179]
[DEBUG] 2022-02-16 00:18:38.174 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@201c3cda]
[DEBUG] 2022-02-16 00:18:38.175 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.accountOwner
[DEBUG] 2022-02-16 00:18:38.175 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.accountOwner
[DEBUG] 2022-02-16 00:18:38.175 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.amountOfMoney
[DEBUG] 2022-02-16 00:18:38.175 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.bankProducer
[DEBUG] 2022-02-16 00:18:38.175 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6732726]
[DEBUG] 2022-02-16 00:18:38.175 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.bankProducer.bankAccounts
[DEBUG] 2022-02-16 00:18:38.175 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.bankProducer.bankAccounts
[DEBUG] 2022-02-16 00:18:38.175 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.bankProducer.commission
[DEBUG] 2022-02-16 00:18:38.175 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.bankProducer.name
[DEBUG] 2022-02-16 00:18:38.175 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.currency
[DEBUG] 2022-02-16 00:18:38.175 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions
[DEBUG] 2022-02-16 00:18:38.175 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3d64c581]
[DEBUG] 2022-02-16 00:18:38.175 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ec5ea63]
[DEBUG] 2022-02-16 00:18:38.175 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.amountOfMoney
[DEBUG] 2022-02-16 00:18:38.175 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.date
[DEBUG] 2022-02-16 00:18:38.175 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.receiverAccount
[DEBUG] 2022-02-16 00:18:38.175 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.receivedTransactions.receiverAccount
[DEBUG] 2022-02-16 00:18:38.175 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.sender
[DEBUG] 2022-02-16 00:18:38.175 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c83ae01]
[DEBUG] 2022-02-16 00:18:38.175 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.sender.bankAccounts
[DEBUG] 2022-02-16 00:18:38.175 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.receivedTransactions.sender.bankAccounts
[DEBUG] 2022-02-16 00:18:38.175 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.sender.name
[DEBUG] 2022-02-16 00:18:38.175 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.sender.sentTransactions
[DEBUG] 2022-02-16 00:18:38.175 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.receivedTransactions.sender.sentTransactions
[DEBUG] 2022-02-16 00:18:38.175 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.sender.type
[DEBUG] 2022-02-16 00:18:38.176 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.senderAccount
[DEBUG] 2022-02-16 00:18:38.176 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69d45cca]
[DEBUG] 2022-02-16 00:18:38.176 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.senderAccount.accountOwner
[DEBUG] 2022-02-16 00:18:38.176 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.receivedTransactions.senderAccount.accountOwner
[DEBUG] 2022-02-16 00:18:38.176 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.senderAccount.amountOfMoney
[DEBUG] 2022-02-16 00:18:38.176 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.senderAccount.bankProducer
[DEBUG] 2022-02-16 00:18:38.176 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.receivedTransactions.senderAccount.bankProducer
[DEBUG] 2022-02-16 00:18:38.176 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.senderAccount.currency
[DEBUG] 2022-02-16 00:18:38.176 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.senderAccount.receivedTransactions
[DEBUG] 2022-02-16 00:18:38.176 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.receivedTransactions.senderAccount.receivedTransactions
[DEBUG] 2022-02-16 00:18:38.176 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.receivedTransactions.senderAccount.sentTransactions
[DEBUG] 2022-02-16 00:18:38.176 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.receivedTransactions.senderAccount.sentTransactions
[DEBUG] 2022-02-16 00:18:38.176 [main] MetamodelGraphWalker - Visiting attribute path : bankAccounts.sentTransactions
[DEBUG] 2022-02-16 00:18:38.176 [main] MetamodelGraphWalker - Property path deemed to be circular : bankAccounts.sentTransactions
[DEBUG] 2022-02-16 00:18:38.176 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2022-02-16 00:18:38.176 [main] MetamodelGraphWalker - Visiting attribute path : sentTransactions
[DEBUG] 2022-02-16 00:18:38.177 [main] MetamodelGraphWalker - Property path deemed to be circular : sentTransactions
[DEBUG] 2022-02-16 00:18:38.177 [main] MetamodelGraphWalker - Visiting attribute path : type
[DEBUG] 2022-02-16 00:18:38.177 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-02-16 00:18:38.177 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-02-16 00:18:38.178 [main] LoadPlanTreePrinter - LoadPlan(entity=by.ganevich.entity.Client)
    - Returns
       - EntityReturnImpl(entity=by.ganevich.entity.Client, querySpaceUid=<gen:0>, path=by.ganevich.entity.Client)
          - CollectionAttributeFetchImpl(collection=by.ganevich.entity.Client.bankAccounts, querySpaceUid=<gen:1>, path=by.ganevich.entity.Client.bankAccounts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:2>, path=by.ganevich.entity.Client.bankAccounts.<elements>)
                - EntityAttributeFetchImpl(entity=by.ganevich.entity.Bank, querySpaceUid=<gen:3>, path=by.ganevich.entity.Client.bankAccounts.<elements>.bankProducer)
                - CollectionAttributeFetchImpl(collection=by.ganevich.entity.BankAccount.receivedTransactions, querySpaceUid=<gen:4>, path=by.ganevich.entity.Client.bankAccounts.<elements>.receivedTransactions)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:5>, path=by.ganevich.entity.Client.bankAccounts.<elements>.receivedTransactions.<elements>)
                      - EntityAttributeFetchImpl(entity=by.ganevich.entity.Client, querySpaceUid=<gen:6>, path=by.ganevich.entity.Client.bankAccounts.<elements>.receivedTransactions.<elements>.sender)
                      - EntityAttributeFetchImpl(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:7>, path=by.ganevich.entity.Client.bankAccounts.<elements>.receivedTransactions.<elements>.senderAccount)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=by.ganevich.entity.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(bankAccounts)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=by.ganevich.entity.Client.bankAccounts)
                - SQL table alias mapping - bankaccoun1_
                - alias suffix - 1_
                - suffixed key columns - {clientid4_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=by.ganevich.entity.BankAccount)
                      - SQL table alias mapping - bankaccoun1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(bankProducer)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=by.ganevich.entity.Bank)
                            - SQL table alias mapping - bank2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_1_3_}
                      - JOIN (JoinDefinedByMetadata(receivedTransactions)) : <gen:2> -> <gen:4>
                         - CollectionQuerySpaceImpl(uid=<gen:4>, collection=by.ganevich.entity.BankAccount.receivedTransactions)
                            - SQL table alias mapping - receivedtr3_
                            - alias suffix - 4_
                            - suffixed key columns - {recipien4_5_4_}
                            - entity-element alias suffix - 5_
                            - 5_entity-element suffixed key columns - id1_5_5_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                               - EntityQuerySpaceImpl(uid=<gen:5>, entity=by.ganevich.entity.Transaction)
                                  - SQL table alias mapping - receivedtr3_
                                  - alias suffix - 5_
                                  - suffixed key columns - {id1_5_5_}
                                  - JOIN (JoinDefinedByMetadata(sender)) : <gen:5> -> <gen:6>
                                     - EntityQuerySpaceImpl(uid=<gen:6>, entity=by.ganevich.entity.Client)
                                        - SQL table alias mapping - client4_
                                        - alias suffix - 6_
                                        - suffixed key columns - {id1_2_6_}
                                  - JOIN (JoinDefinedByMetadata(senderAccount)) : <gen:5> -> <gen:7>
                                     - EntityQuerySpaceImpl(uid=<gen:7>, entity=by.ganevich.entity.BankAccount)
                                        - SQL table alias mapping - bankaccoun5_
                                        - alias suffix - 7_
                                        - suffixed key columns - {id1_0_7_}

[DEBUG] 2022-02-16 00:18:38.178 [main] EntityLoader - Static select for entity by.ganevich.entity.Client [NONE]: select client0_.id as id1_2_0_, client0_.name as name2_2_0_, client0_.type as type3_2_0_, bankaccoun1_.clientId as clientid4_0_1_, bankaccoun1_.id as id1_0_1_, bankaccoun1_.id as id1_0_2_, bankaccoun1_.clientId as clientid4_0_2_, bankaccoun1_.ammountOfMoney as ammounto2_0_2_, bankaccoun1_.bankId as bankid5_0_2_, bankaccoun1_.currency as currency3_0_2_, bank2_.id as id1_1_3_, bank2_.commission as commissi2_1_3_, bank2_.name as name3_1_3_, receivedtr3_.recipientAccountId as recipien4_5_4_, receivedtr3_.id as id1_5_4_, receivedtr3_.id as id1_5_5_, receivedtr3_.amountofmoney as amountof2_5_5_, receivedtr3_.date as date3_5_5_, receivedtr3_.recipientAccountId as recipien4_5_5_, receivedtr3_.sender as sender5_5_5_, receivedtr3_.senderAccountId as senderac6_5_5_, client4_.id as id1_2_6_, client4_.name as name2_2_6_, client4_.type as type3_2_6_, bankaccoun5_.id as id1_0_7_, bankaccoun5_.clientId as clientid4_0_7_, bankaccoun5_.ammountOfMoney as ammounto2_0_7_, bankaccoun5_.bankId as bankid5_0_7_, bankaccoun5_.currency as currency3_0_7_ from clients client0_ left outer join bankAccounts bankaccoun1_ on client0_.id=bankaccoun1_.clientId left outer join banks bank2_ on bankaccoun1_.bankId=bank2_.id left outer join transactions receivedtr3_ on bankaccoun1_.id=receivedtr3_.recipientAccountId left outer join clients client4_ on receivedtr3_.sender=client4_.id left outer join bankAccounts bankaccoun5_ on receivedtr3_.senderAccountId=bankaccoun5_.id where client0_.id=?
[DEBUG] 2022-02-16 00:18:38.182 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1507c3c3]
[DEBUG] 2022-02-16 00:18:38.182 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@655a01d8]
[DEBUG] 2022-02-16 00:18:38.182 [main] MetamodelGraphWalker - Visiting attribute path : amountOfMoney
[DEBUG] 2022-02-16 00:18:38.182 [main] MetamodelGraphWalker - Visiting attribute path : date
[DEBUG] 2022-02-16 00:18:38.182 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount
[DEBUG] 2022-02-16 00:18:38.182 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d266391]
[DEBUG] 2022-02-16 00:18:38.182 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner
[DEBUG] 2022-02-16 00:18:38.182 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b5c665c]
[DEBUG] 2022-02-16 00:18:38.182 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.bankAccounts
[DEBUG] 2022-02-16 00:18:38.182 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.accountOwner.bankAccounts
[DEBUG] 2022-02-16 00:18:38.182 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.name
[DEBUG] 2022-02-16 00:18:38.182 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions
[DEBUG] 2022-02-16 00:18:38.182 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@625a4ff]
[DEBUG] 2022-02-16 00:18:38.182 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41dc0598]
[DEBUG] 2022-02-16 00:18:38.182 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.type
[DEBUG] 2022-02-16 00:18:38.182 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.amountOfMoney
[DEBUG] 2022-02-16 00:18:38.182 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.bankProducer
[DEBUG] 2022-02-16 00:18:38.182 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@196ae579]
[DEBUG] 2022-02-16 00:18:38.182 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.bankProducer.bankAccounts
[DEBUG] 2022-02-16 00:18:38.182 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.bankProducer.bankAccounts
[DEBUG] 2022-02-16 00:18:38.182 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.bankProducer.commission
[DEBUG] 2022-02-16 00:18:38.182 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.bankProducer.name
[DEBUG] 2022-02-16 00:18:38.182 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.currency
[DEBUG] 2022-02-16 00:18:38.182 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.receivedTransactions
[DEBUG] 2022-02-16 00:18:38.182 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.receivedTransactions
[DEBUG] 2022-02-16 00:18:38.182 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.sentTransactions
[DEBUG] 2022-02-16 00:18:38.182 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.sentTransactions
[DEBUG] 2022-02-16 00:18:38.182 [main] MetamodelGraphWalker - Visiting attribute path : sender
[DEBUG] 2022-02-16 00:18:38.182 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41853299]
[DEBUG] 2022-02-16 00:18:38.183 [main] MetamodelGraphWalker - Visiting attribute path : sender.bankAccounts
[DEBUG] 2022-02-16 00:18:38.183 [main] MetamodelGraphWalker - Property path deemed to be circular : sender.bankAccounts
[DEBUG] 2022-02-16 00:18:38.183 [main] MetamodelGraphWalker - Visiting attribute path : sender.name
[DEBUG] 2022-02-16 00:18:38.183 [main] MetamodelGraphWalker - Visiting attribute path : sender.sentTransactions
[DEBUG] 2022-02-16 00:18:38.183 [main] MetamodelGraphWalker - Property path deemed to be circular : sender.sentTransactions
[DEBUG] 2022-02-16 00:18:38.183 [main] MetamodelGraphWalker - Visiting attribute path : sender.type
[DEBUG] 2022-02-16 00:18:38.183 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount
[DEBUG] 2022-02-16 00:18:38.184 [main] MetamodelGraphWalker - Property path deemed to be circular : senderAccount
[DEBUG] 2022-02-16 00:18:38.184 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-02-16 00:18:38.186 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-02-16 00:18:38.186 [main] LoadPlanTreePrinter - LoadPlan(collection=by.ganevich.entity.BankAccount.sentTransactions)
    - Returns
       - CollectionReturnImpl(collection=by.ganevich.entity.BankAccount.sentTransactions, querySpaceUid=<gen:0>, path=[by.ganevich.entity.BankAccount.sentTransactions])
          - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:1>, path=[by.ganevich.entity.BankAccount.sentTransactions].<elements>)
             - EntityAttributeFetchImpl(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:2>, path=[by.ganevich.entity.BankAccount.sentTransactions].<elements>.receiverAccount)
                - EntityAttributeFetchImpl(entity=by.ganevich.entity.Client, querySpaceUid=<gen:3>, path=[by.ganevich.entity.BankAccount.sentTransactions].<elements>.receiverAccount.accountOwner)
                   - CollectionAttributeFetchImpl(collection=by.ganevich.entity.Client.sentTransactions, querySpaceUid=<gen:4>, path=[by.ganevich.entity.BankAccount.sentTransactions].<elements>.receiverAccount.accountOwner.sentTransactions)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:5>, path=[by.ganevich.entity.BankAccount.sentTransactions].<elements>.receiverAccount.accountOwner.sentTransactions.<elements>)
                - EntityAttributeFetchImpl(entity=by.ganevich.entity.Bank, querySpaceUid=<gen:6>, path=[by.ganevich.entity.BankAccount.sentTransactions].<elements>.receiverAccount.bankProducer)
             - EntityAttributeFetchImpl(entity=by.ganevich.entity.Client, querySpaceUid=<gen:7>, path=[by.ganevich.entity.BankAccount.sentTransactions].<elements>.sender)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=by.ganevich.entity.BankAccount.sentTransactions)
          - SQL table alias mapping - senttransa0_
          - alias suffix - 0_
          - suffixed key columns - {senderac6_5_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=by.ganevich.entity.Transaction)
                - SQL table alias mapping - senttransa0_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}
                - JOIN (JoinDefinedByMetadata(receiverAccount)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=by.ganevich.entity.BankAccount)
                      - SQL table alias mapping - bankaccoun1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(accountOwner)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=by.ganevich.entity.Client)
                            - SQL table alias mapping - client2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}
                      - JOIN (JoinDefinedByMetadata(bankProducer)) : <gen:2> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=by.ganevich.entity.Bank)
                            - SQL table alias mapping - bank3_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_1_4_}
                - JOIN (JoinDefinedByMetadata(sender)) : <gen:1> -> <gen:7>
                   - EntityQuerySpaceImpl(uid=<gen:7>, entity=by.ganevich.entity.Client)
                      - SQL table alias mapping - client4_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_2_5_}

[DEBUG] 2022-02-16 00:18:38.187 [main] CollectionLoader - Static select for collection by.ganevich.entity.BankAccount.sentTransactions: select senttransa0_.senderAccountId as senderac6_5_0_, senttransa0_.id as id1_5_0_, senttransa0_.id as id1_5_1_, senttransa0_.amountofmoney as amountof2_5_1_, senttransa0_.date as date3_5_1_, senttransa0_.recipientAccountId as recipien4_5_1_, senttransa0_.sender as sender5_5_1_, senttransa0_.senderAccountId as senderac6_5_1_, bankaccoun1_.id as id1_0_2_, bankaccoun1_.clientId as clientid4_0_2_, bankaccoun1_.ammountOfMoney as ammounto2_0_2_, bankaccoun1_.bankId as bankid5_0_2_, bankaccoun1_.currency as currency3_0_2_, client2_.id as id1_2_3_, client2_.name as name2_2_3_, client2_.type as type3_2_3_, bank3_.id as id1_1_4_, bank3_.commission as commissi2_1_4_, bank3_.name as name3_1_4_, client4_.id as id1_2_5_, client4_.name as name2_2_5_, client4_.type as type3_2_5_ from transactions senttransa0_ left outer join bankAccounts bankaccoun1_ on senttransa0_.recipientAccountId=bankaccoun1_.id left outer join clients client2_ on bankaccoun1_.clientId=client2_.id left outer join banks bank3_ on bankaccoun1_.bankId=bank3_.id left outer join clients client4_ on senttransa0_.sender=client4_.id where senttransa0_.senderAccountId=?
[DEBUG] 2022-02-16 00:18:38.187 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6fc6deb7]
[DEBUG] 2022-02-16 00:18:38.187 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@367f0121]
[DEBUG] 2022-02-16 00:18:38.187 [main] MetamodelGraphWalker - Visiting attribute path : amountOfMoney
[DEBUG] 2022-02-16 00:18:38.187 [main] MetamodelGraphWalker - Visiting attribute path : date
[DEBUG] 2022-02-16 00:18:38.187 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount
[DEBUG] 2022-02-16 00:18:38.187 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount
[DEBUG] 2022-02-16 00:18:38.187 [main] MetamodelGraphWalker - Visiting attribute path : sender
[DEBUG] 2022-02-16 00:18:38.187 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1df1ced0]
[DEBUG] 2022-02-16 00:18:38.187 [main] MetamodelGraphWalker - Visiting attribute path : sender.bankAccounts
[DEBUG] 2022-02-16 00:18:38.187 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@32b0876c]
[DEBUG] 2022-02-16 00:18:38.187 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2aaf152b]
[DEBUG] 2022-02-16 00:18:38.187 [main] MetamodelGraphWalker - Visiting attribute path : sender.name
[DEBUG] 2022-02-16 00:18:38.187 [main] MetamodelGraphWalker - Visiting attribute path : sender.sentTransactions
[DEBUG] 2022-02-16 00:18:38.187 [main] MetamodelGraphWalker - Property path deemed to be circular : sender.sentTransactions
[DEBUG] 2022-02-16 00:18:38.187 [main] MetamodelGraphWalker - Visiting attribute path : sender.type
[DEBUG] 2022-02-16 00:18:38.187 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount
[DEBUG] 2022-02-16 00:18:38.188 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39bbd9e0]
[DEBUG] 2022-02-16 00:18:38.188 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.accountOwner
[DEBUG] 2022-02-16 00:18:38.188 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11c3ff67]
[DEBUG] 2022-02-16 00:18:38.188 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.accountOwner.bankAccounts
[DEBUG] 2022-02-16 00:18:38.188 [main] MetamodelGraphWalker - Property path deemed to be circular : senderAccount.accountOwner.bankAccounts
[DEBUG] 2022-02-16 00:18:38.188 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.accountOwner.name
[DEBUG] 2022-02-16 00:18:38.188 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.accountOwner.sentTransactions
[DEBUG] 2022-02-16 00:18:38.188 [main] MetamodelGraphWalker - Property path deemed to be circular : senderAccount.accountOwner.sentTransactions
[DEBUG] 2022-02-16 00:18:38.188 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.accountOwner.type
[DEBUG] 2022-02-16 00:18:38.188 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.amountOfMoney
[DEBUG] 2022-02-16 00:18:38.188 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.bankProducer
[DEBUG] 2022-02-16 00:18:38.188 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24841372]
[DEBUG] 2022-02-16 00:18:38.188 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.bankProducer.bankAccounts
[DEBUG] 2022-02-16 00:18:38.188 [main] MetamodelGraphWalker - Property path deemed to be circular : senderAccount.bankProducer.bankAccounts
[DEBUG] 2022-02-16 00:18:38.188 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.bankProducer.commission
[DEBUG] 2022-02-16 00:18:38.188 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.bankProducer.name
[DEBUG] 2022-02-16 00:18:38.188 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.currency
[DEBUG] 2022-02-16 00:18:38.188 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.receivedTransactions
[DEBUG] 2022-02-16 00:18:38.188 [main] MetamodelGraphWalker - Property path deemed to be circular : senderAccount.receivedTransactions
[DEBUG] 2022-02-16 00:18:38.188 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.sentTransactions
[DEBUG] 2022-02-16 00:18:38.188 [main] MetamodelGraphWalker - Property path deemed to be circular : senderAccount.sentTransactions
[DEBUG] 2022-02-16 00:18:38.189 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-02-16 00:18:38.189 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-02-16 00:18:38.189 [main] LoadPlanTreePrinter - LoadPlan(collection=by.ganevich.entity.BankAccount.receivedTransactions)
    - Returns
       - CollectionReturnImpl(collection=by.ganevich.entity.BankAccount.receivedTransactions, querySpaceUid=<gen:0>, path=[by.ganevich.entity.BankAccount.receivedTransactions])
          - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:1>, path=[by.ganevich.entity.BankAccount.receivedTransactions].<elements>)
             - EntityAttributeFetchImpl(entity=by.ganevich.entity.Client, querySpaceUid=<gen:2>, path=[by.ganevich.entity.BankAccount.receivedTransactions].<elements>.sender)
                - CollectionAttributeFetchImpl(collection=by.ganevich.entity.Client.bankAccounts, querySpaceUid=<gen:3>, path=[by.ganevich.entity.BankAccount.receivedTransactions].<elements>.sender.bankAccounts)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:4>, path=[by.ganevich.entity.BankAccount.receivedTransactions].<elements>.sender.bankAccounts.<elements>)
             - EntityAttributeFetchImpl(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:5>, path=[by.ganevich.entity.BankAccount.receivedTransactions].<elements>.senderAccount)
                - EntityAttributeFetchImpl(entity=by.ganevich.entity.Client, querySpaceUid=<gen:6>, path=[by.ganevich.entity.BankAccount.receivedTransactions].<elements>.senderAccount.accountOwner)
                - EntityAttributeFetchImpl(entity=by.ganevich.entity.Bank, querySpaceUid=<gen:7>, path=[by.ganevich.entity.BankAccount.receivedTransactions].<elements>.senderAccount.bankProducer)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=by.ganevich.entity.BankAccount.receivedTransactions)
          - SQL table alias mapping - receivedtr0_
          - alias suffix - 0_
          - suffixed key columns - {recipien4_5_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=by.ganevich.entity.Transaction)
                - SQL table alias mapping - receivedtr0_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}
                - JOIN (JoinDefinedByMetadata(sender)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=by.ganevich.entity.Client)
                      - SQL table alias mapping - client1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(senderAccount)) : <gen:1> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=by.ganevich.entity.BankAccount)
                      - SQL table alias mapping - bankaccoun2_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_0_3_}
                      - JOIN (JoinDefinedByMetadata(accountOwner)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=by.ganevich.entity.Client)
                            - SQL table alias mapping - client3_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_2_4_}
                      - JOIN (JoinDefinedByMetadata(bankProducer)) : <gen:5> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=by.ganevich.entity.Bank)
                            - SQL table alias mapping - bank4_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_1_5_}

[DEBUG] 2022-02-16 00:18:38.190 [main] CollectionLoader - Static select for collection by.ganevich.entity.BankAccount.receivedTransactions: select receivedtr0_.recipientAccountId as recipien4_5_0_, receivedtr0_.id as id1_5_0_, receivedtr0_.id as id1_5_1_, receivedtr0_.amountofmoney as amountof2_5_1_, receivedtr0_.date as date3_5_1_, receivedtr0_.recipientAccountId as recipien4_5_1_, receivedtr0_.sender as sender5_5_1_, receivedtr0_.senderAccountId as senderac6_5_1_, client1_.id as id1_2_2_, client1_.name as name2_2_2_, client1_.type as type3_2_2_, bankaccoun2_.id as id1_0_3_, bankaccoun2_.clientId as clientid4_0_3_, bankaccoun2_.ammountOfMoney as ammounto2_0_3_, bankaccoun2_.bankId as bankid5_0_3_, bankaccoun2_.currency as currency3_0_3_, client3_.id as id1_2_4_, client3_.name as name2_2_4_, client3_.type as type3_2_4_, bank4_.id as id1_1_5_, bank4_.commission as commissi2_1_5_, bank4_.name as name3_1_5_ from transactions receivedtr0_ left outer join clients client1_ on receivedtr0_.sender=client1_.id left outer join bankAccounts bankaccoun2_ on receivedtr0_.senderAccountId=bankaccoun2_.id left outer join clients client3_ on bankaccoun2_.clientId=client3_.id left outer join banks bank4_ on bankaccoun2_.bankId=bank4_.id where receivedtr0_.recipientAccountId=?
[DEBUG] 2022-02-16 00:18:38.190 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79a7bfbc]
[DEBUG] 2022-02-16 00:18:38.190 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77f68df]
[DEBUG] 2022-02-16 00:18:38.190 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner
[DEBUG] 2022-02-16 00:18:38.190 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ae126d1]
[DEBUG] 2022-02-16 00:18:38.190 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.bankAccounts
[DEBUG] 2022-02-16 00:18:38.190 [main] MetamodelGraphWalker - Property path deemed to be circular : accountOwner.bankAccounts
[DEBUG] 2022-02-16 00:18:38.190 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.name
[DEBUG] 2022-02-16 00:18:38.190 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.sentTransactions
[DEBUG] 2022-02-16 00:18:38.190 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6242ae3b]
[DEBUG] 2022-02-16 00:18:38.190 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65ddee5a]
[DEBUG] 2022-02-16 00:18:38.190 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner.type
[DEBUG] 2022-02-16 00:18:38.190 [main] MetamodelGraphWalker - Visiting attribute path : amountOfMoney
[DEBUG] 2022-02-16 00:18:38.190 [main] MetamodelGraphWalker - Visiting attribute path : bankProducer
[DEBUG] 2022-02-16 00:18:38.190 [main] MetamodelGraphWalker - Property path deemed to be circular : bankProducer
[DEBUG] 2022-02-16 00:18:38.190 [main] MetamodelGraphWalker - Visiting attribute path : currency
[DEBUG] 2022-02-16 00:18:38.190 [main] MetamodelGraphWalker - Visiting attribute path : receivedTransactions
[DEBUG] 2022-02-16 00:18:38.190 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56399b9e]
[DEBUG] 2022-02-16 00:18:38.190 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34b9eb03]
[DEBUG] 2022-02-16 00:18:38.190 [main] MetamodelGraphWalker - Visiting attribute path : sentTransactions
[DEBUG] 2022-02-16 00:18:38.190 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43fda8d9]
[DEBUG] 2022-02-16 00:18:38.190 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49d831c2]
[DEBUG] 2022-02-16 00:18:38.190 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-02-16 00:18:38.190 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-02-16 00:18:38.191 [main] LoadPlanTreePrinter - LoadPlan(collection=by.ganevich.entity.Bank.bankAccounts)
    - Returns
       - CollectionReturnImpl(collection=by.ganevich.entity.Bank.bankAccounts, querySpaceUid=<gen:0>, path=[by.ganevich.entity.Bank.bankAccounts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:1>, path=[by.ganevich.entity.Bank.bankAccounts].<elements>)
             - EntityAttributeFetchImpl(entity=by.ganevich.entity.Client, querySpaceUid=<gen:2>, path=[by.ganevich.entity.Bank.bankAccounts].<elements>.accountOwner)
                - CollectionAttributeFetchImpl(collection=by.ganevich.entity.Client.sentTransactions, querySpaceUid=<gen:3>, path=[by.ganevich.entity.Bank.bankAccounts].<elements>.accountOwner.sentTransactions)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:4>, path=[by.ganevich.entity.Bank.bankAccounts].<elements>.accountOwner.sentTransactions.<elements>)
             - CollectionAttributeFetchImpl(collection=by.ganevich.entity.BankAccount.receivedTransactions, querySpaceUid=<gen:5>, path=[by.ganevich.entity.Bank.bankAccounts].<elements>.receivedTransactions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:6>, path=[by.ganevich.entity.Bank.bankAccounts].<elements>.receivedTransactions.<elements>)
             - CollectionAttributeFetchImpl(collection=by.ganevich.entity.BankAccount.sentTransactions, querySpaceUid=<gen:7>, path=[by.ganevich.entity.Bank.bankAccounts].<elements>.sentTransactions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:8>, path=[by.ganevich.entity.Bank.bankAccounts].<elements>.sentTransactions.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=by.ganevich.entity.Bank.bankAccounts)
          - SQL table alias mapping - bankaccoun0_
          - alias suffix - 0_
          - suffixed key columns - {bankid5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=by.ganevich.entity.BankAccount)
                - SQL table alias mapping - bankaccoun0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(accountOwner)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=by.ganevich.entity.Client)
                      - SQL table alias mapping - client1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}

[DEBUG] 2022-02-16 00:18:38.191 [main] CollectionLoader - Static select for collection by.ganevich.entity.Bank.bankAccounts: select bankaccoun0_.bankId as bankid5_0_0_, bankaccoun0_.id as id1_0_0_, bankaccoun0_.id as id1_0_1_, bankaccoun0_.clientId as clientid4_0_1_, bankaccoun0_.ammountOfMoney as ammounto2_0_1_, bankaccoun0_.bankId as bankid5_0_1_, bankaccoun0_.currency as currency3_0_1_, client1_.id as id1_2_2_, client1_.name as name2_2_2_, client1_.type as type3_2_2_ from bankAccounts bankaccoun0_ left outer join clients client1_ on bankaccoun0_.clientId=client1_.id where bankaccoun0_.bankId=?
[DEBUG] 2022-02-16 00:18:38.191 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53a7a60c]
[DEBUG] 2022-02-16 00:18:38.191 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28bdbe88]
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Visiting attribute path : amountOfMoney
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Visiting attribute path : date
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount
[DEBUG] 2022-02-16 00:18:38.191 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@600f5704]
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner
[DEBUG] 2022-02-16 00:18:38.191 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@606f81b5]
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.bankAccounts
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.accountOwner.bankAccounts
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.name
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.sentTransactions
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.accountOwner.sentTransactions
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.accountOwner.type
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.amountOfMoney
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.bankProducer
[DEBUG] 2022-02-16 00:18:38.191 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44b21f9f]
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.bankProducer.bankAccounts
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.bankProducer.bankAccounts
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.bankProducer.commission
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.bankProducer.name
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.currency
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.receivedTransactions
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Property path deemed to be circular : receiverAccount.receivedTransactions
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Visiting attribute path : receiverAccount.sentTransactions
[DEBUG] 2022-02-16 00:18:38.191 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6296474f]
[DEBUG] 2022-02-16 00:18:38.191 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4288d98e]
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Visiting attribute path : sender
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Property path deemed to be circular : sender
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount
[DEBUG] 2022-02-16 00:18:38.191 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@169268a7]
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.accountOwner
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Property path deemed to be circular : senderAccount.accountOwner
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.amountOfMoney
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.bankProducer
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Property path deemed to be circular : senderAccount.bankProducer
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.currency
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.receivedTransactions
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Property path deemed to be circular : senderAccount.receivedTransactions
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Visiting attribute path : senderAccount.sentTransactions
[DEBUG] 2022-02-16 00:18:38.191 [main] MetamodelGraphWalker - Property path deemed to be circular : senderAccount.sentTransactions
[DEBUG] 2022-02-16 00:18:38.192 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-02-16 00:18:38.192 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-02-16 00:18:38.192 [main] LoadPlanTreePrinter - LoadPlan(collection=by.ganevich.entity.Client.sentTransactions)
    - Returns
       - CollectionReturnImpl(collection=by.ganevich.entity.Client.sentTransactions, querySpaceUid=<gen:0>, path=[by.ganevich.entity.Client.sentTransactions])
          - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:1>, path=[by.ganevich.entity.Client.sentTransactions].<elements>)
             - EntityAttributeFetchImpl(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:2>, path=[by.ganevich.entity.Client.sentTransactions].<elements>.receiverAccount)
                - EntityAttributeFetchImpl(entity=by.ganevich.entity.Client, querySpaceUid=<gen:3>, path=[by.ganevich.entity.Client.sentTransactions].<elements>.receiverAccount.accountOwner)
                - EntityAttributeFetchImpl(entity=by.ganevich.entity.Bank, querySpaceUid=<gen:4>, path=[by.ganevich.entity.Client.sentTransactions].<elements>.receiverAccount.bankProducer)
                - CollectionAttributeFetchImpl(collection=by.ganevich.entity.BankAccount.sentTransactions, querySpaceUid=<gen:5>, path=[by.ganevich.entity.Client.sentTransactions].<elements>.receiverAccount.sentTransactions)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:6>, path=[by.ganevich.entity.Client.sentTransactions].<elements>.receiverAccount.sentTransactions.<elements>)
             - EntityAttributeFetchImpl(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:7>, path=[by.ganevich.entity.Client.sentTransactions].<elements>.senderAccount)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=by.ganevich.entity.Client.sentTransactions)
          - SQL table alias mapping - senttransa0_
          - alias suffix - 0_
          - suffixed key columns - {sender5_5_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=by.ganevich.entity.Transaction)
                - SQL table alias mapping - senttransa0_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}
                - JOIN (JoinDefinedByMetadata(receiverAccount)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=by.ganevich.entity.BankAccount)
                      - SQL table alias mapping - bankaccoun1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(accountOwner)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=by.ganevich.entity.Client)
                            - SQL table alias mapping - client2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}
                      - JOIN (JoinDefinedByMetadata(bankProducer)) : <gen:2> -> <gen:4>
                         - EntityQuerySpaceImpl(uid=<gen:4>, entity=by.ganevich.entity.Bank)
                            - SQL table alias mapping - bank3_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_1_4_}
                - JOIN (JoinDefinedByMetadata(senderAccount)) : <gen:1> -> <gen:7>
                   - EntityQuerySpaceImpl(uid=<gen:7>, entity=by.ganevich.entity.BankAccount)
                      - SQL table alias mapping - bankaccoun4_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_0_5_}

[DEBUG] 2022-02-16 00:18:38.192 [main] CollectionLoader - Static select for collection by.ganevich.entity.Client.sentTransactions: select senttransa0_.sender as sender5_5_0_, senttransa0_.id as id1_5_0_, senttransa0_.id as id1_5_1_, senttransa0_.amountofmoney as amountof2_5_1_, senttransa0_.date as date3_5_1_, senttransa0_.recipientAccountId as recipien4_5_1_, senttransa0_.sender as sender5_5_1_, senttransa0_.senderAccountId as senderac6_5_1_, bankaccoun1_.id as id1_0_2_, bankaccoun1_.clientId as clientid4_0_2_, bankaccoun1_.ammountOfMoney as ammounto2_0_2_, bankaccoun1_.bankId as bankid5_0_2_, bankaccoun1_.currency as currency3_0_2_, client2_.id as id1_2_3_, client2_.name as name2_2_3_, client2_.type as type3_2_3_, bank3_.id as id1_1_4_, bank3_.commission as commissi2_1_4_, bank3_.name as name3_1_4_, bankaccoun4_.id as id1_0_5_, bankaccoun4_.clientId as clientid4_0_5_, bankaccoun4_.ammountOfMoney as ammounto2_0_5_, bankaccoun4_.bankId as bankid5_0_5_, bankaccoun4_.currency as currency3_0_5_ from transactions senttransa0_ left outer join bankAccounts bankaccoun1_ on senttransa0_.recipientAccountId=bankaccoun1_.id left outer join clients client2_ on bankaccoun1_.clientId=client2_.id left outer join banks bank3_ on bankaccoun1_.bankId=bank3_.id left outer join bankAccounts bankaccoun4_ on senttransa0_.senderAccountId=bankaccoun4_.id where senttransa0_.sender=?
[DEBUG] 2022-02-16 00:18:38.192 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@78a0ff63]
[DEBUG] 2022-02-16 00:18:38.192 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c601d50]
[DEBUG] 2022-02-16 00:18:38.192 [main] MetamodelGraphWalker - Visiting attribute path : accountOwner
[DEBUG] 2022-02-16 00:18:38.192 [main] MetamodelGraphWalker - Property path deemed to be circular : accountOwner
[DEBUG] 2022-02-16 00:18:38.192 [main] MetamodelGraphWalker - Visiting attribute path : amountOfMoney
[DEBUG] 2022-02-16 00:18:38.192 [main] MetamodelGraphWalker - Visiting attribute path : bankProducer
[DEBUG] 2022-02-16 00:18:38.192 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d499d65]
[DEBUG] 2022-02-16 00:18:38.192 [main] MetamodelGraphWalker - Visiting attribute path : bankProducer.bankAccounts
[DEBUG] 2022-02-16 00:18:38.192 [main] MetamodelGraphWalker - Property path deemed to be circular : bankProducer.bankAccounts
[DEBUG] 2022-02-16 00:18:38.193 [main] MetamodelGraphWalker - Visiting attribute path : bankProducer.commission
[DEBUG] 2022-02-16 00:18:38.193 [main] MetamodelGraphWalker - Visiting attribute path : bankProducer.name
[DEBUG] 2022-02-16 00:18:38.193 [main] MetamodelGraphWalker - Visiting attribute path : currency
[DEBUG] 2022-02-16 00:18:38.193 [main] MetamodelGraphWalker - Visiting attribute path : receivedTransactions
[DEBUG] 2022-02-16 00:18:38.193 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5cc9d3d0]
[DEBUG] 2022-02-16 00:18:38.193 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c2dfa2]
[DEBUG] 2022-02-16 00:18:38.193 [main] MetamodelGraphWalker - Visiting attribute path : sentTransactions
[DEBUG] 2022-02-16 00:18:38.193 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@661d88a]
[DEBUG] 2022-02-16 00:18:38.193 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b0b64cc]
[DEBUG] 2022-02-16 00:18:38.193 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-02-16 00:18:38.193 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-02-16 00:18:38.194 [main] LoadPlanTreePrinter - LoadPlan(collection=by.ganevich.entity.Client.bankAccounts)
    - Returns
       - CollectionReturnImpl(collection=by.ganevich.entity.Client.bankAccounts, querySpaceUid=<gen:0>, path=[by.ganevich.entity.Client.bankAccounts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.BankAccount, querySpaceUid=<gen:1>, path=[by.ganevich.entity.Client.bankAccounts].<elements>)
             - EntityAttributeFetchImpl(entity=by.ganevich.entity.Bank, querySpaceUid=<gen:2>, path=[by.ganevich.entity.Client.bankAccounts].<elements>.bankProducer)
             - CollectionAttributeFetchImpl(collection=by.ganevich.entity.BankAccount.receivedTransactions, querySpaceUid=<gen:3>, path=[by.ganevich.entity.Client.bankAccounts].<elements>.receivedTransactions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:4>, path=[by.ganevich.entity.Client.bankAccounts].<elements>.receivedTransactions.<elements>)
             - CollectionAttributeFetchImpl(collection=by.ganevich.entity.BankAccount.sentTransactions, querySpaceUid=<gen:5>, path=[by.ganevich.entity.Client.bankAccounts].<elements>.sentTransactions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=by.ganevich.entity.Transaction, querySpaceUid=<gen:6>, path=[by.ganevich.entity.Client.bankAccounts].<elements>.sentTransactions.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=by.ganevich.entity.Client.bankAccounts)
          - SQL table alias mapping - bankaccoun0_
          - alias suffix - 0_
          - suffixed key columns - {clientid4_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=by.ganevich.entity.BankAccount)
                - SQL table alias mapping - bankaccoun0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(bankProducer)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=by.ganevich.entity.Bank)
                      - SQL table alias mapping - bank1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}

[DEBUG] 2022-02-16 00:18:38.194 [main] CollectionLoader - Static select for collection by.ganevich.entity.Client.bankAccounts: select bankaccoun0_.clientId as clientid4_0_0_, bankaccoun0_.id as id1_0_0_, bankaccoun0_.id as id1_0_1_, bankaccoun0_.clientId as clientid4_0_1_, bankaccoun0_.ammountOfMoney as ammounto2_0_1_, bankaccoun0_.bankId as bankid5_0_1_, bankaccoun0_.currency as currency3_0_1_, bank1_.id as id1_1_2_, bank1_.commission as commissi2_1_2_, bank1_.name as name3_1_2_ from bankAccounts bankaccoun0_ left outer join banks bank1_ on bankaccoun0_.bankId=bank1_.id where bankaccoun0_.clientId=?
[DEBUG] 2022-02-16 00:18:38.221 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2022-02-16 00:18:38.221 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2022-02-16 00:18:38.221 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2022-02-16 00:18:38.226 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2022-02-16 00:18:38.226 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2022-02-16 00:18:38.227 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2022-02-16 00:18:38.227 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2022-02-16 00:18:38.230 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-02-16 00:18:38.234 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7bac686b
[DEBUG] 2022-02-16 00:18:38.234 [main] SessionFactoryRegistry - Registering SessionFactory: 3120a8b3-5d2f-43fe-bd0c-4483a2a265db (<unnamed>)
[DEBUG] 2022-02-16 00:18:38.234 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[INFO ] 2022-02-16 00:18:38.234 [main] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[DEBUG] 2022-02-16 00:18:38.272 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'jpaMappingContext'
[DEBUG] 2022-02-16 00:18:38.281 [main] JpaMetamodelMappingContextFactoryBean - Initializing JpaMetamodelMappingContext…
[DEBUG] 2022-02-16 00:18:38.305 [main] JpaMetamodelMappingContextFactoryBean - Finished initializing JpaMetamodelMappingContext!
[DEBUG] 2022-02-16 00:18:38.341 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:18:38.399 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2022-02-16 00:18:38.425 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:18:38.486 [main] RepositoryFactorySupport - Initializing repository instance for by.ganevich.repository.BankRepository…
[DEBUG] 2022-02-16 00:18:38.507 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:18:38.592 [main] NamedQuery - Looking up named query Bank.findByName
[DEBUG] 2022-02-16 00:18:38.596 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-02-16 00:18:38.597 [main] NamedQuery - Did not find named query Bank.findByName
[DEBUG] 2022-02-16 00:18:38.598 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:18:38.654 [main] RepositoryFactorySupport - Finished creation of repository instance for {}.
[DEBUG] 2022-02-16 00:18:38.655 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'bankService' via constructor to bean named 'bankRepository'
[DEBUG] 2022-02-16 00:18:38.658 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'bankMenuInteractive' via constructor to bean named 'bankService'
[DEBUG] 2022-02-16 00:18:38.659 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'clientMenuInteractive'
[DEBUG] 2022-02-16 00:18:38.660 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'clientService'
[DEBUG] 2022-02-16 00:18:38.661 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'clientRepository'
[DEBUG] 2022-02-16 00:18:38.664 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:18:38.665 [main] RepositoryFactorySupport - Initializing repository instance for by.ganevich.repository.ClientRepository…
[DEBUG] 2022-02-16 00:18:38.666 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:18:38.679 [main] NamedQuery - Looking up named query Client.findByName
[DEBUG] 2022-02-16 00:18:38.679 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-02-16 00:18:38.680 [main] NamedQuery - Did not find named query Client.findByName
[DEBUG] 2022-02-16 00:18:38.680 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:18:38.683 [main] RepositoryFactorySupport - Finished creation of repository instance for {}.
[DEBUG] 2022-02-16 00:18:38.684 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'bankAccountRepository'
[DEBUG] 2022-02-16 00:18:38.686 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:18:38.687 [main] RepositoryFactorySupport - Initializing repository instance for by.ganevich.repository.BankAccountRepository…
[DEBUG] 2022-02-16 00:18:38.688 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:18:38.703 [main] NamedQuery - Looking up named query BankAccount.findBankAccountByAccountOwner
[DEBUG] 2022-02-16 00:18:38.704 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-02-16 00:18:38.704 [main] NamedQuery - Did not find named query BankAccount.findBankAccountByAccountOwner
[DEBUG] 2022-02-16 00:18:38.704 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:18:38.705 [main] NamedQuery - Looking up named query BankAccount.findBankAccountByAccountOwnerAndBankProducer
[DEBUG] 2022-02-16 00:18:38.705 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-02-16 00:18:38.705 [main] NamedQuery - Did not find named query BankAccount.findBankAccountByAccountOwnerAndBankProducer
[DEBUG] 2022-02-16 00:18:38.705 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:18:38.710 [main] RepositoryFactorySupport - Finished creation of repository instance for {}.
[DEBUG] 2022-02-16 00:18:38.710 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'clientService' via constructor to bean named 'clientRepository'
[DEBUG] 2022-02-16 00:18:38.710 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'clientService' via constructor to bean named 'bankAccountRepository'
[DEBUG] 2022-02-16 00:18:38.711 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'bankAccountService'
[DEBUG] 2022-02-16 00:18:38.713 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'bankAccountService' via constructor to bean named 'bankAccountRepository'
[DEBUG] 2022-02-16 00:18:38.714 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionService'
[DEBUG] 2022-02-16 00:18:38.716 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionRepository'
[DEBUG] 2022-02-16 00:18:38.719 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:18:38.720 [main] RepositoryFactorySupport - Initializing repository instance for by.ganevich.repository.TransactionRepository…
[DEBUG] 2022-02-16 00:18:38.721 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:18:38.735 [main] NamedQuery - Looking up named query Transaction.findAllByDateBetweenAndSender
[DEBUG] 2022-02-16 00:18:38.735 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-02-16 00:18:38.735 [main] NamedQuery - Did not find named query Transaction.findAllByDateBetweenAndSender
[DEBUG] 2022-02-16 00:18:38.735 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:18:38.739 [main] RepositoryFactorySupport - Finished creation of repository instance for {}.
[DEBUG] 2022-02-16 00:18:38.740 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'rateService'
[DEBUG] 2022-02-16 00:18:38.741 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'rateRepository'
[DEBUG] 2022-02-16 00:18:38.745 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:18:38.748 [main] RepositoryFactorySupport - Initializing repository instance for by.ganevich.repository.RateRepository…
[DEBUG] 2022-02-16 00:18:38.749 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:18:38.764 [main] NamedQuery - Looking up named query Rate.findRateByCurrency
[DEBUG] 2022-02-16 00:18:38.764 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-02-16 00:18:38.764 [main] NamedQuery - Did not find named query Rate.findRateByCurrency
[DEBUG] 2022-02-16 00:18:38.765 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:18:38.768 [main] RepositoryFactorySupport - Finished creation of repository instance for {}.
[DEBUG] 2022-02-16 00:18:38.769 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'rateService' via constructor to bean named 'rateRepository'
[DEBUG] 2022-02-16 00:18:38.769 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'commissionService'
[DEBUG] 2022-02-16 00:18:38.771 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'commissionRepository'
[DEBUG] 2022-02-16 00:18:38.775 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:18:38.779 [main] RepositoryFactorySupport - Initializing repository instance for by.ganevich.repository.CommissionRepository…
[DEBUG] 2022-02-16 00:18:38.779 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:18:38.795 [main] NamedQuery - Looking up named query Commission.findCommissionByClientType
[DEBUG] 2022-02-16 00:18:38.795 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-02-16 00:18:38.795 [main] NamedQuery - Did not find named query Commission.findCommissionByClientType
[DEBUG] 2022-02-16 00:18:38.795 [main] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2022-02-16 00:18:38.799 [main] RepositoryFactorySupport - Finished creation of repository instance for {}.
[DEBUG] 2022-02-16 00:18:38.799 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'commissionService' via constructor to bean named 'commissionRepository'
[DEBUG] 2022-02-16 00:18:38.800 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'transactionService' via constructor to bean named 'transactionRepository'
[DEBUG] 2022-02-16 00:18:38.800 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'transactionService' via constructor to bean named 'bankAccountService'
[DEBUG] 2022-02-16 00:18:38.800 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'transactionService' via constructor to bean named 'rateService'
[DEBUG] 2022-02-16 00:18:38.800 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'transactionService' via constructor to bean named 'commissionService'
[DEBUG] 2022-02-16 00:18:38.800 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'clientMenuInteractive' via constructor to bean named 'clientService'
[DEBUG] 2022-02-16 00:18:38.801 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'clientMenuInteractive' via constructor to bean named 'bankService'
[DEBUG] 2022-02-16 00:18:38.801 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'clientMenuInteractive' via constructor to bean named 'bankAccountService'
[DEBUG] 2022-02-16 00:18:38.801 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'clientMenuInteractive' via constructor to bean named 'transactionService'
[DEBUG] 2022-02-16 00:18:38.801 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'bankAccountMenuInteractive'
[DEBUG] 2022-02-16 00:18:38.803 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'bankAccountMenuInteractive' via constructor to bean named 'bankAccountService'
[DEBUG] 2022-02-16 00:18:38.803 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'bankAccountMenuInteractive' via constructor to bean named 'clientService'
[DEBUG] 2022-02-16 00:18:38.804 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionMenuInteractive'
[DEBUG] 2022-02-16 00:18:38.805 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'transactionMenuInteractive' via constructor to bean named 'transactionService'
[DEBUG] 2022-02-16 00:18:38.805 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'transactionMenuInteractive' via constructor to bean named 'clientService'
[DEBUG] 2022-02-16 00:18:38.805 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'transactionMenuInteractive' via constructor to bean named 'bankService'
[DEBUG] 2022-02-16 00:18:38.805 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'transactionMenuInteractive' via constructor to bean named 'bankAccountService'
[DEBUG] 2022-02-16 00:18:38.806 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionManager'
[DEBUG] 2022-02-16 00:18:38.830 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'entityManager'
[DEBUG] 2022-02-16 00:18:38.831 [main] DefaultListableBeanFactory - Autowiring by type from bean name 'entityManager' via factory method to bean named 'entityManagerFactory'
[DEBUG] 2022-02-16 00:18:38.849 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
[DEBUG] 2022-02-16 00:18:38.850 [main] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
